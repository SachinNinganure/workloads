---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.33/23"],"mac_address":"0a:58:0a:81:00:21","gateway_ips":["10.129.0.1"],"ip_address":"10.129.0.33/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.33"
            ],
            "mac": "0a:58:0a:81:00:21",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.33"
            ],
            "mac": "0a:58:0a:81:00:21",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:45:48Z"
    labels:
      app: installer
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9c27742f-15d6-4e7f-8596-2a3d2d9f066b"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"installer"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lock"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lock"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-01-09T04:45:48Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:45:48Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:45:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.33"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:46:29Z"
    name: installer-4-ip-10-0-199-219.us-east-2.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-4
      uid: 9c27742f-15d6-4e7f-8596-2a3d2d9f066b
    resourceVersion: "18681"
    uid: 73d73032-ea5c-443e-8000-f0fea26d44d4
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=2
      - --revision=4
      - --namespace=openshift-kube-apiserver
      - --pod=kube-apiserver-pod
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --pod-manifest-dir=/etc/kubernetes/manifests
      - --configmaps=kube-apiserver-pod
      - --configmaps=config
      - --configmaps=kube-apiserver-cert-syncer-kubeconfig
      - --optional-configmaps=oauth-metadata
      - --optional-configmaps=cloud-config
      - --configmaps=bound-sa-token-signing-certs
      - --configmaps=etcd-serving-ca
      - --optional-configmaps=kube-apiserver-server-ca
      - --configmaps=kubelet-serving-ca
      - --configmaps=sa-token-signing-certs
      - --configmaps=kube-apiserver-audit-policies
      - --secrets=etcd-client
      - --optional-secrets=encryption-config
      - --secrets=localhost-recovery-serving-certkey
      - --secrets=localhost-recovery-client-token
      - --optional-secrets=webhook-authenticator
      - --cert-dir=/etc/kubernetes/static-pod-resources/kube-apiserver-certs
      - --cert-configmaps=aggregator-client-ca
      - --cert-configmaps=client-ca
      - --optional-cert-configmaps=trusted-ca-bundle
      - --cert-configmaps=control-plane-node-kubeconfig
      - --cert-configmaps=check-endpoints-kubeconfig
      - --cert-secrets=aggregator-client
      - --cert-secrets=localhost-serving-cert-certkey
      - --cert-secrets=service-network-serving-certkey
      - --cert-secrets=external-loadbalancer-serving-certkey
      - --cert-secrets=internal-loadbalancer-serving-certkey
      - --cert-secrets=bound-service-account-signing-key
      - --cert-secrets=control-plane-node-admin-client-cert-key
      - --cert-secrets=check-endpoints-client-cert-key
      - --cert-secrets=kubelet-client
      - --cert-secrets=node-kubeconfigs
      - --optional-cert-secrets=user-serving-cert
      - --optional-cert-secrets=user-serving-cert-000
      - --optional-cert-secrets=user-serving-cert-001
      - --optional-cert-secrets=user-serving-cert-002
      - --optional-cert-secrets=user-serving-cert-003
      - --optional-cert-secrets=user-serving-cert-004
      - --optional-cert-secrets=user-serving-cert-005
      - --optional-cert-secrets=user-serving-cert-006
      - --optional-cert-secrets=user-serving-cert-007
      - --optional-cert-secrets=user-serving-cert-008
      - --optional-cert-secrets=user-serving-cert-009
      command:
      - cluster-kube-apiserver-operator
      - installer
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: installer
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
      - mountPath: /var/lock
        name: var-lock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tzd2r
    nodeName: ip-10-0-199-219.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - hostPath:
        path: /var/lock
        type: ""
      name: var-lock
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:45:48Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:46:27Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:46:27Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:45:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://0f49112672c4ad3ddf9468f0b86ed7049be9d54c0d7da6f5ff34d4d76efaa4c3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: installer
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://0f49112672c4ad3ddf9468f0b86ed7049be9d54c0d7da6f5ff34d4d76efaa4c3
          exitCode: 0
          finishedAt: "2023-01-09T04:46:27Z"
          reason: Completed
          startedAt: "2023-01-09T04:45:49Z"
    hostIP: 10.0.199.219
    phase: Succeeded
    podIP: 10.129.0.33
    podIPs:
    - ip: 10.129.0.33
    qosClass: Guaranteed
    startTime: "2023-01-09T04:45:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.37/23"],"mac_address":"0a:58:0a:81:00:25","gateway_ips":["10.129.0.1"],"ip_address":"10.129.0.37/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.37"
            ],
            "mac": "0a:58:0a:81:00:25",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.37"
            ],
            "mac": "0a:58:0a:81:00:25",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:46:39Z"
    labels:
      app: installer
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a1dc7f6f-1d14-40d3-9232-62a4d607f2ee"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"installer"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lock"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lock"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-01-09T04:46:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:46:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:46:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.37"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:47:20Z"
    name: installer-5-ip-10-0-199-219.us-east-2.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-5
      uid: a1dc7f6f-1d14-40d3-9232-62a4d607f2ee
    resourceVersion: "20293"
    uid: c858cf48-24fc-4abd-b750-2fa64891e9a0
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=2
      - --revision=5
      - --namespace=openshift-kube-apiserver
      - --pod=kube-apiserver-pod
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --pod-manifest-dir=/etc/kubernetes/manifests
      - --configmaps=kube-apiserver-pod
      - --configmaps=config
      - --configmaps=kube-apiserver-cert-syncer-kubeconfig
      - --optional-configmaps=oauth-metadata
      - --optional-configmaps=cloud-config
      - --configmaps=bound-sa-token-signing-certs
      - --configmaps=etcd-serving-ca
      - --optional-configmaps=kube-apiserver-server-ca
      - --configmaps=kubelet-serving-ca
      - --configmaps=sa-token-signing-certs
      - --configmaps=kube-apiserver-audit-policies
      - --secrets=etcd-client
      - --optional-secrets=encryption-config
      - --secrets=localhost-recovery-serving-certkey
      - --secrets=localhost-recovery-client-token
      - --optional-secrets=webhook-authenticator
      - --cert-dir=/etc/kubernetes/static-pod-resources/kube-apiserver-certs
      - --cert-configmaps=aggregator-client-ca
      - --cert-configmaps=client-ca
      - --optional-cert-configmaps=trusted-ca-bundle
      - --cert-configmaps=control-plane-node-kubeconfig
      - --cert-configmaps=check-endpoints-kubeconfig
      - --cert-secrets=aggregator-client
      - --cert-secrets=localhost-serving-cert-certkey
      - --cert-secrets=service-network-serving-certkey
      - --cert-secrets=external-loadbalancer-serving-certkey
      - --cert-secrets=internal-loadbalancer-serving-certkey
      - --cert-secrets=bound-service-account-signing-key
      - --cert-secrets=control-plane-node-admin-client-cert-key
      - --cert-secrets=check-endpoints-client-cert-key
      - --cert-secrets=kubelet-client
      - --cert-secrets=node-kubeconfigs
      - --optional-cert-secrets=user-serving-cert
      - --optional-cert-secrets=user-serving-cert-000
      - --optional-cert-secrets=user-serving-cert-001
      - --optional-cert-secrets=user-serving-cert-002
      - --optional-cert-secrets=user-serving-cert-003
      - --optional-cert-secrets=user-serving-cert-004
      - --optional-cert-secrets=user-serving-cert-005
      - --optional-cert-secrets=user-serving-cert-006
      - --optional-cert-secrets=user-serving-cert-007
      - --optional-cert-secrets=user-serving-cert-008
      - --optional-cert-secrets=user-serving-cert-009
      command:
      - cluster-kube-apiserver-operator
      - installer
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: installer
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
      - mountPath: /var/lock
        name: var-lock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tzd2r
    nodeName: ip-10-0-199-219.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - hostPath:
        path: /var/lock
        type: ""
      name: var-lock
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:46:39Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:47:18Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:47:18Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:46:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://80e82f7a5cc3570ea698a950a7be3b1d8832f1d034d61cfaff78ac4dc48e7a96
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: installer
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://80e82f7a5cc3570ea698a950a7be3b1d8832f1d034d61cfaff78ac4dc48e7a96
          exitCode: 0
          finishedAt: "2023-01-09T04:47:18Z"
          reason: Completed
          startedAt: "2023-01-09T04:46:40Z"
    hostIP: 10.0.199.219
    phase: Succeeded
    podIP: 10.129.0.37
    podIPs:
    - ip: 10.129.0.37
    qosClass: Guaranteed
    startTime: "2023-01-09T04:46:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.56/23"],"mac_address":"0a:58:0a:80:00:38","gateway_ips":["10.128.0.1"],"ip_address":"10.128.0.56/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.56"
            ],
            "mac": "0a:58:0a:80:00:38",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.56"
            ],
            "mac": "0a:58:0a:80:00:38",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:55:25Z"
    labels:
      app: installer
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"eb5ae56a-1473-44df-8d29-0adc3c634b5e"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"installer"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lock"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lock"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-01-09T04:55:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:55:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:55:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.56"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:56:06Z"
    name: installer-8-ip-10-0-145-4.us-east-2.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-8
      uid: eb5ae56a-1473-44df-8d29-0adc3c634b5e
    resourceVersion: "28830"
    uid: 235673f5-b31f-4dea-90ec-0cf7889fe2c6
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=2
      - --revision=8
      - --namespace=openshift-kube-apiserver
      - --pod=kube-apiserver-pod
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --pod-manifest-dir=/etc/kubernetes/manifests
      - --configmaps=kube-apiserver-pod
      - --configmaps=config
      - --configmaps=kube-apiserver-cert-syncer-kubeconfig
      - --optional-configmaps=oauth-metadata
      - --optional-configmaps=cloud-config
      - --configmaps=bound-sa-token-signing-certs
      - --configmaps=etcd-serving-ca
      - --optional-configmaps=kube-apiserver-server-ca
      - --configmaps=kubelet-serving-ca
      - --configmaps=sa-token-signing-certs
      - --configmaps=kube-apiserver-audit-policies
      - --secrets=etcd-client
      - --optional-secrets=encryption-config
      - --secrets=localhost-recovery-serving-certkey
      - --secrets=localhost-recovery-client-token
      - --optional-secrets=webhook-authenticator
      - --cert-dir=/etc/kubernetes/static-pod-resources/kube-apiserver-certs
      - --cert-configmaps=aggregator-client-ca
      - --cert-configmaps=client-ca
      - --optional-cert-configmaps=trusted-ca-bundle
      - --cert-configmaps=control-plane-node-kubeconfig
      - --cert-configmaps=check-endpoints-kubeconfig
      - --cert-secrets=aggregator-client
      - --cert-secrets=localhost-serving-cert-certkey
      - --cert-secrets=service-network-serving-certkey
      - --cert-secrets=external-loadbalancer-serving-certkey
      - --cert-secrets=internal-loadbalancer-serving-certkey
      - --cert-secrets=bound-service-account-signing-key
      - --cert-secrets=control-plane-node-admin-client-cert-key
      - --cert-secrets=check-endpoints-client-cert-key
      - --cert-secrets=kubelet-client
      - --cert-secrets=node-kubeconfigs
      - --optional-cert-secrets=user-serving-cert
      - --optional-cert-secrets=user-serving-cert-000
      - --optional-cert-secrets=user-serving-cert-001
      - --optional-cert-secrets=user-serving-cert-002
      - --optional-cert-secrets=user-serving-cert-003
      - --optional-cert-secrets=user-serving-cert-004
      - --optional-cert-secrets=user-serving-cert-005
      - --optional-cert-secrets=user-serving-cert-006
      - --optional-cert-secrets=user-serving-cert-007
      - --optional-cert-secrets=user-serving-cert-008
      - --optional-cert-secrets=user-serving-cert-009
      command:
      - cluster-kube-apiserver-operator
      - installer
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: installer
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
      - mountPath: /var/lock
        name: var-lock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tzd2r
    nodeName: ip-10-0-145-4.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - hostPath:
        path: /var/lock
        type: ""
      name: var-lock
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:55:25Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:56:04Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:56:04Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:55:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://fe90c3569a30b4e7ade94e4fd41a21482e0f693c979b02c9a5ca5e339566de70
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: installer
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://fe90c3569a30b4e7ade94e4fd41a21482e0f693c979b02c9a5ca5e339566de70
          exitCode: 0
          finishedAt: "2023-01-09T04:56:03Z"
          reason: Completed
          startedAt: "2023-01-09T04:55:26Z"
    hostIP: 10.0.145.4
    phase: Succeeded
    podIP: 10.128.0.56
    podIPs:
    - ip: 10.128.0.56
    qosClass: Guaranteed
    startTime: "2023-01-09T04:55:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.78/23"],"mac_address":"0a:58:0a:82:00:4e","gateway_ips":["10.130.0.1"],"ip_address":"10.130.0.78/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.78"
            ],
            "mac": "0a:58:0a:82:00:4e",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.78"
            ],
            "mac": "0a:58:0a:82:00:4e",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:53:45Z"
    labels:
      app: installer
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"eb5ae56a-1473-44df-8d29-0adc3c634b5e"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"installer"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lock"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lock"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-01-09T04:53:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:53:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:53:46Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.78"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:54:26Z"
    name: installer-8-ip-10-0-160-211.us-east-2.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-8
      uid: eb5ae56a-1473-44df-8d29-0adc3c634b5e
    resourceVersion: "27930"
    uid: f64ec4f1-1e4f-49ec-a0c9-ad5c21be5fed
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=2
      - --revision=8
      - --namespace=openshift-kube-apiserver
      - --pod=kube-apiserver-pod
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --pod-manifest-dir=/etc/kubernetes/manifests
      - --configmaps=kube-apiserver-pod
      - --configmaps=config
      - --configmaps=kube-apiserver-cert-syncer-kubeconfig
      - --optional-configmaps=oauth-metadata
      - --optional-configmaps=cloud-config
      - --configmaps=bound-sa-token-signing-certs
      - --configmaps=etcd-serving-ca
      - --optional-configmaps=kube-apiserver-server-ca
      - --configmaps=kubelet-serving-ca
      - --configmaps=sa-token-signing-certs
      - --configmaps=kube-apiserver-audit-policies
      - --secrets=etcd-client
      - --optional-secrets=encryption-config
      - --secrets=localhost-recovery-serving-certkey
      - --secrets=localhost-recovery-client-token
      - --optional-secrets=webhook-authenticator
      - --cert-dir=/etc/kubernetes/static-pod-resources/kube-apiserver-certs
      - --cert-configmaps=aggregator-client-ca
      - --cert-configmaps=client-ca
      - --optional-cert-configmaps=trusted-ca-bundle
      - --cert-configmaps=control-plane-node-kubeconfig
      - --cert-configmaps=check-endpoints-kubeconfig
      - --cert-secrets=aggregator-client
      - --cert-secrets=localhost-serving-cert-certkey
      - --cert-secrets=service-network-serving-certkey
      - --cert-secrets=external-loadbalancer-serving-certkey
      - --cert-secrets=internal-loadbalancer-serving-certkey
      - --cert-secrets=bound-service-account-signing-key
      - --cert-secrets=control-plane-node-admin-client-cert-key
      - --cert-secrets=check-endpoints-client-cert-key
      - --cert-secrets=kubelet-client
      - --cert-secrets=node-kubeconfigs
      - --optional-cert-secrets=user-serving-cert
      - --optional-cert-secrets=user-serving-cert-000
      - --optional-cert-secrets=user-serving-cert-001
      - --optional-cert-secrets=user-serving-cert-002
      - --optional-cert-secrets=user-serving-cert-003
      - --optional-cert-secrets=user-serving-cert-004
      - --optional-cert-secrets=user-serving-cert-005
      - --optional-cert-secrets=user-serving-cert-006
      - --optional-cert-secrets=user-serving-cert-007
      - --optional-cert-secrets=user-serving-cert-008
      - --optional-cert-secrets=user-serving-cert-009
      command:
      - cluster-kube-apiserver-operator
      - installer
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: installer
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
      - mountPath: /var/lock
        name: var-lock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tzd2r
    nodeName: ip-10-0-160-211.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - hostPath:
        path: /var/lock
        type: ""
      name: var-lock
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:53:45Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:54:24Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:54:24Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:53:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://08af22a787bb5ef2708e1acc8655ab8e07d9c5f1c29ea32b7053b047a8559ce4
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: installer
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://08af22a787bb5ef2708e1acc8655ab8e07d9c5f1c29ea32b7053b047a8559ce4
          exitCode: 0
          finishedAt: "2023-01-09T04:54:24Z"
          reason: Completed
          startedAt: "2023-01-09T04:53:46Z"
    hostIP: 10.0.160.211
    phase: Succeeded
    podIP: 10.130.0.78
    podIPs:
    - ip: 10.130.0.78
    qosClass: Guaranteed
    startTime: "2023-01-09T04:53:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.49/23"],"mac_address":"0a:58:0a:81:00:31","gateway_ips":["10.129.0.1"],"ip_address":"10.129.0.49/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.49"
            ],
            "mac": "0a:58:0a:81:00:31",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.49"
            ],
            "mac": "0a:58:0a:81:00:31",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:49:57Z"
    labels:
      app: installer
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"eb5ae56a-1473-44df-8d29-0adc3c634b5e"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"installer"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lock"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lock"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-01-09T04:49:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:49:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:49:58Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.49"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:50:39Z"
    name: installer-8-ip-10-0-199-219.us-east-2.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-8
      uid: eb5ae56a-1473-44df-8d29-0adc3c634b5e
    resourceVersion: "25600"
    uid: 4951cbe6-4318-48f5-bf19-28b47d481f83
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=2
      - --revision=8
      - --namespace=openshift-kube-apiserver
      - --pod=kube-apiserver-pod
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --pod-manifest-dir=/etc/kubernetes/manifests
      - --configmaps=kube-apiserver-pod
      - --configmaps=config
      - --configmaps=kube-apiserver-cert-syncer-kubeconfig
      - --optional-configmaps=oauth-metadata
      - --optional-configmaps=cloud-config
      - --configmaps=bound-sa-token-signing-certs
      - --configmaps=etcd-serving-ca
      - --optional-configmaps=kube-apiserver-server-ca
      - --configmaps=kubelet-serving-ca
      - --configmaps=sa-token-signing-certs
      - --configmaps=kube-apiserver-audit-policies
      - --secrets=etcd-client
      - --optional-secrets=encryption-config
      - --secrets=localhost-recovery-serving-certkey
      - --secrets=localhost-recovery-client-token
      - --optional-secrets=webhook-authenticator
      - --cert-dir=/etc/kubernetes/static-pod-resources/kube-apiserver-certs
      - --cert-configmaps=aggregator-client-ca
      - --cert-configmaps=client-ca
      - --optional-cert-configmaps=trusted-ca-bundle
      - --cert-configmaps=control-plane-node-kubeconfig
      - --cert-configmaps=check-endpoints-kubeconfig
      - --cert-secrets=aggregator-client
      - --cert-secrets=localhost-serving-cert-certkey
      - --cert-secrets=service-network-serving-certkey
      - --cert-secrets=external-loadbalancer-serving-certkey
      - --cert-secrets=internal-loadbalancer-serving-certkey
      - --cert-secrets=bound-service-account-signing-key
      - --cert-secrets=control-plane-node-admin-client-cert-key
      - --cert-secrets=check-endpoints-client-cert-key
      - --cert-secrets=kubelet-client
      - --cert-secrets=node-kubeconfigs
      - --optional-cert-secrets=user-serving-cert
      - --optional-cert-secrets=user-serving-cert-000
      - --optional-cert-secrets=user-serving-cert-001
      - --optional-cert-secrets=user-serving-cert-002
      - --optional-cert-secrets=user-serving-cert-003
      - --optional-cert-secrets=user-serving-cert-004
      - --optional-cert-secrets=user-serving-cert-005
      - --optional-cert-secrets=user-serving-cert-006
      - --optional-cert-secrets=user-serving-cert-007
      - --optional-cert-secrets=user-serving-cert-008
      - --optional-cert-secrets=user-serving-cert-009
      command:
      - cluster-kube-apiserver-operator
      - installer
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: installer
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
      - mountPath: /var/lock
        name: var-lock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tzd2r
    nodeName: ip-10-0-199-219.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - hostPath:
        path: /var/lock
        type: ""
      name: var-lock
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:57Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:50:37Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:50:37Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://bf9735635a19cd72d5ad0a39deffc5eb93ec63329e8259f4561fd614458f849d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: installer
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://bf9735635a19cd72d5ad0a39deffc5eb93ec63329e8259f4561fd614458f849d
          exitCode: 0
          finishedAt: "2023-01-09T04:50:36Z"
          reason: Completed
          startedAt: "2023-01-09T04:49:59Z"
    hostIP: 10.0.199.219
    phase: Succeeded
    podIP: 10.129.0.49
    podIPs:
    - ip: 10.129.0.49
    qosClass: Guaranteed
    startTime: "2023-01-09T04:49:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.58/23"],"mac_address":"0a:58:0a:80:00:3a","gateway_ips":["10.128.0.1"],"ip_address":"10.128.0.58/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.58"
            ],
            "mac": "0a:58:0a:80:00:3a",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.58"
            ],
            "mac": "0a:58:0a:80:00:3a",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:56:16Z"
    labels:
      app: guard
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:containers:
            k:{"name":"guard"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:host: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-01-09T04:56:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:56:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:56:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.58"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:56:18Z"
    name: kube-apiserver-guard-ip-10-0-145-4.us-east-2.compute.internal
    namespace: openshift-kube-apiserver
    resourceVersion: "29031"
    uid: 6944b21c-0c29-4112-b560-39203dd5da80
  spec:
    containers:
    - args:
      - -c
      - |
        # properly handle TERM and exit as soon as it is signaled
        set -euo pipefail
        trap 'jobs -p | xargs -r kill; exit 0' TERM
        sleep infinity & wait
      command:
      - /bin/bash
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: guard
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 10.0.145.4
          path: healthz
          port: 6443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 5Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82l2p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: guard-60c99a8951d25651a8d60b67063b81e0c79a8fb2-end
    imagePullSecrets:
    - name: default-dockercfg-jxjhs
    nodeName: ip-10-0-145-4.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 3
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/etcd
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-82l2p
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:56:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:56:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:56:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:56:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://58cedce8d02a4ff10b35604beec74e8646e6283ef86a28fa67ce11f52a0dd6d5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: guard
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:56:17Z"
    hostIP: 10.0.145.4
    phase: Running
    podIP: 10.128.0.58
    podIPs:
    - ip: 10.128.0.58
    qosClass: Burstable
    startTime: "2023-01-09T04:56:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.79/23"],"mac_address":"0a:58:0a:82:00:4f","gateway_ips":["10.130.0.1"],"ip_address":"10.130.0.79/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.79"
            ],
            "mac": "0a:58:0a:82:00:4f",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.79"
            ],
            "mac": "0a:58:0a:82:00:4f",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:54:32Z"
    labels:
      app: guard
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:containers:
            k:{"name":"guard"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:host: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-01-09T04:54:32Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:54:32Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:54:33Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.79"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:54:34Z"
    name: kube-apiserver-guard-ip-10-0-160-211.us-east-2.compute.internal
    namespace: openshift-kube-apiserver
    resourceVersion: "28043"
    uid: aee0f949-93c7-462a-91c7-ba73c1e85738
  spec:
    containers:
    - args:
      - -c
      - |
        # properly handle TERM and exit as soon as it is signaled
        set -euo pipefail
        trap 'jobs -p | xargs -r kill; exit 0' TERM
        sleep infinity & wait
      command:
      - /bin/bash
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: guard
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 10.0.160.211
          path: healthz
          port: 6443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 5Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nz6zv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: guard-70696e8e1f35865d350508b604ff74545559b37c-end
    imagePullSecrets:
    - name: default-dockercfg-jxjhs
    nodeName: ip-10-0-160-211.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 3
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/etcd
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-nz6zv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:54:32Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:54:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:54:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:54:32Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://3007066fe6087cac35b231716b53fb67572b51ad04de91d18f55ab914701230f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: guard
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:54:33Z"
    hostIP: 10.0.160.211
    phase: Running
    podIP: 10.130.0.79
    podIPs:
    - ip: 10.130.0.79
    qosClass: Burstable
    startTime: "2023-01-09T04:54:32Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.28/23"],"mac_address":"0a:58:0a:81:00:1c","gateway_ips":["10.129.0.1"],"ip_address":"10.129.0.28/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.28"
            ],
            "mac": "0a:58:0a:81:00:1c",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.28"
            ],
            "mac": "0a:58:0a:81:00:1c",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:44:51Z"
    labels:
      app: guard
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:containers:
            k:{"name":"guard"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:host: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-01-09T04:44:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:44:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:44:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.28"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:53:01Z"
    name: kube-apiserver-guard-ip-10-0-199-219.us-east-2.compute.internal
    namespace: openshift-kube-apiserver
    resourceVersion: "27104"
    uid: 09ef49aa-c918-44a5-aa09-a82162c58273
  spec:
    containers:
    - args:
      - -c
      - |
        # properly handle TERM and exit as soon as it is signaled
        set -euo pipefail
        trap 'jobs -p | xargs -r kill; exit 0' TERM
        sleep infinity & wait
      command:
      - /bin/bash
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: guard
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 10.0.199.219
          path: healthz
          port: 6443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 5Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rsjf8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: guard-9f120a4fa9df2cc056b692dc544c0454ef5caffc-end
    nodeName: ip-10-0-199-219.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 3
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/etcd
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-rsjf8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:44:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:53:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:53:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:44:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://b258fa1be33dd23821f7c59cd0c21c916412d33db667833c848564cffc7e4068
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: guard
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:44:51Z"
    hostIP: 10.0.199.219
    phase: Running
    podIP: 10.129.0.28
    podIPs:
    - ip: 10.129.0.28
    qosClass: Burstable
    startTime: "2023-01-09T04:44:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: kube-apiserver
      kubernetes.io/config.hash: 3b79e2dbfee9ade5f8389f7a1a8cb500
      kubernetes.io/config.mirror: 3b79e2dbfee9ade5f8389f7a1a8cb500
      kubernetes.io/config.seen: "2023-01-09T04:56:03.681404962Z"
      kubernetes.io/config.source: file
      target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
    creationTimestamp: "2023-01-09T04:56:03Z"
    labels:
      apiserver: "true"
      app: openshift-kube-apiserver
      revision: "8"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:kubernetes.io/config.hash: {}
            f:kubernetes.io/config.mirror: {}
            f:kubernetes.io/config.seen: {}
            f:kubernetes.io/config.source: {}
            f:target.workload.openshift.io/management: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"aaa507e9-f484-4779-8f5a-b17315ac8043"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-apiserver"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"GOGC"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HOST_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"STATIC_POD_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/kube-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-cert-regeneration-controller"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-cert-syncer"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-check-endpoints"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":17697,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-insecure-readyz"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"setup"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/kube-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"audit-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"cert-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"resource-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kubelet
      operation: Update
      time: "2023-01-09T04:56:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.145.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:56:24Z"
    name: kube-apiserver-ip-10-0-145-4.us-east-2.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: ip-10-0-145-4.us-east-2.compute.internal
      uid: aaa507e9-f484-4779-8f5a-b17315ac8043
    resourceVersion: "29053"
    uid: 81da02fa-a44e-43c0-8b42-8492a0aa944d
  spec:
    containers:
    - args:
      - |
        LOCK=/var/log/kube-apiserver/.lock
        # We should be able to acquire the lock immediatelly. If not, it means the init container has not released it yet and kubelet or CRI-O started container prematurely.
        exec {LOCK_FD}>${LOCK} && flock --verbose -w 30 "${LOCK_FD}" || {
          echo "Failed to acquire lock for kube-apiserver. Please check setup container for details. This is likely kubelet or CRI-O bug."
          exit 1
        }
        if [ -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt ]; then
          echo "Copying system trust bundle ..."
          cp -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
        fi

        exec watch-termination --termination-touch-file=/var/log/kube-apiserver/.terminating --termination-log-file=/var/log/kube-apiserver/termination.log --graceful-termination-duration=194s --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig -- hyperkube kube-apiserver --openshift-config=/etc/kubernetes/static-pod-resources/configmaps/config/config.yaml --advertise-address=${HOST_IP}  -v=2 --permit-address-sharing
      command:
      - /bin/bash
      - -ec
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: STATIC_POD_VERSION
        value: "8"
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: GOGC
        value: "100"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:662c00a50b8327cc39963577d3e11aa71458b3888ce06223a4501679a28fecd1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 45
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: kube-apiserver
      ports:
      - containerPort: 6443
        hostPort: 6443
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: readyz
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 265m
          memory: 1Gi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
      - mountPath: /etc/kubernetes/static-pod-certs
        name: cert-dir
      - mountPath: /var/log/kube-apiserver
        name: audit-dir
    - args:
      - --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig
      - --namespace=$(POD_NAMESPACE)
      - --destination-dir=/etc/kubernetes/static-pod-certs
      command:
      - cluster-kube-apiserver-operator
      - cert-syncer
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: kube-apiserver-cert-syncer
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
      - mountPath: /etc/kubernetes/static-pod-certs
        name: cert-dir
    - args:
      - --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig
      - --namespace=$(POD_NAMESPACE)
      - -v=2
      command:
      - cluster-kube-apiserver-operator
      - cert-regeneration-controller
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: kube-apiserver-cert-regeneration-controller
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
    - args:
      - --insecure-port=6080
      - --delegate-url=https://localhost:6443/readyz
      command:
      - cluster-kube-apiserver-operator
      - insecure-readyz
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: kube-apiserver-insecure-readyz
      ports:
      - containerPort: 6080
        hostPort: 6080
        protocol: TCP
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
    - args:
      - --kubeconfig
      - /etc/kubernetes/static-pod-certs/configmaps/check-endpoints-kubeconfig/kubeconfig
      - --listen
      - 0.0.0.0:17697
      - --namespace
      - $(POD_NAMESPACE)
      - --v
      - "2"
      command:
      - cluster-kube-apiserver-operator
      - check-endpoints
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 17697
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: kube-apiserver-check-endpoints
      ports:
      - containerPort: 17697
        hostPort: 17697
        name: check-endpoints
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 17697
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
      - mountPath: /etc/kubernetes/static-pod-certs
        name: cert-dir
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - args:
      - |
        echo "Fixing audit permissions ..."
        chmod 0700 /var/log/kube-apiserver && touch /var/log/kube-apiserver/audit.log && chmod 0600 /var/log/kube-apiserver/*

        LOCK=/var/log/kube-apiserver/.lock
        echo "Acquiring exclusive lock ${LOCK} ..."

        # Waiting for 194s max for old kube-apiserver's watch-termination process to exit and remove the lock.
        # Two cases:
        # 1. if kubelet does not start the old and new in parallel (i.e. works as expected), the flock will always succeed without any time.
        # 2. if kubelet does overlap old and new pods for up to 130s, the flock will wait and immediate return when the old finishes.
        #
        # NOTE: We can increase 194s for a bigger expected overlap. But a higher value means less noise about the broken kubelet behaviour, i.e. we hide a bug.
        # NOTE: Do not tweak these timings without considering the livenessProbe initialDelaySeconds
        exec {LOCK_FD}>${LOCK} && flock --verbose -w 194 "${LOCK_FD}" || {
          echo "$(date -Iseconds -u) kubelet did not terminate old kube-apiserver before new one" >> /var/log/kube-apiserver/lock.log
          echo -n ": WARNING: kubelet did not terminate old kube-apiserver before new one."

          # We failed to acquire exclusive lock, which means there is old kube-apiserver running in system.
          # Since we utilize SO_REUSEPORT, we need to make sure the old kube-apiserver stopped listening.
          #
          # NOTE: This is a fallback for broken kubelet, if you observe this please report a bug.
          echo -n "Waiting for port 6443 to be released due to likely bug in kubelet or CRI-O "
          while [ -n "$(ss -Htan state listening '( sport = 6443 or sport = 6080 )')" ]; do
            echo -n "."
            sleep 1
            (( tries += 1 ))
            if [[ "${tries}" -gt 10 ]]; then
              echo "Timed out waiting for port :6443 and :6080 to be released, this is likely a bug in kubelet or CRI-O"
              exit 1
            fi
          done
          #  This is to make sure the server has terminated independently from the lock.
          #  After the port has been freed (requests can be pending and need 60s max).
          sleep 65
        }
        # We cannot hold the lock from the init container to the main container. We release it here. There is no risk, at this point we know we are safe.
        flock -u "${LOCK_FD}"
      command:
      - /usr/bin/timeout
      - "279"
      - /bin/bash
      - -ec
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:662c00a50b8327cc39963577d3e11aa71458b3888ce06223a4501679a28fecd1
      imagePullPolicy: IfNotPresent
      name: setup
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/log/kube-apiserver
        name: audit-dir
    nodeName: ip-10-0-145-4.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 194
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/static-pod-resources/kube-apiserver-pod-8
        type: ""
      name: resource-dir
    - hostPath:
        path: /etc/kubernetes/static-pod-resources/kube-apiserver-certs
        type: ""
      name: cert-dir
    - hostPath:
        path: /var/log/kube-apiserver
        type: ""
      name: audit-dir
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:56:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:56:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:56:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:56:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://b196b9089f4f58cc3665ac4740e2ba08af221e1a9f1998c2a25def40158dc6ce
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:662c00a50b8327cc39963577d3e11aa71458b3888ce06223a4501679a28fecd1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:662c00a50b8327cc39963577d3e11aa71458b3888ce06223a4501679a28fecd1
      lastState: {}
      name: kube-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:56:05Z"
    - containerID: cri-o://88546e5d5efd31c3a1b5d6cb5fc043ce1a55530b8d8b1cbead8a9136a4b476a6
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: kube-apiserver-cert-regeneration-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:56:05Z"
    - containerID: cri-o://2bb14fe87e3e1ef2e11dbacc9ac6a0c554552f2734c44dc436d3bd0718e3e992
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: kube-apiserver-cert-syncer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:56:05Z"
    - containerID: cri-o://205c6055de4a448ab096532daadf5e6d2e5d90a4fa90676826ed80e836ffc5ca
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: kube-apiserver-check-endpoints
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:56:06Z"
    - containerID: cri-o://acc810c3326aac17df6b187480b4b41be502ebfbcd6af306cd13f0d8b2a7b715
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: kube-apiserver-insecure-readyz
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:56:05Z"
    hostIP: 10.0.145.4
    initContainerStatuses:
    - containerID: cri-o://fa78f07f54fc4ee15a7aff61cf010df842d76aa1047f84d81144d7d0d7eec026
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:662c00a50b8327cc39963577d3e11aa71458b3888ce06223a4501679a28fecd1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:662c00a50b8327cc39963577d3e11aa71458b3888ce06223a4501679a28fecd1
      lastState: {}
      name: setup
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://fa78f07f54fc4ee15a7aff61cf010df842d76aa1047f84d81144d7d0d7eec026
          exitCode: 0
          finishedAt: "2023-01-09T04:56:04Z"
          reason: Completed
          startedAt: "2023-01-09T04:56:04Z"
    phase: Running
    podIP: 10.0.145.4
    podIPs:
    - ip: 10.0.145.4
    qosClass: Burstable
    startTime: "2023-01-09T04:56:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: kube-apiserver
      kubernetes.io/config.hash: 0f052fb6b83ef04b24ca483b36932fe6
      kubernetes.io/config.mirror: 0f052fb6b83ef04b24ca483b36932fe6
      kubernetes.io/config.seen: "2023-01-09T04:54:24.114971698Z"
      kubernetes.io/config.source: file
      target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
    creationTimestamp: "2023-01-09T04:54:24Z"
    labels:
      apiserver: "true"
      app: openshift-kube-apiserver
      revision: "8"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:kubernetes.io/config.hash: {}
            f:kubernetes.io/config.mirror: {}
            f:kubernetes.io/config.seen: {}
            f:kubernetes.io/config.source: {}
            f:target.workload.openshift.io/management: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"3aa9328b-65bb-4d9a-b12a-7e5710de6e2c"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-apiserver"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"GOGC"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HOST_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"STATIC_POD_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/kube-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-cert-regeneration-controller"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-cert-syncer"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-check-endpoints"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":17697,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-insecure-readyz"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"setup"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/kube-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"audit-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"cert-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"resource-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kubelet
      operation: Update
      time: "2023-01-09T04:54:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.160.211"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:54:44Z"
    name: kube-apiserver-ip-10-0-160-211.us-east-2.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: ip-10-0-160-211.us-east-2.compute.internal
      uid: 3aa9328b-65bb-4d9a-b12a-7e5710de6e2c
    resourceVersion: "28166"
    uid: 56889dc5-bfb3-4713-b80a-00c9b6b4ce9f
  spec:
    containers:
    - args:
      - |
        LOCK=/var/log/kube-apiserver/.lock
        # We should be able to acquire the lock immediatelly. If not, it means the init container has not released it yet and kubelet or CRI-O started container prematurely.
        exec {LOCK_FD}>${LOCK} && flock --verbose -w 30 "${LOCK_FD}" || {
          echo "Failed to acquire lock for kube-apiserver. Please check setup container for details. This is likely kubelet or CRI-O bug."
          exit 1
        }
        if [ -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt ]; then
          echo "Copying system trust bundle ..."
          cp -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
        fi

        exec watch-termination --termination-touch-file=/var/log/kube-apiserver/.terminating --termination-log-file=/var/log/kube-apiserver/termination.log --graceful-termination-duration=194s --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig -- hyperkube kube-apiserver --openshift-config=/etc/kubernetes/static-pod-resources/configmaps/config/config.yaml --advertise-address=${HOST_IP}  -v=2 --permit-address-sharing
      command:
      - /bin/bash
      - -ec
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: STATIC_POD_VERSION
        value: "8"
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: GOGC
        value: "100"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:662c00a50b8327cc39963577d3e11aa71458b3888ce06223a4501679a28fecd1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 45
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: kube-apiserver
      ports:
      - containerPort: 6443
        hostPort: 6443
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: readyz
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 265m
          memory: 1Gi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
      - mountPath: /etc/kubernetes/static-pod-certs
        name: cert-dir
      - mountPath: /var/log/kube-apiserver
        name: audit-dir
    - args:
      - --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig
      - --namespace=$(POD_NAMESPACE)
      - --destination-dir=/etc/kubernetes/static-pod-certs
      command:
      - cluster-kube-apiserver-operator
      - cert-syncer
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: kube-apiserver-cert-syncer
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
      - mountPath: /etc/kubernetes/static-pod-certs
        name: cert-dir
    - args:
      - --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig
      - --namespace=$(POD_NAMESPACE)
      - -v=2
      command:
      - cluster-kube-apiserver-operator
      - cert-regeneration-controller
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: kube-apiserver-cert-regeneration-controller
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
    - args:
      - --insecure-port=6080
      - --delegate-url=https://localhost:6443/readyz
      command:
      - cluster-kube-apiserver-operator
      - insecure-readyz
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: kube-apiserver-insecure-readyz
      ports:
      - containerPort: 6080
        hostPort: 6080
        protocol: TCP
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
    - args:
      - --kubeconfig
      - /etc/kubernetes/static-pod-certs/configmaps/check-endpoints-kubeconfig/kubeconfig
      - --listen
      - 0.0.0.0:17697
      - --namespace
      - $(POD_NAMESPACE)
      - --v
      - "2"
      command:
      - cluster-kube-apiserver-operator
      - check-endpoints
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 17697
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: kube-apiserver-check-endpoints
      ports:
      - containerPort: 17697
        hostPort: 17697
        name: check-endpoints
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 17697
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
      - mountPath: /etc/kubernetes/static-pod-certs
        name: cert-dir
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - args:
      - |
        echo "Fixing audit permissions ..."
        chmod 0700 /var/log/kube-apiserver && touch /var/log/kube-apiserver/audit.log && chmod 0600 /var/log/kube-apiserver/*

        LOCK=/var/log/kube-apiserver/.lock
        echo "Acquiring exclusive lock ${LOCK} ..."

        # Waiting for 194s max for old kube-apiserver's watch-termination process to exit and remove the lock.
        # Two cases:
        # 1. if kubelet does not start the old and new in parallel (i.e. works as expected), the flock will always succeed without any time.
        # 2. if kubelet does overlap old and new pods for up to 130s, the flock will wait and immediate return when the old finishes.
        #
        # NOTE: We can increase 194s for a bigger expected overlap. But a higher value means less noise about the broken kubelet behaviour, i.e. we hide a bug.
        # NOTE: Do not tweak these timings without considering the livenessProbe initialDelaySeconds
        exec {LOCK_FD}>${LOCK} && flock --verbose -w 194 "${LOCK_FD}" || {
          echo "$(date -Iseconds -u) kubelet did not terminate old kube-apiserver before new one" >> /var/log/kube-apiserver/lock.log
          echo -n ": WARNING: kubelet did not terminate old kube-apiserver before new one."

          # We failed to acquire exclusive lock, which means there is old kube-apiserver running in system.
          # Since we utilize SO_REUSEPORT, we need to make sure the old kube-apiserver stopped listening.
          #
          # NOTE: This is a fallback for broken kubelet, if you observe this please report a bug.
          echo -n "Waiting for port 6443 to be released due to likely bug in kubelet or CRI-O "
          while [ -n "$(ss -Htan state listening '( sport = 6443 or sport = 6080 )')" ]; do
            echo -n "."
            sleep 1
            (( tries += 1 ))
            if [[ "${tries}" -gt 10 ]]; then
              echo "Timed out waiting for port :6443 and :6080 to be released, this is likely a bug in kubelet or CRI-O"
              exit 1
            fi
          done
          #  This is to make sure the server has terminated independently from the lock.
          #  After the port has been freed (requests can be pending and need 60s max).
          sleep 65
        }
        # We cannot hold the lock from the init container to the main container. We release it here. There is no risk, at this point we know we are safe.
        flock -u "${LOCK_FD}"
      command:
      - /usr/bin/timeout
      - "279"
      - /bin/bash
      - -ec
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:662c00a50b8327cc39963577d3e11aa71458b3888ce06223a4501679a28fecd1
      imagePullPolicy: IfNotPresent
      name: setup
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/log/kube-apiserver
        name: audit-dir
    nodeName: ip-10-0-160-211.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 194
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/static-pod-resources/kube-apiserver-pod-8
        type: ""
      name: resource-dir
    - hostPath:
        path: /etc/kubernetes/static-pod-resources/kube-apiserver-certs
        type: ""
      name: cert-dir
    - hostPath:
        path: /var/log/kube-apiserver
        type: ""
      name: audit-dir
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:54:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:54:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:54:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:54:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f0c748d8e4621a73f1416fcd28e8e5d05e6da8af5182f1f6f5d21de11b340eca
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:662c00a50b8327cc39963577d3e11aa71458b3888ce06223a4501679a28fecd1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:662c00a50b8327cc39963577d3e11aa71458b3888ce06223a4501679a28fecd1
      lastState: {}
      name: kube-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:54:25Z"
    - containerID: cri-o://898c9b7e9c48ca4bec2f0d2821d167ce847c82f3e5a47649ce84867ba8c5a879
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: kube-apiserver-cert-regeneration-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:54:25Z"
    - containerID: cri-o://b7a70c26553db8b5c7afb36cf868ddafe8e46744506a114a877f628915d335ab
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: kube-apiserver-cert-syncer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:54:25Z"
    - containerID: cri-o://69fcba9ab2779d76d88d05da39b4d30aaa50f0c8a3991539f6bb4c906927ea1d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: kube-apiserver-check-endpoints
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:54:26Z"
    - containerID: cri-o://d32886b1a1a9093f083c057df6b986296fb31baef47b975b3c8ddb08ed2523e7
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: kube-apiserver-insecure-readyz
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:54:25Z"
    hostIP: 10.0.160.211
    initContainerStatuses:
    - containerID: cri-o://bb3aa7a3a96f930cc773eecc74ba7d786b42c9c65e584b24e9f0f120879fd0c7
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:662c00a50b8327cc39963577d3e11aa71458b3888ce06223a4501679a28fecd1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:662c00a50b8327cc39963577d3e11aa71458b3888ce06223a4501679a28fecd1
      lastState: {}
      name: setup
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://bb3aa7a3a96f930cc773eecc74ba7d786b42c9c65e584b24e9f0f120879fd0c7
          exitCode: 0
          finishedAt: "2023-01-09T04:54:24Z"
          reason: Completed
          startedAt: "2023-01-09T04:54:24Z"
    phase: Running
    podIP: 10.0.160.211
    podIPs:
    - ip: 10.0.160.211
    qosClass: Burstable
    startTime: "2023-01-09T04:54:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: kube-apiserver
      kubernetes.io/config.hash: fcf00a916237ca5bbdfb5da218bcc16f
      kubernetes.io/config.mirror: fcf00a916237ca5bbdfb5da218bcc16f
      kubernetes.io/config.seen: "2023-01-09T04:50:36.701728492Z"
      kubernetes.io/config.source: file
      target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
    creationTimestamp: "2023-01-09T04:52:56Z"
    labels:
      apiserver: "true"
      app: openshift-kube-apiserver
      revision: "8"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:kubernetes.io/config.hash: {}
            f:kubernetes.io/config.mirror: {}
            f:kubernetes.io/config.seen: {}
            f:kubernetes.io/config.source: {}
            f:target.workload.openshift.io/management: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0f86a2c1-ac70-41b4-962c-149ac68ce490"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-apiserver"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"GOGC"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HOST_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"STATIC_POD_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/kube-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-cert-regeneration-controller"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-cert-syncer"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-check-endpoints"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":17697,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-insecure-readyz"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"setup"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/kube-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"audit-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"cert-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"resource-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kubelet
      operation: Update
      time: "2023-01-09T04:52:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.199.219"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:53:11Z"
    name: kube-apiserver-ip-10-0-199-219.us-east-2.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: ip-10-0-199-219.us-east-2.compute.internal
      uid: 0f86a2c1-ac70-41b4-962c-149ac68ce490
    resourceVersion: "27277"
    uid: 8ac6e91c-b6fd-4096-ae60-33a7a98f8706
  spec:
    containers:
    - args:
      - |
        LOCK=/var/log/kube-apiserver/.lock
        # We should be able to acquire the lock immediatelly. If not, it means the init container has not released it yet and kubelet or CRI-O started container prematurely.
        exec {LOCK_FD}>${LOCK} && flock --verbose -w 30 "${LOCK_FD}" || {
          echo "Failed to acquire lock for kube-apiserver. Please check setup container for details. This is likely kubelet or CRI-O bug."
          exit 1
        }
        if [ -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt ]; then
          echo "Copying system trust bundle ..."
          cp -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
        fi

        exec watch-termination --termination-touch-file=/var/log/kube-apiserver/.terminating --termination-log-file=/var/log/kube-apiserver/termination.log --graceful-termination-duration=194s --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig -- hyperkube kube-apiserver --openshift-config=/etc/kubernetes/static-pod-resources/configmaps/config/config.yaml --advertise-address=${HOST_IP}  -v=2 --permit-address-sharing
      command:
      - /bin/bash
      - -ec
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: STATIC_POD_VERSION
        value: "8"
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: GOGC
        value: "100"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:662c00a50b8327cc39963577d3e11aa71458b3888ce06223a4501679a28fecd1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 45
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: kube-apiserver
      ports:
      - containerPort: 6443
        hostPort: 6443
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: readyz
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 265m
          memory: 1Gi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
      - mountPath: /etc/kubernetes/static-pod-certs
        name: cert-dir
      - mountPath: /var/log/kube-apiserver
        name: audit-dir
    - args:
      - --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig
      - --namespace=$(POD_NAMESPACE)
      - --destination-dir=/etc/kubernetes/static-pod-certs
      command:
      - cluster-kube-apiserver-operator
      - cert-syncer
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: kube-apiserver-cert-syncer
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
      - mountPath: /etc/kubernetes/static-pod-certs
        name: cert-dir
    - args:
      - --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig
      - --namespace=$(POD_NAMESPACE)
      - -v=2
      command:
      - cluster-kube-apiserver-operator
      - cert-regeneration-controller
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: kube-apiserver-cert-regeneration-controller
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
    - args:
      - --insecure-port=6080
      - --delegate-url=https://localhost:6443/readyz
      command:
      - cluster-kube-apiserver-operator
      - insecure-readyz
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: kube-apiserver-insecure-readyz
      ports:
      - containerPort: 6080
        hostPort: 6080
        protocol: TCP
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
    - args:
      - --kubeconfig
      - /etc/kubernetes/static-pod-certs/configmaps/check-endpoints-kubeconfig/kubeconfig
      - --listen
      - 0.0.0.0:17697
      - --namespace
      - $(POD_NAMESPACE)
      - --v
      - "2"
      command:
      - cluster-kube-apiserver-operator
      - check-endpoints
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 17697
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: kube-apiserver-check-endpoints
      ports:
      - containerPort: 17697
        hostPort: 17697
        name: check-endpoints
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 17697
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
      - mountPath: /etc/kubernetes/static-pod-certs
        name: cert-dir
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - args:
      - |
        echo "Fixing audit permissions ..."
        chmod 0700 /var/log/kube-apiserver && touch /var/log/kube-apiserver/audit.log && chmod 0600 /var/log/kube-apiserver/*

        LOCK=/var/log/kube-apiserver/.lock
        echo "Acquiring exclusive lock ${LOCK} ..."

        # Waiting for 194s max for old kube-apiserver's watch-termination process to exit and remove the lock.
        # Two cases:
        # 1. if kubelet does not start the old and new in parallel (i.e. works as expected), the flock will always succeed without any time.
        # 2. if kubelet does overlap old and new pods for up to 130s, the flock will wait and immediate return when the old finishes.
        #
        # NOTE: We can increase 194s for a bigger expected overlap. But a higher value means less noise about the broken kubelet behaviour, i.e. we hide a bug.
        # NOTE: Do not tweak these timings without considering the livenessProbe initialDelaySeconds
        exec {LOCK_FD}>${LOCK} && flock --verbose -w 194 "${LOCK_FD}" || {
          echo "$(date -Iseconds -u) kubelet did not terminate old kube-apiserver before new one" >> /var/log/kube-apiserver/lock.log
          echo -n ": WARNING: kubelet did not terminate old kube-apiserver before new one."

          # We failed to acquire exclusive lock, which means there is old kube-apiserver running in system.
          # Since we utilize SO_REUSEPORT, we need to make sure the old kube-apiserver stopped listening.
          #
          # NOTE: This is a fallback for broken kubelet, if you observe this please report a bug.
          echo -n "Waiting for port 6443 to be released due to likely bug in kubelet or CRI-O "
          while [ -n "$(ss -Htan state listening '( sport = 6443 or sport = 6080 )')" ]; do
            echo -n "."
            sleep 1
            (( tries += 1 ))
            if [[ "${tries}" -gt 10 ]]; then
              echo "Timed out waiting for port :6443 and :6080 to be released, this is likely a bug in kubelet or CRI-O"
              exit 1
            fi
          done
          #  This is to make sure the server has terminated independently from the lock.
          #  After the port has been freed (requests can be pending and need 60s max).
          sleep 65
        }
        # We cannot hold the lock from the init container to the main container. We release it here. There is no risk, at this point we know we are safe.
        flock -u "${LOCK_FD}"
      command:
      - /usr/bin/timeout
      - "279"
      - /bin/bash
      - -ec
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:662c00a50b8327cc39963577d3e11aa71458b3888ce06223a4501679a28fecd1
      imagePullPolicy: IfNotPresent
      name: setup
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/log/kube-apiserver
        name: audit-dir
    nodeName: ip-10-0-199-219.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 194
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/static-pod-resources/kube-apiserver-pod-8
        type: ""
      name: resource-dir
    - hostPath:
        path: /etc/kubernetes/static-pod-resources/kube-apiserver-certs
        type: ""
      name: cert-dir
    - hostPath:
        path: /var/log/kube-apiserver
        type: ""
      name: audit-dir
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:52:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:53:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:53:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://4bf674ac7a37c4bfb890b0b20b185efc8bcff47fd2e3c672a8a85606c5ec24f9
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:662c00a50b8327cc39963577d3e11aa71458b3888ce06223a4501679a28fecd1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:662c00a50b8327cc39963577d3e11aa71458b3888ce06223a4501679a28fecd1
      lastState: {}
      name: kube-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:52:52Z"
    - containerID: cri-o://af1fb479cd6671b00eacb7ae293025af4aec3b5458e17623e50cb5cb16a6db2c
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: kube-apiserver-cert-regeneration-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:52:52Z"
    - containerID: cri-o://b1affe9a2f958ea1f488905235f5df701cd04ce90c7f82aad7997a067752795e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: kube-apiserver-cert-syncer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:52:52Z"
    - containerID: cri-o://02b4cee1421877d71554fbaf330d05156d82a1e05bc3c993c5b39928b14b3e3e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: kube-apiserver-check-endpoints
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:52:53Z"
    - containerID: cri-o://eb7e51d14375c8479c8fa0a8a8d93c8b2f9fc119982813e9bd570dbbfb48bc35
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: kube-apiserver-insecure-readyz
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:52:52Z"
    hostIP: 10.0.199.219
    initContainerStatuses:
    - containerID: cri-o://cf3c3c372587b6e9c80b0e2e0a732c4485a04cec99f0506e02e4942b94ba3fad
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:662c00a50b8327cc39963577d3e11aa71458b3888ce06223a4501679a28fecd1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:662c00a50b8327cc39963577d3e11aa71458b3888ce06223a4501679a28fecd1
      lastState: {}
      name: setup
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://cf3c3c372587b6e9c80b0e2e0a732c4485a04cec99f0506e02e4942b94ba3fad
          exitCode: 0
          finishedAt: "2023-01-09T04:52:51Z"
          reason: Completed
          startedAt: "2023-01-09T04:52:51Z"
    phase: Running
    podIP: 10.0.199.219
    podIPs:
    - ip: 10.0.199.219
    qosClass: Burstable
    startTime: "2023-01-09T04:49:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.38/23"],"mac_address":"0a:58:0a:80:00:26","gateway_ips":["10.128.0.1"],"ip_address":"10.128.0.38/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.38"
            ],
            "mac": "0a:58:0a:80:00:26",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.38"
            ],
            "mac": "0a:58:0a:80:00:26",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:48:35Z"
    labels:
      app: pruner
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"17d2b8cf-45b9-43af-b512-ad105561e42b"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"pruner"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-01-09T04:48:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:48:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:49:04Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.38"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:49:07Z"
    name: revision-pruner-6-ip-10-0-145-4.us-east-2.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-6
      uid: 17d2b8cf-45b9-43af-b512-ad105561e42b
    resourceVersion: "23947"
    uid: b4e19d15-3b16-43d5-9178-1ff274edd412
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=4
      - --max-eligible-revision=6
      - --protected-revisions=2,3,4,5,6
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --cert-dir=kube-apiserver-certs
      - --static-pod-name=kube-apiserver-pod
      command:
      - cluster-kube-apiserver-operator
      - prune
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: pruner
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tzd2r
    nodeName: ip-10-0-145-4.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:48:35Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:48:35Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:48:35Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:48:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://1801bcd74b9a532e8fd5e8f173b86a54b18840847f57ebce42b6411de1c61b71
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: pruner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://1801bcd74b9a532e8fd5e8f173b86a54b18840847f57ebce42b6411de1c61b71
          exitCode: 0
          finishedAt: "2023-01-09T04:49:05Z"
          reason: Completed
          startedAt: "2023-01-09T04:49:04Z"
    hostIP: 10.0.145.4
    phase: Succeeded
    podIP: 10.128.0.38
    podIPs:
    - ip: 10.128.0.38
    qosClass: Guaranteed
    startTime: "2023-01-09T04:48:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.63/23"],"mac_address":"0a:58:0a:82:00:3f","gateway_ips":["10.130.0.1"],"ip_address":"10.130.0.63/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.63"
            ],
            "mac": "0a:58:0a:82:00:3f",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.63"
            ],
            "mac": "0a:58:0a:82:00:3f",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:48:31Z"
    labels:
      app: pruner
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"17d2b8cf-45b9-43af-b512-ad105561e42b"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"pruner"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-01-09T04:48:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:48:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:48:32Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.63"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:48:56Z"
    name: revision-pruner-6-ip-10-0-160-211.us-east-2.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-6
      uid: 17d2b8cf-45b9-43af-b512-ad105561e42b
    resourceVersion: "23583"
    uid: 05fbea9a-dbf4-4a19-a372-6e812f67b3f0
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=4
      - --max-eligible-revision=6
      - --protected-revisions=2,3,4,5,6
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --cert-dir=kube-apiserver-certs
      - --static-pod-name=kube-apiserver-pod
      command:
      - cluster-kube-apiserver-operator
      - prune
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: pruner
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tzd2r
    nodeName: ip-10-0-160-211.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:48:31Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:48:34Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:48:34Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:48:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://33eb10cf4cb0b4170145b666df24dccc2d430416ece03acbf5d5b0173777d77a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: pruner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://33eb10cf4cb0b4170145b666df24dccc2d430416ece03acbf5d5b0173777d77a
          exitCode: 0
          finishedAt: "2023-01-09T04:48:33Z"
          reason: Completed
          startedAt: "2023-01-09T04:48:33Z"
    hostIP: 10.0.160.211
    phase: Succeeded
    podIP: 10.130.0.63
    podIPs:
    - ip: 10.130.0.63
    qosClass: Guaranteed
    startTime: "2023-01-09T04:48:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.40/23"],"mac_address":"0a:58:0a:81:00:28","gateway_ips":["10.129.0.1"],"ip_address":"10.129.0.40/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.40"
            ],
            "mac": "0a:58:0a:81:00:28",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.40"
            ],
            "mac": "0a:58:0a:81:00:28",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:48:27Z"
    labels:
      app: pruner
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"17d2b8cf-45b9-43af-b512-ad105561e42b"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"pruner"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-01-09T04:48:27Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:48:27Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:48:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.40"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:48:32Z"
    name: revision-pruner-6-ip-10-0-199-219.us-east-2.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-6
      uid: 17d2b8cf-45b9-43af-b512-ad105561e42b
    resourceVersion: "23375"
    uid: bc9f0aa4-740b-410b-84b9-ba1a11b16048
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=4
      - --max-eligible-revision=6
      - --protected-revisions=2,3,4,5,6
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --cert-dir=kube-apiserver-certs
      - --static-pod-name=kube-apiserver-pod
      command:
      - cluster-kube-apiserver-operator
      - prune
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: pruner
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tzd2r
    nodeName: ip-10-0-199-219.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:48:27Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:48:30Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:48:30Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:48:27Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://38db8cf770fdb201ee097b35ff961ebcb114e1907488df9db5d0a26eb729cf51
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: pruner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://38db8cf770fdb201ee097b35ff961ebcb114e1907488df9db5d0a26eb729cf51
          exitCode: 0
          finishedAt: "2023-01-09T04:48:29Z"
          reason: Completed
          startedAt: "2023-01-09T04:48:29Z"
    hostIP: 10.0.199.219
    phase: Succeeded
    podIP: 10.129.0.40
    podIPs:
    - ip: 10.129.0.40
    qosClass: Guaranteed
    startTime: "2023-01-09T04:48:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.45/23"],"mac_address":"0a:58:0a:80:00:2d","gateway_ips":["10.128.0.1"],"ip_address":"10.128.0.45/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.45"
            ],
            "mac": "0a:58:0a:80:00:2d",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.45"
            ],
            "mac": "0a:58:0a:80:00:2d",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:49:22Z"
    labels:
      app: pruner
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4ed70587-7f90-412d-bcf8-d6c3d7d30e86"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"pruner"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-01-09T04:49:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:49:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:49:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.45"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:49:25Z"
    name: revision-pruner-7-ip-10-0-145-4.us-east-2.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-7
      uid: 4ed70587-7f90-412d-bcf8-d6c3d7d30e86
    resourceVersion: "24561"
    uid: 6bf4702c-8275-48cd-9ef3-1de96d795b8e
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=4
      - --max-eligible-revision=7
      - --protected-revisions=2,3,4,5,6,7
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --cert-dir=kube-apiserver-certs
      - --static-pod-name=kube-apiserver-pod
      command:
      - cluster-kube-apiserver-operator
      - prune
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: pruner
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tzd2r
    nodeName: ip-10-0-145-4.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:22Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:22Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:22Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://6b39f3f66e42c17c5e892635cdc0a597808eb9cce08e87133254fa26491a7943
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: pruner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://6b39f3f66e42c17c5e892635cdc0a597808eb9cce08e87133254fa26491a7943
          exitCode: 0
          finishedAt: "2023-01-09T04:49:23Z"
          reason: Completed
          startedAt: "2023-01-09T04:49:23Z"
    hostIP: 10.0.145.4
    phase: Succeeded
    podIP: 10.128.0.45
    podIPs:
    - ip: 10.128.0.45
    qosClass: Guaranteed
    startTime: "2023-01-09T04:49:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.64/23"],"mac_address":"0a:58:0a:82:00:40","gateway_ips":["10.130.0.1"],"ip_address":"10.130.0.64/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.64"
            ],
            "mac": "0a:58:0a:82:00:40",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.64"
            ],
            "mac": "0a:58:0a:82:00:40",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:49:17Z"
    labels:
      app: pruner
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4ed70587-7f90-412d-bcf8-d6c3d7d30e86"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"pruner"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-01-09T04:49:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:49:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:49:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.64"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:49:22Z"
    name: revision-pruner-7-ip-10-0-160-211.us-east-2.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-7
      uid: 4ed70587-7f90-412d-bcf8-d6c3d7d30e86
    resourceVersion: "24456"
    uid: df25cc54-9ed9-4299-89e9-4224e2267f2a
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=4
      - --max-eligible-revision=7
      - --protected-revisions=2,3,4,5,6,7
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --cert-dir=kube-apiserver-certs
      - --static-pod-name=kube-apiserver-pod
      command:
      - cluster-kube-apiserver-operator
      - prune
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: pruner
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tzd2r
    nodeName: ip-10-0-160-211.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:17Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:20Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:20Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://e6c0efa8b7bafe71d8782752a246b75c14c2f7d335c63ac4bbc502233ae6464a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: pruner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://e6c0efa8b7bafe71d8782752a246b75c14c2f7d335c63ac4bbc502233ae6464a
          exitCode: 0
          finishedAt: "2023-01-09T04:49:20Z"
          reason: Completed
          startedAt: "2023-01-09T04:49:19Z"
    hostIP: 10.0.160.211
    phase: Succeeded
    podIP: 10.130.0.64
    podIPs:
    - ip: 10.130.0.64
    qosClass: Guaranteed
    startTime: "2023-01-09T04:49:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.43/23"],"mac_address":"0a:58:0a:81:00:2b","gateway_ips":["10.129.0.1"],"ip_address":"10.129.0.43/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.43"
            ],
            "mac": "0a:58:0a:81:00:2b",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.43"
            ],
            "mac": "0a:58:0a:81:00:2b",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:49:12Z"
    labels:
      app: pruner
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4ed70587-7f90-412d-bcf8-d6c3d7d30e86"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"pruner"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-01-09T04:49:12Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:49:12Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:49:13Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.43"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:49:17Z"
    name: revision-pruner-7-ip-10-0-199-219.us-east-2.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-7
      uid: 4ed70587-7f90-412d-bcf8-d6c3d7d30e86
    resourceVersion: "24108"
    uid: 628226f2-3cdd-4691-b5d2-2f5f5584fb55
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=4
      - --max-eligible-revision=7
      - --protected-revisions=2,3,4,5,6,7
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --cert-dir=kube-apiserver-certs
      - --static-pod-name=kube-apiserver-pod
      command:
      - cluster-kube-apiserver-operator
      - prune
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: pruner
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tzd2r
    nodeName: ip-10-0-199-219.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:12Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:15Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:15Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://c444a84786bae652a58768aaa09983820f84be8eee81cf469f310fa0243c8f2d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: pruner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://c444a84786bae652a58768aaa09983820f84be8eee81cf469f310fa0243c8f2d
          exitCode: 0
          finishedAt: "2023-01-09T04:49:14Z"
          reason: Completed
          startedAt: "2023-01-09T04:49:13Z"
    hostIP: 10.0.199.219
    phase: Succeeded
    podIP: 10.129.0.43
    podIPs:
    - ip: 10.129.0.43
    qosClass: Guaranteed
    startTime: "2023-01-09T04:49:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.46/23"],"mac_address":"0a:58:0a:80:00:2e","gateway_ips":["10.128.0.1"],"ip_address":"10.128.0.46/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.46"
            ],
            "mac": "0a:58:0a:80:00:2e",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.46"
            ],
            "mac": "0a:58:0a:80:00:2e",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:49:45Z"
    labels:
      app: pruner
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"eb5ae56a-1473-44df-8d29-0adc3c634b5e"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"pruner"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-01-09T04:49:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:49:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:49:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.46"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:49:48Z"
    name: revision-pruner-8-ip-10-0-145-4.us-east-2.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-8
      uid: eb5ae56a-1473-44df-8d29-0adc3c634b5e
    resourceVersion: "24909"
    uid: 3a10d59d-51fb-4d07-a4fb-19dc3de0fbc4
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=4
      - --max-eligible-revision=8
      - --protected-revisions=2,3,4,5,6,7,8
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --cert-dir=kube-apiserver-certs
      - --static-pod-name=kube-apiserver-pod
      command:
      - cluster-kube-apiserver-operator
      - prune
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: pruner
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tzd2r
    nodeName: ip-10-0-145-4.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:45Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:45Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:45Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://b92e0f72bc65e49524543dd81b5f3b536d99a9a35c87818e0f5ae8335405401f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: pruner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://b92e0f72bc65e49524543dd81b5f3b536d99a9a35c87818e0f5ae8335405401f
          exitCode: 0
          finishedAt: "2023-01-09T04:49:46Z"
          reason: Completed
          startedAt: "2023-01-09T04:49:46Z"
    hostIP: 10.0.145.4
    phase: Succeeded
    podIP: 10.128.0.46
    podIPs:
    - ip: 10.128.0.46
    qosClass: Guaranteed
    startTime: "2023-01-09T04:49:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.67/23"],"mac_address":"0a:58:0a:82:00:43","gateway_ips":["10.130.0.1"],"ip_address":"10.130.0.67/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.67"
            ],
            "mac": "0a:58:0a:82:00:43",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.67"
            ],
            "mac": "0a:58:0a:82:00:43",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:49:42Z"
    labels:
      app: pruner
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"eb5ae56a-1473-44df-8d29-0adc3c634b5e"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"pruner"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-01-09T04:49:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:49:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:49:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.67"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:49:45Z"
    name: revision-pruner-8-ip-10-0-160-211.us-east-2.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-8
      uid: eb5ae56a-1473-44df-8d29-0adc3c634b5e
    resourceVersion: "24878"
    uid: 2fd38cf2-d929-4714-988b-4c1e6075a04d
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=4
      - --max-eligible-revision=8
      - --protected-revisions=2,3,4,5,6,7,8
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --cert-dir=kube-apiserver-certs
      - --static-pod-name=kube-apiserver-pod
      command:
      - cluster-kube-apiserver-operator
      - prune
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: pruner
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tzd2r
    nodeName: ip-10-0-160-211.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:42Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:42Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:42Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://986bddd3bd65a4619c537aabc72f641ad07ba9b586afe89af33f43d4444078e6
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: pruner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://986bddd3bd65a4619c537aabc72f641ad07ba9b586afe89af33f43d4444078e6
          exitCode: 0
          finishedAt: "2023-01-09T04:49:43Z"
          reason: Completed
          startedAt: "2023-01-09T04:49:43Z"
    hostIP: 10.0.160.211
    phase: Succeeded
    podIP: 10.130.0.67
    podIPs:
    - ip: 10.130.0.67
    qosClass: Guaranteed
    startTime: "2023-01-09T04:49:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.47/23"],"mac_address":"0a:58:0a:81:00:2f","gateway_ips":["10.129.0.1"],"ip_address":"10.129.0.47/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.47"
            ],
            "mac": "0a:58:0a:81:00:2f",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.47"
            ],
            "mac": "0a:58:0a:81:00:2f",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:49:38Z"
    labels:
      app: pruner
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"eb5ae56a-1473-44df-8d29-0adc3c634b5e"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"pruner"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-01-09T04:49:38Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:49:38Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:49:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.47"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:49:42Z"
    name: revision-pruner-8-ip-10-0-199-219.us-east-2.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-8
      uid: eb5ae56a-1473-44df-8d29-0adc3c634b5e
    resourceVersion: "24847"
    uid: 6193a5f8-3a24-4be3-8601-ee021b863e46
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=4
      - --max-eligible-revision=8
      - --protected-revisions=2,3,4,5,6,7,8
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --cert-dir=kube-apiserver-certs
      - --static-pod-name=kube-apiserver-pod
      command:
      - cluster-kube-apiserver-operator
      - prune
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imagePullPolicy: IfNotPresent
      name: pruner
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tzd2r
    nodeName: ip-10-0-199-219.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:38Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:38Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:38Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:49:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://a9fd47c4a9d5d6f887c4d439795260080011b911dae7ff876e77826c0c8454cf
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9ed61d19216d71cc5692c22402961b0f865ed8629f5d64f1687aa47af601c018
      lastState: {}
      name: pruner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://a9fd47c4a9d5d6f887c4d439795260080011b911dae7ff876e77826c0c8454cf
          exitCode: 0
          finishedAt: "2023-01-09T04:49:40Z"
          reason: Completed
          startedAt: "2023-01-09T04:49:39Z"
    hostIP: 10.0.199.219
    phase: Succeeded
    podIP: 10.129.0.47
    podIPs:
    - ip: 10.129.0.47
    qosClass: Guaranteed
    startTime: "2023-01-09T04:49:38Z"
kind: PodList
metadata:
  resourceVersion: "268522"
