2023-01-09T04:43:51.809951069Z 2023-01-09T04:43:51.809Z	INFO	operator.main	ingress-operator/start.go:64	using operator namespace	{"namespace": "openshift-ingress-operator"}
2023-01-09T04:43:52.861151875Z I0109 04:43:52.861109       1 request.go:682] Waited for 1.040833102s due to client-side throttling, not priority and fairness, request: GET:https://172.30.0.1:443/apis/performance.openshift.io/v1alpha1?timeout=32s
2023-01-09T04:43:56.837810137Z 2023-01-09T04:43:56.837Z	INFO	operator.main	ingress-operator/start.go:64	registering Prometheus metrics for canary_controller
2023-01-09T04:43:56.837810137Z 2023-01-09T04:43:56.837Z	INFO	operator.main	ingress-operator/start.go:64	registering Prometheus metrics for ingress_controller
2023-01-09T04:43:56.837842594Z 2023-01-09T04:43:56.837Z	INFO	operator.main	ingress-operator/start.go:64	registering Prometheus metrics for route_metrics_controller
2023-01-09T04:43:56.837895826Z 2023-01-09T04:43:56.837Z	INFO	operator.main	ingress-operator/start.go:64	watching file	{"filename": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"}
2023-01-09T04:43:56.838068315Z 2023-01-09T04:43:56.838Z	INFO	operator.init	runtime/asm_amd64.s:1594	starting metrics listener	{"addr": "127.0.0.1:60000"}
2023-01-09T04:44:01.843842818Z 2023-01-09T04:44:01.843Z	INFO	operator.init.controller-runtime.metrics	manager/manager.go:391	Metrics server is starting to listen	{"addr": ":8080"}
2023-01-09T04:44:01.844513655Z I0109 04:44:01.844490       1 base_controller.go:67] Waiting for caches to sync for spread-default-router-pods
2023-01-09T04:44:01.945452078Z I0109 04:44:01.945410       1 base_controller.go:73] Caches are synced for spread-default-router-pods 
2023-01-09T04:44:01.945452078Z I0109 04:44:01.945435       1 base_controller.go:110] Starting #1 worker of spread-default-router-pods controller ...
2023-01-09T04:44:02.896782766Z I0109 04:44:02.896734       1 request.go:682] Waited for 1.047851296s due to client-side throttling, not priority and fairness, request: GET:https://172.30.0.1:443/apis/apiextensions.k8s.io/v1?timeout=32s
2023-01-09T04:44:06.860775281Z 2023-01-09T04:44:06.860Z	INFO	operator.init	runtime/asm_amd64.s:1594	Starting server	{"path": "/metrics", "kind": "metrics", "addr": "[::]:8080"}
2023-01-09T04:44:06.961213821Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "ingress_controller", "source": "kind source: *v1.IngressController"}
2023-01-09T04:44:06.961213821Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "ingress_controller", "source": "kind source: *v1.Deployment"}
2023-01-09T04:44:06.961213821Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "configurable_route_controller", "source": "kind source: *v1.Ingress"}
2023-01-09T04:44:06.961213821Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "ingress_controller", "source": "kind source: *v1.Service"}
2023-01-09T04:44:06.961267177Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "ingress_controller", "source": "kind source: *v1.Pod"}
2023-01-09T04:44:06.961267177Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "canary_controller", "source": "kind source: *v1.IngressController"}
2023-01-09T04:44:06.961267177Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "ingress_controller", "source": "kind source: *v1.DNS"}
2023-01-09T04:44:06.961267177Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "ingress_controller", "source": "kind source: *v1.DNSRecord"}
2023-01-09T04:44:06.961267177Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "canary_controller", "source": "kind source: *v1.Route"}
2023-01-09T04:44:06.961267177Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "certificate_publisher_controller", "source": "informer source: 0xc0003b4508"}
2023-01-09T04:44:06.961298933Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "canary_controller"}
2023-01-09T04:44:06.961298933Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "dns_controller", "source": "kind source: *v1.DNSRecord"}
2023-01-09T04:44:06.961298933Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "ingressclass_controller", "source": "kind source: *v1.IngressController"}
2023-01-09T04:44:06.961298933Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "configurable_route_controller", "source": "&{{%!s(*v1.Role=&{{ } {      0 {{0 0 <nil>}} <nil> <nil> map[] map[] [] [] []} []}) %!s(*cache.multiNamespaceCache=&{map[openshift-config:0xc0003b4040 openshift-config-managed:0xc0003b4038 openshift-ingress:0xc0003b4018 openshift-ingress-canary:0xc0003b4020 openshift-ingress-operator:0xc0002a8428] 0xc000251030 0xc00013c870 0xc000038728}) %!s(chan error=<nil>) %!s(func()=<nil>)}}"}
2023-01-09T04:44:06.961314749Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "status_controller", "source": "kind source: *v1.IngressController"}
2023-01-09T04:44:06.961314749Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "dns_controller", "source": "kind source: *v1.DNS"}
2023-01-09T04:44:06.961329321Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "configurable_route_controller", "source": "&{{%!s(*v1.RoleBinding=&{{ } {      0 {{0 0 <nil>}} <nil> <nil> map[] map[] [] [] []} [] {  }}) %!s(*cache.multiNamespaceCache=&{map[openshift-config:0xc0003b4040 openshift-config-managed:0xc0003b4038 openshift-ingress:0xc0003b4018 openshift-ingress-canary:0xc0003b4020 openshift-ingress-operator:0xc0002a8428] 0xc000251030 0xc00013c870 0xc000038728}) %!s(chan error=<nil>) %!s(func()=<nil>)}}"}
2023-01-09T04:44:06.961329321Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "status_controller", "source": "kind source: *v1.ClusterOperator"}
2023-01-09T04:44:06.961341445Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "dns_controller", "source": "kind source: *v1.Infrastructure"}
2023-01-09T04:44:06.961341445Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "configurable_route_controller"}
2023-01-09T04:44:06.961341445Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "status_controller"}
2023-01-09T04:44:06.961351904Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "dns_controller", "source": "kind source: *v1.Secret"}
2023-01-09T04:44:06.961351904Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "certificate_controller", "source": "kind source: *v1.IngressController"}
2023-01-09T04:44:06.961351904Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "ingress_controller", "source": "kind source: *v1.Ingress"}
2023-01-09T04:44:06.961351904Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "dns_controller"}
2023-01-09T04:44:06.961367917Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "certificate_controller"}
2023-01-09T04:44:06.961367917Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "ingressclass_controller", "source": "kind source: *v1.IngressClass"}
2023-01-09T04:44:06.961367917Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "clientca_configmap_controller", "source": "kind source: *v1.IngressController"}
2023-01-09T04:44:06.961378686Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "ingressclass_controller"}
2023-01-09T04:44:06.961378686Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "crl", "source": "informer source: 0xc0003b4740"}
2023-01-09T04:44:06.961389379Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "clientca_configmap_controller", "source": "kind source: *v1.ConfigMap"}
2023-01-09T04:44:06.961399323Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "route_metrics_controller", "source": "kind source: *v1.IngressController"}
2023-01-09T04:44:06.961409455Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "certificate_publisher_controller", "source": "kind source: *v1.IngressController"}
2023-01-09T04:44:06.961419627Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "certificate_publisher_controller"}
2023-01-09T04:44:06.961419627Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "clientca_configmap_controller", "source": "kind source: *v1.ConfigMap"}
2023-01-09T04:44:06.961430699Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "ingress_controller"}
2023-01-09T04:44:06.961440919Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "route_metrics_controller", "source": "&{{%!s(*v1.Route=&{{ } {      0 {{0 0 <nil>}} <nil> <nil> map[] map[] [] [] []} {   {  <nil>} [] <nil> <nil> } {[]}}) %!s(*cache.informerCache=&{0xc0001458a0}) %!s(chan error=<nil>) %!s(func()=<nil>)}}"}
2023-01-09T04:44:06.961440919Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "clientca_configmap_controller"}
2023-01-09T04:44:06.961471322Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "error_page_configmap_controller", "source": "kind source: *v1.IngressController"}
2023-01-09T04:44:06.961471322Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "route_metrics_controller"}
2023-01-09T04:44:06.961471322Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "error_page_configmap_controller", "source": "kind source: *v1.ConfigMap"}
2023-01-09T04:44:06.961483549Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "crl", "source": "informer source: 0xc0003b4740"}
2023-01-09T04:44:06.961495930Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "error_page_configmap_controller", "source": "kind source: *v1.ConfigMap"}
2023-01-09T04:44:06.961516544Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "error_page_configmap_controller"}
2023-01-09T04:44:06.961530577Z 2023-01-09T04:44:06.961Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "no matches for kind \"Route\" in version \"route.openshift.io/v1\""}
2023-01-09T04:44:06.961556467Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "crl", "source": "kind source: *v1.IngressController"}
2023-01-09T04:44:06.961565417Z 2023-01-09T04:44:06.961Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "crl"}
2023-01-09T04:44:12.763745421Z 2023-01-09T04:44:12.763Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "failed to get restmapping: no matches for kind \"Route\" in group \"route.openshift.io\""}
2023-01-09T04:44:12.865111647Z 2023-01-09T04:44:12.865Z	INFO	operator.certificate_publisher_controller	handler/enqueue_mapped.go:80	queueing ingresscontroller	{"name": "default"}
2023-01-09T04:44:12.866282344Z 2023-01-09T04:44:12.866Z	INFO	operator.ingress_controller	handler/enqueue_mapped.go:80	queueing ingresscontroller	{"name": "default", "related": ""}
2023-01-09T04:44:12.866394659Z 2023-01-09T04:44:12.866Z	INFO	operator.ingress_controller	handler/enqueue_mapped.go:80	queueing ingresscontroller	{"name": "default", "related": ""}
2023-01-09T04:44:13.167742577Z 2023-01-09T04:44:13.167Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "certificate_publisher_controller", "worker count": 1}
2023-01-09T04:44:13.167835280Z 2023-01-09T04:44:13.167Z	INFO	operator.certificate_publisher_controller	controller/controller.go:121	Reconciling	{"request": "openshift-ingress-operator/default"}
2023-01-09T04:44:13.269140335Z 2023-01-09T04:44:13.268Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "dns_controller", "worker count": 1}
2023-01-09T04:44:13.269233714Z 2023-01-09T04:44:13.269Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "status_controller", "worker count": 1}
2023-01-09T04:44:13.269296239Z 2023-01-09T04:44:13.269Z	INFO	operator.ingress_controller	handler/enqueue_mapped.go:80	queueing ingress	{"name": "default", "related": ""}
2023-01-09T04:44:13.269328096Z 2023-01-09T04:44:13.269Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "ingressclass_controller", "worker count": 1}
2023-01-09T04:44:13.269385426Z 2023-01-09T04:44:13.269Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "configurable_route_controller", "worker count": 1}
2023-01-09T04:44:13.269428086Z 2023-01-09T04:44:13.269Z	INFO	operator.status_controller	controller/controller.go:121	Reconciling	{"request": "openshift-ingress-operator/default"}
2023-01-09T04:44:13.269501777Z 2023-01-09T04:44:13.269Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "crl", "worker count": 1}
2023-01-09T04:44:13.269544567Z 2023-01-09T04:44:13.269Z	INFO	operator.ingressclass_controller	controller/controller.go:121	reconciling	{"request": "openshift-ingress-operator/default"}
2023-01-09T04:44:13.269583348Z 2023-01-09T04:44:13.269Z	INFO	operator.configurable_route_controller	controller/controller.go:121	reconciling	{"request": "/cluster"}
2023-01-09T04:44:13.269657604Z 2023-01-09T04:44:13.269Z	INFO	operator.ingress_controller	handler/enqueue_mapped.go:80	queueing ingress	{"name": "default", "related": ""}
2023-01-09T04:44:13.269712648Z 2023-01-09T04:44:13.269Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "certificate_controller", "worker count": 1}
2023-01-09T04:44:13.269712648Z 2023-01-09T04:44:13.269Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "ingress_controller", "worker count": 1}
2023-01-09T04:44:13.269796981Z 2023-01-09T04:44:13.269Z	INFO	operator.ingress_controller	controller/controller.go:121	reconciling	{"request": "openshift-ingress-operator/default"}
2023-01-09T04:44:13.269808354Z 2023-01-09T04:44:13.269Z	INFO	operator.certificate_controller	controller/controller.go:121	Reconciling	{"request": "openshift-ingress-operator/default"}
2023-01-09T04:44:13.269820466Z 2023-01-09T04:44:13.269Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "error_page_configmap_controller", "worker count": 1}
2023-01-09T04:44:13.269830654Z 2023-01-09T04:44:13.269Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "clientca_configmap_controller", "worker count": 1}
2023-01-09T04:44:13.269840002Z 2023-01-09T04:44:13.269Z	INFO	operator.ingress_controller	handler/enqueue_mapped.go:80	queueing ingress	{"name": "default", "related": ""}
2023-01-09T04:44:13.460043344Z 2023-01-09T04:44:13.459Z	ERROR	operator.ingress_controller	controller/controller.go:121	got retryable error; requeueing	{"after": "1m0s", "error": "IngressController is degraded: DeploymentAvailable=False (DeploymentUnavailable: The deployment has Available status condition set to False (reason: MinimumReplicasUnavailable) with message: Deployment does not have minimum availability.), DeploymentReplicasMinAvailable=False (DeploymentMinimumReplicasNotMet: 0/2 of replicas are available, max unavailable is 1), LoadBalancerReady=False (LoadBalancerPending: The LoadBalancer service is pending)"}
2023-01-09T04:44:13.460101230Z 2023-01-09T04:44:13.460Z	INFO	operator.ingress_controller	controller/controller.go:121	reconciling	{"request": "openshift-ingress-operator/default"}
2023-01-09T04:44:13.541944921Z 2023-01-09T04:44:13.541Z	ERROR	operator.ingress_controller	controller/controller.go:121	got retryable error; requeueing	{"after": "1m0s", "error": "IngressController is degraded: DeploymentAvailable=False (DeploymentUnavailable: The deployment has Available status condition set to False (reason: MinimumReplicasUnavailable) with message: Deployment does not have minimum availability.), DeploymentReplicasMinAvailable=False (DeploymentMinimumReplicasNotMet: 0/2 of replicas are available, max unavailable is 1), LoadBalancerReady=False (LoadBalancerPending: The LoadBalancer service is pending)"}
2023-01-09T04:44:16.962421043Z 2023-01-09T04:44:16.962Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "no matches for kind \"Route\" in version \"route.openshift.io/v1\""}
2023-01-09T04:44:23.814792713Z I0109 04:44:23.814753       1 request.go:682] Waited for 1.046538263s due to client-side throttling, not priority and fairness, request: GET:https://172.30.0.1:443/apis/build.openshift.io/v1?timeout=32s
2023-01-09T04:44:26.962515851Z 2023-01-09T04:44:26.962Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "no matches for kind \"Route\" in version \"route.openshift.io/v1\""}
2023-01-09T04:44:28.666790724Z 2023-01-09T04:44:28.666Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "failed to get restmapping: no matches for kind \"Route\" in group \"route.openshift.io\""}
2023-01-09T04:44:33.815587601Z I0109 04:44:33.815547       1 request.go:682] Waited for 1.047181411s due to client-side throttling, not priority and fairness, request: GET:https://172.30.0.1:443/apis/machine.openshift.io/v1?timeout=32s
2023-01-09T04:44:36.962300213Z 2023-01-09T04:44:36.962Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "no matches for kind \"Route\" in version \"route.openshift.io/v1\""}
2023-01-09T04:44:38.668252434Z 2023-01-09T04:44:38.668Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "failed to get restmapping: no matches for kind \"Route\" in group \"route.openshift.io\""}
2023-01-09T04:44:43.864915688Z I0109 04:44:43.864870       1 request.go:682] Waited for 1.097558868s due to client-side throttling, not priority and fairness, request: GET:https://172.30.0.1:443/apis/discovery.k8s.io/v1?timeout=32s
2023-01-09T04:44:46.962586552Z 2023-01-09T04:44:46.962Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "no matches for kind \"Route\" in version \"route.openshift.io/v1\""}
2023-01-09T04:44:48.666448316Z 2023-01-09T04:44:48.666Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "failed to get restmapping: no matches for kind \"Route\" in group \"route.openshift.io\""}
2023-01-09T04:44:53.865564528Z I0109 04:44:53.865521       1 request.go:682] Waited for 1.096822058s due to client-side throttling, not priority and fairness, request: GET:https://172.30.0.1:443/apis/tuned.openshift.io/v1?timeout=32s
2023-01-09T04:44:56.961826955Z 2023-01-09T04:44:56.961Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "no matches for kind \"Route\" in version \"route.openshift.io/v1\""}
2023-01-09T04:45:06.220233914Z 2023-01-09T04:45:06.220Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "failed to get restmapping: no matches for kind \"Route\" in group \"route.openshift.io\""}
2023-01-09T04:45:06.962686505Z 2023-01-09T04:45:06.962Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "no matches for kind \"Route\" in version \"route.openshift.io/v1\""}
2023-01-09T04:45:13.460412159Z 2023-01-09T04:45:13.460Z	INFO	operator.ingress_controller	controller/controller.go:121	reconciling	{"request": "openshift-ingress-operator/default"}
2023-01-09T04:45:13.815167245Z I0109 04:45:13.815119       1 request.go:682] Waited for 1.047028036s due to client-side throttling, not priority and fairness, request: GET:https://172.30.0.1:443/apis/cloudcredential.openshift.io/v1?timeout=32s
2023-01-09T04:45:16.962089256Z 2023-01-09T04:45:16.961Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "no matches for kind \"Route\" in version \"route.openshift.io/v1\""}
2023-01-09T04:45:24.719869654Z 2023-01-09T04:45:24.719Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "failed to get restmapping: no matches for kind \"Route\" in group \"route.openshift.io\""}
2023-01-09T04:45:24.734928936Z 2023-01-09T04:45:24.734Z	INFO	operator.status_controller	controller/controller.go:121	Reconciling	{"request": "openshift-ingress-operator/default"}
2023-01-09T04:45:24.735020616Z 2023-01-09T04:45:24.734Z	INFO	operator.ingressclass_controller	controller/controller.go:121	reconciling	{"request": "openshift-ingress-operator/default"}
2023-01-09T04:45:24.735114610Z 2023-01-09T04:45:24.734Z	INFO	operator.certificate_controller	controller/controller.go:121	Reconciling	{"request": "openshift-ingress-operator/default"}
2023-01-09T04:45:24.737939986Z 2023-01-09T04:45:24.737Z	ERROR	operator.ingress_controller	controller/controller.go:121	got retryable error; requeueing	{"after": "1m0s", "error": "IngressController is degraded: DeploymentAvailable=False (DeploymentUnavailable: The deployment has Available status condition set to False (reason: MinimumReplicasUnavailable) with message: Deployment does not have minimum availability.), DeploymentReplicasMinAvailable=False (DeploymentMinimumReplicasNotMet: 0/2 of replicas are available, max unavailable is 1), LoadBalancerReady=False (LoadBalancerPending: The LoadBalancer service is pending)"}
2023-01-09T04:45:24.737939986Z 2023-01-09T04:45:24.737Z	INFO	operator.ingress_controller	controller/controller.go:121	reconciling	{"request": "openshift-ingress-operator/default"}
2023-01-09T04:45:24.811306150Z 2023-01-09T04:45:24.811Z	ERROR	operator.ingress_controller	controller/controller.go:121	got retryable error; requeueing	{"after": "1m0s", "error": "IngressController is degraded: DeploymentAvailable=False (DeploymentUnavailable: The deployment has Available status condition set to False (reason: MinimumReplicasUnavailable) with message: Deployment does not have minimum availability.), DeploymentReplicasMinAvailable=False (DeploymentMinimumReplicasNotMet: 0/2 of replicas are available, max unavailable is 1), LoadBalancerReady=False (LoadBalancerPending: The LoadBalancer service is pending)"}
2023-01-09T04:45:26.962941142Z 2023-01-09T04:45:26.962Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "no matches for kind \"Route\" in version \"route.openshift.io/v1\""}
2023-01-09T04:45:33.815091689Z I0109 04:45:33.815053       1 request.go:682] Waited for 1.047389711s due to client-side throttling, not priority and fairness, request: GET:https://172.30.0.1:443/apis/performance.openshift.io/v1?timeout=32s
2023-01-09T04:45:36.962224812Z 2023-01-09T04:45:36.962Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "no matches for kind \"Route\" in version \"route.openshift.io/v1\""}
2023-01-09T04:45:46.620351203Z 2023-01-09T04:45:46.620Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "failed to get restmapping: no matches for kind \"Route\" in group \"route.openshift.io\""}
2023-01-09T04:45:46.961931695Z 2023-01-09T04:45:46.961Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "no matches for kind \"Route\" in version \"route.openshift.io/v1\""}
2023-01-09T04:45:53.816167038Z I0109 04:45:53.816130       1 request.go:682] Waited for 1.046814614s due to client-side throttling, not priority and fairness, request: GET:https://172.30.0.1:443/apis/image.openshift.io/v1?timeout=32s
2023-01-09T04:45:56.961903837Z 2023-01-09T04:45:56.961Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "no matches for kind \"Route\" in version \"route.openshift.io/v1\""}
2023-01-09T04:46:06.270824582Z 2023-01-09T04:46:06.270Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "failed to get restmapping: no matches for kind \"Route\" in group \"route.openshift.io\""}
2023-01-09T04:46:06.962536377Z 2023-01-09T04:46:06.962Z	ERROR	operator.init.controller-runtime.source	wait/wait.go:235	if kind is a CRD, it should be installed before calling Start	{"kind": "Route.route.openshift.io", "error": "no matches for kind \"Route\" in version \"route.openshift.io/v1\""}
2023-01-09T04:46:13.069107438Z 2023-01-09T04:46:13.069Z	ERROR	operator.init	controller/controller.go:215	Could not wait for Cache to sync	{"controller": "canary_controller", "error": "failed to wait for canary_controller caches to sync: timed out waiting for cache to be synced"}
2023-01-09T04:46:13.069107438Z 2023-01-09T04:46:13.069Z	ERROR	operator.init	controller/controller.go:215	Could not wait for Cache to sync	{"controller": "route_metrics_controller", "error": "failed to wait for route_metrics_controller caches to sync: timed out waiting for cache to be synced"}
2023-01-09T04:46:13.069148952Z 2023-01-09T04:46:13.069Z	INFO	operator.init	runtime/asm_amd64.s:1594	Stopping and waiting for non leader election runnables
2023-01-09T04:46:13.069148952Z 2023-01-09T04:46:13.069Z	INFO	operator.init	runtime/asm_amd64.s:1594	Stopping and waiting for leader election runnables
2023-01-09T04:46:13.069148952Z 2023-01-09T04:46:13.069Z	ERROR	operator.init	runtime/asm_amd64.s:1594	error received after stop sequence was engaged	{"error": "failed to wait for route_metrics_controller caches to sync: timed out waiting for cache to be synced"}
2023-01-09T04:46:13.069162433Z 2023-01-09T04:46:13.069Z	INFO	operator.init	manager/runnable_group.go:219	Shutdown signal received, waiting for all workers to finish	{"controller": "certificate_publisher_controller"}
2023-01-09T04:46:13.069173497Z 2023-01-09T04:46:13.069Z	INFO	operator.init	manager/runnable_group.go:219	Shutdown signal received, waiting for all workers to finish	{"controller": "clientca_configmap_controller"}
2023-01-09T04:46:13.069183657Z 2023-01-09T04:46:13.069Z	INFO	operator.init	manager/runnable_group.go:219	Shutdown signal received, waiting for all workers to finish	{"controller": "error_page_configmap_controller"}
2023-01-09T04:46:13.069196191Z 2023-01-09T04:46:13.069Z	INFO	operator.init	manager/runnable_group.go:219	Shutdown signal received, waiting for all workers to finish	{"controller": "ingress_controller"}
2023-01-09T04:46:13.069196191Z 2023-01-09T04:46:13.069Z	INFO	operator.init	manager/runnable_group.go:219	All workers finished	{"controller": "clientca_configmap_controller"}
2023-01-09T04:46:13.069207748Z 2023-01-09T04:46:13.069Z	INFO	operator.init	manager/runnable_group.go:219	All workers finished	{"controller": "ingress_controller"}
2023-01-09T04:46:13.069207748Z 2023-01-09T04:46:13.069Z	INFO	operator.init	manager/runnable_group.go:219	All workers finished	{"controller": "certificate_publisher_controller"}
2023-01-09T04:46:13.069218858Z 2023-01-09T04:46:13.069Z	INFO	operator.init	manager/runnable_group.go:219	Shutdown signal received, waiting for all workers to finish	{"controller": "configurable_route_controller"}
2023-01-09T04:46:13.069218858Z 2023-01-09T04:46:13.069Z	INFO	operator.init	manager/runnable_group.go:219	Shutdown signal received, waiting for all workers to finish	{"controller": "dns_controller"}
2023-01-09T04:46:13.069218858Z 2023-01-09T04:46:13.069Z	INFO	operator.init	manager/runnable_group.go:219	Shutdown signal received, waiting for all workers to finish	{"controller": "certificate_controller"}
2023-01-09T04:46:13.069241178Z 2023-01-09T04:46:13.069Z	INFO	operator.init	manager/runnable_group.go:219	Shutdown signal received, waiting for all workers to finish	{"controller": "ingressclass_controller"}
2023-01-09T04:46:13.069241178Z 2023-01-09T04:46:13.069Z	INFO	operator.init	manager/runnable_group.go:219	All workers finished	{"controller": "dns_controller"}
2023-01-09T04:46:13.069241178Z 2023-01-09T04:46:13.069Z	INFO	operator.init	manager/runnable_group.go:219	All workers finished	{"controller": "configurable_route_controller"}
2023-01-09T04:46:13.069241178Z 2023-01-09T04:46:13.069Z	INFO	operator.init	manager/runnable_group.go:219	Shutdown signal received, waiting for all workers to finish	{"controller": "status_controller"}
2023-01-09T04:46:13.069250646Z 2023-01-09T04:46:13.069Z	INFO	operator.init	manager/runnable_group.go:219	Shutdown signal received, waiting for all workers to finish	{"controller": "crl"}
2023-01-09T04:46:13.069250646Z 2023-01-09T04:46:13.069Z	INFO	operator.init	manager/runnable_group.go:219	All workers finished	{"controller": "status_controller"}
2023-01-09T04:46:13.069250646Z 2023-01-09T04:46:13.069Z	INFO	operator.init	manager/runnable_group.go:219	All workers finished	{"controller": "error_page_configmap_controller"}
2023-01-09T04:46:13.069258392Z 2023-01-09T04:46:13.069Z	INFO	operator.init	manager/runnable_group.go:219	All workers finished	{"controller": "certificate_controller"}
2023-01-09T04:46:13.069258392Z 2023-01-09T04:46:13.069Z	INFO	operator.init	manager/runnable_group.go:219	All workers finished	{"controller": "ingressclass_controller"}
2023-01-09T04:46:13.069265856Z 2023-01-09T04:46:13.069Z	INFO	operator.init	manager/runnable_group.go:219	All workers finished	{"controller": "crl"}
2023-01-09T04:46:13.069273101Z 2023-01-09T04:46:13.069Z	INFO	operator.init	runtime/asm_amd64.s:1594	Stopping and waiting for caches
2023-01-09T04:46:13.069363485Z 2023-01-09T04:46:13.069Z	INFO	operator.init	runtime/asm_amd64.s:1594	Stopping and waiting for webhooks
2023-01-09T04:46:13.069374254Z 2023-01-09T04:46:13.069Z	INFO	operator.init	runtime/asm_amd64.s:1594	Wait completed, proceeding to shutdown the manager
2023-01-09T04:46:13.071087650Z 2023-01-09T04:46:13.071Z	INFO	operator.main	runtime/asm_amd64.s:1594	file watch events channel closed
2023-01-09T04:46:13.071087650Z 2023-01-09T04:46:13.071Z	ERROR	operator.main	cobra/command.go:860	error starting	{"error": "failed to wait for canary_controller caches to sync: timed out waiting for cache to be synced"}
