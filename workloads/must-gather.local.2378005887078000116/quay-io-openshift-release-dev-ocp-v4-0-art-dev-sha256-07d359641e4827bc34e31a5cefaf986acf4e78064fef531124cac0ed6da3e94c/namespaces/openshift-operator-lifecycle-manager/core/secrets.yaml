---
apiVersion: v1
items:
- apiVersion: v1
  data:
    .dockercfg: NzMxMyBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: c3d21072-2032-4fe7-9fbb-454421455020
      openshift.io/token-secret.name: builder-token-8phtw
      openshift.io/token-secret.value: ""
    creationTimestamp: "2023-01-09T04:45:31Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"84de8528-10ac-48f8-af3e-1155fa591730"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2023-01-09T04:47:33Z"
    name: builder-dockercfg-8qlbb
    namespace: openshift-operator-lifecycle-manager
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: builder-token-8phtw
      uid: 84de8528-10ac-48f8-af3e-1155fa591730
    resourceVersion: "20780"
    uid: d52bd994-d387-407c-adb7-456972804a2b
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MzYgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: OTc3IGJ5dGVzIGxvbmc=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: c3d21072-2032-4fe7-9fbb-454421455020
    creationTimestamp: "2023-01-09T04:45:30Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2023-01-09T04:45:30Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:46:06Z"
    name: builder-token-8phtw
    namespace: openshift-operator-lifecycle-manager
    resourceVersion: "17771"
    uid: 84de8528-10ac-48f8-af3e-1155fa591730
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVWakNDQXo2Z0F3SUJBZ0lJU25WaklDU0NtU293RFFZSktvWklodmNOQVFFTEJRQXdOakUwTURJR0ExVUUKQXd3cmIzQmxibk5vYVdaMExYTmxjblpwWTJVdGMyVnlkbWx1WnkxemFXZHVaWEpBTVRZM016SXpPVEkyTkRBZQpGdzB5TXpBeE1Ea3dORFF4TVRkYUZ3MHlOVEF4TURnd05EUXhNVGhhTUV3eFNqQklCZ05WQkFNVFFXTmhkR0ZzCmIyY3RiM0JsY21GMGIzSXRiV1YwY21samN5NXZjR1Z1YzJocFpuUXRiM0JsY21GMGIzSXRiR2xtWldONVkyeGwKTFcxaGJtRm5aWEl1YzNaak1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBOUlZQQpDQm0wMVZuYno4T1U3SGI5aEduSjNITUpFTC85L3Zzc0xVNzA2NlFoajQ5ei80RjhSdFQ2T1AxK1QwSDY3dXRSCnU1VUFHSFZ5Z3J6dXU3N3dYTE5DU1JvWkJBQ2I0dzlXbE9lVjdUWDZreitVVW1ZeEl0V1hsL1R0dWJoRFBsTmMKb09YM0xQSUYzMFJXRXJCLytsMDVvSlRKak1WR2VIT0FhWVJkUStXNzVOUUhMN1lQNGt2eEo5VzZjZjVzSkpvRQptSU1nUlhRZjI5R3JFVU8vRlVJMFhIcUZRR0V5UWJnRU8wTUxkWkpLWHI0ejRpeG9nd21TY2pUeVoyRzI0UEhzCkVBWVNCdXFFdWZxOUtXY0JNcFRpaXkzakZVUDdmR0VXUzV0MCs0LzVuaHRKcEpCRll2WVA1MWNBWUFIbHp2SkUKOGlXbVpmTDN5dm0xZlJWYWdRSURBUUFCbzRJQlVEQ0NBVXd3RGdZRFZSMFBBUUgvQkFRREFnV2dNQk1HQTFVZApKUVFNTUFvR0NDc0dBUVVGQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRkZ3cFk3RG8yb3dJCjR5UUNJUVRDQW9ZaXpYWENNQjhHQTFVZEl3UVlNQmFBRkFsemVoc2VPZm50WG81Wmc0U3BDeTFxdVA0SE1JR2YKQmdOVkhSRUVnWmN3Z1pTQ1FXTmhkR0ZzYjJjdGIzQmxjbUYwYjNJdGJXVjBjbWxqY3k1dmNHVnVjMmhwWm5RdApiM0JsY21GMGIzSXRiR2xtWldONVkyeGxMVzFoYm1GblpYSXVjM1pqZ2s5allYUmhiRzluTFc5d1pYSmhkRzl5CkxXMWxkSEpwWTNNdWIzQmxibk5vYVdaMExXOXdaWEpoZEc5eUxXeHBabVZqZVdOc1pTMXRZVzVoWjJWeUxuTjIKWXk1amJIVnpkR1Z5TG14dlkyRnNNRFVHQ3lzR0FRUUJrZ2dSWkFJQkJDWVRKREl3WmpVMVpUSTRMVFUzTTJNdApORGN4WlMwNVlUVXpMV1EzTTJNMU1qZ3hNR0l6TnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUpxazdHWElCCnhJZXRHMVJsdDd4a3BJYlFKcTVhdU9MMjR6amlaaEhiYmZNRU04M09TeGNuZlFZUUp3MmE4cGJVOUlpemE0Z1oKUWYxbmdCUkdSbXVIekhXUEZQRE5CbFd1ZDhMRWQxTGZnaEtuQllXTVdFdUdxTnBJNVJxMFRBZVFWYndRdm4vOApwemJxdFNEeGxWaXNLZzM3VWhWdDRVQTVkQW9iSTUvSElSQkV4VExlU2NPQVJQWVNYd1gycW1WNURiM3NIY1c4Cm9mVjNvOGdIT2g5bm1FekdRNkJuazNzL09WQ2Ewb0x4NnNFS045U1JjdXVZeWk3L3Nkb3pLQUszNGFhaUVQWkwKUlFVam45eWY4dU1QUUk3SFMzTlFsYk5ENnZhWEZjZk94UUZuK0dFTTVxNWVHc0VjVWhISWRpMVdkSGo1L29UaAptWHAwWEtSQllkTVN4QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVVENDQWptZ0F3SUJBZ0lJTVlxYkJBd2MyTDB3RFFZSktvWklodmNOQVFFTEJRQXdOakUwTURJR0ExVUUKQXd3cmIzQmxibk5vYVdaMExYTmxjblpwWTJVdGMyVnlkbWx1WnkxemFXZHVaWEpBTVRZM016SXpPVEkyTkRBZQpGdzB5TXpBeE1Ea3dORFF4TUROYUZ3MHlOVEF6TURrd05EUXhNRFJhTURZeE5EQXlCZ05WQkFNTUsyOXdaVzV6CmFHbG1kQzF6WlhKMmFXTmxMWE5sY25acGJtY3RjMmxuYm1WeVFERTJOek15TXpreU5qUXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFRjYzViVmh0L1FYbzkrUVNURGZoK3U5Ynpwc1BVOXcxYgpXL25ub05scDZVaU95SmxCcHN6TGo2V2ozOE9kS29LTE9jbGg2c2dYSXJ2QXI2eVorTHYvTlpFY1VJQi9VZG1VClhkT0M4Z0RCTG5hQWZJY2RKcDJXUTlBeC94V05ZN01CMmpoTkNNa2dJSXN1U043QnlSSXlDcmJXYUJzWUZPQmsKQmNkbzBjbXpmbGlMcnlOMG1ienRXMm1ndWM3SHRvOWlyWEsvRFo5ekJmbldwdkxUOUZtbGdRZi9ReVRrVDZKNQpmeThpYmJjTjVSbStWeTd4dm9XK2hvSXd0M2JISEdSNUJwcGZjSE93dzVzZ1htUUIrNTdSNisydDB3c3BwcXp5CnZSVlo1eGVQSTBsc2paS2Q4a1hmdWc3bnVmQ0lBdk1YclczWVlMMFN3NnVNbEx5SVlEWkpBZ01CQUFHall6QmgKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlFKYzNvYgpIam41N1Y2T1dZT0VxUXN0YXJqK0J6QWZCZ05WSFNNRUdEQVdnQlFKYzNvYkhqbjU3VjZPV1lPRXFRc3RhcmorCkJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFtbkJiTml6VjRjTWNTd3JtUzkyRmp6QW9NdUJxSFpsbGF3QWQKMzdHODhZSTVLUzFTWVVmUWQxa0RIVmZxYTczbmZOendXSEswSGRmbkpzQldJeWpGY3luQ2pxbnhoeklzTUlIdwo0NUhQVXQyc2ZZTTdlNDBMazkrS09YeFlFTTNQS2R5TFdONDRRbUk3aVU5WVVsSjFON0RrbEswd1BVYTJoVCs5CnBMUmQzM09KWWlsUDhrdUQ1ek51eWlJUHRPZVBXNkxkd1c1dFUwdmlReStpbHE5eVc5NTZXTitOb0FZRVdZcCsKTGlPR0hOaXlxY3FGV3dUbWlYSWFFOUlHZFBGbFR2cVNtckZoZk5BRjJkT2NKMHk5S245Y2tKb3kraVRpZ0d6RQpTNGFaWTZlaVl4Q21NZkFTM3pEcXVYbmZPTGhoTERRYWpPVUprWXlJbDA4akwyWndEQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    tls.key: MTY3OSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      service.alpha.openshift.io/expiry: "2025-01-08T04:41:18Z"
      service.alpha.openshift.io/originating-service-name: catalog-operator-metrics
      service.alpha.openshift.io/originating-service-uid: 20f55e28-573c-471e-9a53-d73c52810b37
      service.beta.openshift.io/expiry: "2025-01-08T04:41:18Z"
    creationTimestamp: "2023-01-09T04:41:19Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:tls.crt: {}
          f:tls.key: {}
        f:metadata:
          f:annotations:
            .: {}
            f:service.alpha.openshift.io/expiry: {}
            f:service.alpha.openshift.io/originating-service-name: {}
            f:service.alpha.openshift.io/originating-service-uid: {}
            f:service.beta.openshift.io/expiry: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"20f55e28-573c-471e-9a53-d73c52810b37"}: {}
        f:type: {}
      manager: service-ca-operator
      operation: Update
      time: "2023-01-09T04:41:19Z"
    name: catalog-operator-serving-cert
    namespace: openshift-operator-lifecycle-manager
    ownerReferences:
    - apiVersion: v1
      kind: Service
      name: catalog-operator-metrics
      uid: 20f55e28-573c-471e-9a53-d73c52810b37
    resourceVersion: "6160"
    uid: 4dc6f944-f42e-4e9d-b5f8-0b95e83d623b
  type: kubernetes.io/tls
- apiVersion: v1
  data:
    .dockercfg: NzU2NSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: collect-profiles
      kubernetes.io/service-account.uid: cad81a54-e195-4d53-a71c-623f63260799
      openshift.io/token-secret.name: collect-profiles-token-c72qx
      openshift.io/token-secret.value: ""
    creationTimestamp: "2023-01-09T04:45:27Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1cf82a06-65d8-4b1b-b6ac-535124be791b"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2023-01-09T04:47:33Z"
    name: collect-profiles-dockercfg-92s7r
    namespace: openshift-operator-lifecycle-manager
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: collect-profiles-token-c72qx
      uid: 1cf82a06-65d8-4b1b-b6ac-535124be791b
    resourceVersion: "21012"
    uid: 7adf53e4-3d8d-434f-895a-6f4c40a38c67
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZTRxWmZuUDhGSWN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd01UQTVNRFF5T0RJeVdoY05Nek13TVRBMk1EUXlPREl5V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWkrQVJMQkFNQ1ByeEZhVXpNeHZmMHREdmNpOFZVdgpWTmhsQWxZWVJaUlNmOExCQXhHVmVGa0R2bW5vdzNXdlVNREc3MGY4RVduYVByVzM4SDV2VGZlQlg2OE9Lc3JYCjN2ODZiSzNUWDh6UldwQVhwNytGVjhCcUNKcTl1NlliSzVrc2lqdjZHZXc3NllMODZra2JLK1RZV04xYlJtQmoKNGNsUGM3Ulo1WFdpbk84elIwanN5dGp5M3M0VEF1VjczZVdoNmZXcDB6eUQ5UWVGL0VHd1NnN01uR21HN3QvUAptbFFzUXE5djJ2UzZjUG5HSDdidEYyTDNyMGVoNzF3QitsWDZXNEdKc3U1ZEIvQ3pscGMveGcySTdJd2lpV3NvCkw3Q3U1dVJvZ3gwQUpUaGVUWFZPbVBwZ2xqTzlKRmM2RUlRQU51U2ZiZ1cwZHlXZHZmTGZLUjhDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkl4UgpTTGEvOGFhdDgrM2NESTB3WVpKU2cvYi9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUURCWnNmNis1WHg4T3F5CkpoRiswR0Z4bzhEUldpOXdMZzRYUTVyL3pSSXh6THFwZkV2Ti9rM20vZ2RMdU40MG5PQ0tTbWlMTmx1NXA3QTEKZllsLzc4SXdFZDZteEU4R0ZwaC80QnRxV3pKd2k1VHVxOG5tMWhOcVNGaitBdDVOcXVRNlJCcUVZTzVkMm16MQo2ck1KT2VqTUxnZndwOWZxMnpsTEUxU05leGx6dlFwNjB0Vm5ZS0Fra0JZZndqdU9scUVzenZKWElraDhXTGptCjRXZkFydTB3cmxEYWt4OFhDWWlkL0wyL25aWVl0dHBuQ29zSXpXOTlkYnN2WjNwaHVrdHJWR09wS3FVV1FPRUoKWWRRVU5MRkFyYjhlcmRLNGQ2KzZrNmxEMXJLYVlpbFlqMUMrZkZlWno5TzdaQmJ4K0ZOS3kzUHNnQUQ4dmthVwppY1JITEI3MQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSUxlVEtYL2NkcVAwd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJek1ERXdPVEEwTWpneU1Wb1hEVE16TURFd05qQTBNamd5TVZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5SnFDV2NKMmhmYU0Kb2prYkJwOVphYng0eHZRRnFkQzI2T20yNFEvaG5GbXNNbTMxNkwzT3hWY3UyNnZFNXRkUGdLVXM1WS91VXUvQwpqbS9tNkh4WmY4SWQ4NlA5dmhyMkJZUC91UzBFcnE5ZGFxK1VvTm5aYVBCNFVIZmtKczBBZjEvaTk4ZkpWUUd0CnZzM0laRTdmN210OUR2T2EvMDV6dGdVdjFndkJBblA4SjRETEViVEJlbE9uNUNXenpGcXlldkQ4MUdTdWE2T3QKNjQxVU9kV1krb0NoeFNCb0tWaTFTbmpsZ3JaTWwwZmZHRnFWQXBDcnN2d1RQaE5qZU02MFZYTVNJOTNhUUpIZwpWNVlnQUE4L3hCR2NIUzlKbkVJV3l5WHpwMVZFM1JLdWlqVHMrdDZYUndiZGZnRC9Zb1h2cHM5V01OSXIwTG1QCkxKY0JuWXBTdFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTc3QUxPWjBreEdmdjZPM1ZVMnJLNmI3VUxua3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUtDeGNHRS9yUmhuYkx1SUlYUSs3WXhDSlNKNXE4enZCWkh4T3NXRGJXMnJjVXd1dXZ2QUtYQlVZVFp4CjZiZnlKcThDT3U3MHRPb0o3Tk1lYUtCZU1BMDhZQll6SU43ZDNWOXovMmZtMmJZSmtPUTlYQTErS3BoZzR3bmkKd3BlR2NLY09EZVlZMHJhYklqQ2VJcDYzS0s4NGxob01lV3FKZEIrc2pSSnJJODNOT2xZeDl5MmZwaHNyaW1IRgpFWE1XS0Nkci8xbDdTQlZ0bkVaYXFvMytNUmV4dDhVR3piZlRxU2ZsRDVXeXFvWlZRZCtXVEN0UmdzakhONG8wCk1oWG1aRnVnMHVVbkFUS2JDMFdYYS9VVDJQSmVMRzNhSUluKy9IOEx6TE8wRzB3bUpYRi9pQjBuYW96TmZuVVQKTDYrcTBrZFNwWHdvZjRDejUyR215NXByOGk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSVMyd3NyVkIrdTBRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl6TURFd09UQTBNamd5TVZvWERUTXpNREV3TmpBME1qZ3lNVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXM0L1pjakpnTlhYSFJ5ZllidU9mNWc2S2lWNUxadnlYUmVyam0vY0NtWHJYeWlERFV0VUVNaUtKTjI4WQpJUSthTVQ2ekdvZlhVZTBGdUd3OEd4OGp5STZuWGZ0S0R3OWtrVi8rSExJRndCQTgrWWhCTGsyU3k3WWh6eHRuCkRIME5PNTFCbUd0VXRrWURLM1hDbzJMbUVSVUY3YUV5eHdXRVB2U09yNFJwcDljY0lsby90YWpNandKYlROaXoKU2ttVUQySzArTW5oUldjZFUrYUsvYTJVYU1yd1V2bWNqN3JiTGlMRldQZDZrUmNpbEhvWVdqNTczQUZuU2dacQpoNzlENm1wSGhsckJ0ampyMjZzaFBJQ2FjYzgxeWllVy9SdnIrT1JRRVBBOFYzVVJSRmovM2xPdFRMV2hlM05xCnk2RTg3VU5zZWp1S1NOaXpnVm9zRzh6VkJRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVBTGs3Q0kxdUlobXozSEY2c0VRM0RYUmpkVXN3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFLYkd1THpqelMzcGYwQW1jQk9ESHVuMkxINER1VHBmZFozODZPSE5pZWhRCkY4eGRhOVdCTmxpYmVJbkcvNWNjeGZVVGhGTEZCckw2R0kxOUlFQ0YyWHFqaVIyazZDTU53LyttNlJoTG1DRHcKMy82SWZMdDBPejQvd3J1Y3VQeTV4NC9McmVlcDVpbUdXeEhQN3VGKzF2elk5TEM4Q1RMZ3JFWURCY1RFRDFBZwprc1VBK2k1VHErZzlCdWtsVjRNclBLVXJPbHJhdG9MVUVhdWJxQkRHeW1HVnhTZzY5ZklMRU4zendpRFdOQm50ClJKN3cvWk54N2R2VnBFcFdxdnFnNkFXUDRKWEF0emtaekRVaHFnT0I3dVpUdldyQkRFYUdmWWU5OVRlNUprWmsKcUVTc3NodUV3RTA1ckwybnJaVllZaWNSL3A5SGpLVmZXNThYbnU4M1FVZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGx6Q0NBbitnQXdJQkFnSUlkU09uemhWK0xpb3dEUVlKS29aSWh2Y05BUUVMQlFBd1dURlhNRlVHQTFVRQpBd3hPYjNCbGJuTm9hV1owTFd0MVltVXRZWEJwYzJWeWRtVnlMVzl3WlhKaGRHOXlYMnh2WTJGc2FHOXpkQzF5ClpXTnZkbVZ5ZVMxelpYSjJhVzVuTFhOcFoyNWxja0F4Tmpjek1qTTVNalkyTUI0WERUSXpNREV3T1RBME5ERXcKTmxvWERUTXpNREV3TmpBME5ERXdOMW93V1RGWE1GVUdBMVVFQXd4T2IzQmxibk5vYVdaMExXdDFZbVV0WVhCcApjMlZ5ZG1WeUxXOXdaWEpoZEc5eVgyeHZZMkZzYUc5emRDMXlaV052ZG1WeWVTMXpaWEoyYVc1bkxYTnBaMjVsCmNrQXhOamN6TWpNNU1qWTJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXJuQTcKWVBQVDdlQU5HMjVSMjF2azBLOWNVSE4rekhDWHdacWVsbml6OEE1MHdmeU83YWtrck82dVhVYVhuRnFCaXF1YQpncGtjcm9BV0Y4WWcvMVdFUG92OWNFb1RWSWVMb1NMMXR4ZDlYejk5d2V1OXFIVjZDdzhPKy9tSkhralFobUVQCm9IQzlxZ2txSlgzcUVSaWFnVGx0NVRETElZVjZMRDlSbXY5czd5TjZpV01nelJNMzlpYkpVR1FjVUlDQjZGb3kKYk0vaGJxNjNXYk4vVTZSdzFEL0pBK3ZCeGlLNmYvR1hhaFFwT3FqR0xhS2xDUEdwUHNFMWhSUnBXWnVPVENGMgp5bXdGcTBCMkRLbEJhQW9VUjFaQUlLQklRa2Q5aWgxZWhmVm95QnNaWmQzNmtWRHV0dXArd3FQdEsyV1cwN3FuCmYwd1c2ZFFNUGZzSVd5cnhrUUlEQVFBQm8yTXdZVEFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVZS82SWlHUmZveHordGM4dUVsK1cvNi9uc0Vvd0h3WURWUjBqQkJndwpGb0FVZS82SWlHUmZveHordGM4dUVsK1cvNi9uc0Vvd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFUHBiWjh4CnE2SG5QYUVtQnA4VVB5WVgya2NaSW1jNXJYVFpYcG1Eb1BlbGYxKzM1d3M5b0EyTHJRUFM4eEhOUXhHMTI5bG0KUXZlTUdOM1ZHOEdxdCtXNFg3emhCd2JnNjk3bkEzanUwcTJDeEtGcWhqdE9rTk04T1l4cDk0cld1dGNjaTQ0SQpmMmVkT1FqMTBUOHRRdUZGQmlaV0tPcThTK25JTG1ZZExlV1RNdUFlRW1jUkczTXk1WWdTS05jcHQzZmRaSXgxClJZZFRSS3BneWdpVW0xQ0c5ZU0vVG9QaktEYlU0ZTlwK0padldZa2dqQ3VWL3BKaS84cGw4YWJHWUp4WW40dWoKVXAxVlJuWTZUY0h1SURNcWpIa3Z4L20zakRMVzJ6YzJ2UFp5UXZ1ZE82THY5WHJVdFpSZGpXaCtSMndob2IySgpxV283Z1NHRjFYSkFJakk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtVENDQW9HZ0F3SUJBZ0lJTlVyY00ybkwvczB3RFFZSktvWklodmNOQVFFTEJRQXdKakVrTUNJR0ExVUUKQXd3YmFXNW5jbVZ6Y3kxdmNHVnlZWFJ2Y2tBeE5qY3pNak01TXpFeE1CNFhEVEl6TURFd09UQTBOREUxTUZvWApEVEkxTURFd09EQTBOREUxTVZvd1BERTZNRGdHQTFVRUF3d3hLaTVoY0hCekxuTnVMV3h2WjJkMmJITXRhbk50CkxuRmxMbVJsZG1Oc2RYTjBaWEl1YjNCbGJuTm9hV1owTG1OdmJUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMb2pNdVowWS96UE5MNGpMMVNVMG1Sa1ZMamVqek85UW13UHVXbTdvcnQ0bzBFMQo2TEZpRHBJM2dibjlUK1haZ2o5b1J0Nms5b284WXFRU2dHZnVoUSs5WW9TZjIzMVg3a01WbEtDamh0R2xRZ3NYCk9aZjdEZ3BlSjNIYkFIN052cndrc1RuMlExOVFpV2hXWG9PZHFHU0ZPOEFlaUJISGwvYU9QRkRJbmg4ZTlkWTQKYlpsbXkvWTVORVo2YkZaaGlDVlZoRlQ3NFEreWd3aFEzbVg1SE9CTHFoUGpuUEMxNmZOcE5aRUJ4VFo0N3NqUgpkdEJYbGRraGtEa0ZyWE5ydkpvSFBtWnJFZGZtcDF4UE03KzB0RnZNUGlPSXBzcUkwNjR1bktMUFFzaHhKTlhJCm9zenpRbk9NRUxLN29UOE5GU1ByQktRN0xxSnNzVjlGOFV6dHZYa0NBd0VBQWFPQnREQ0JzVEFPQmdOVkhROEIKQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdFd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVgpIUTRFRmdRVTVMelBUNDZvKzhjSVFGZ2xlVmI1aDhXTHBFVXdId1lEVlIwakJCZ3dGb0FVOUdnbjNkd2psTHRiCjZlcWJKaVZCVEh4RVgrRXdQQVlEVlIwUkJEVXdNNEl4S2k1aGNIQnpMbk51TFd4dloyZDJiSE10YW5OdExuRmwKTG1SbGRtTnNkWE4wWlhJdWIzQmxibk5vYVdaMExtTnZiVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBUWdCWApEeURrZkcxQXpOR2l2ZVR4NXZkQUtWaktzVU1iOXE2Y1cyTEU1SlV6b05YaFZ6dm16aWFVWk5FQ09uZ2lFNk54Ck53K2ZGN2RJT3plYUV2RG5GQ2ZPZWFzTTdNVWUxejQ5UDAzbktGcGQvR0ptcWhDUnZqMi8yWmJDT0VWSTh2UGsKYzdjWWNmcUthNmNhQ09MUnRMMFk5em5sb3lvU0dQL254d3ExYVFFZEUwRkVXQXlFVG5DdFJsZFBhdXIwOFY4dAozbWp1MjV6KzBrRk1HRGdoa1VxWUk0UFdqR2QzYnVpN0NhQmZmQkR3UytxajZyVUtKK1h5MTdaR0hFRW4wS3QyCmo1blM1ZTZZUXA2cTZaMGVEZ2txaWhnY3k1L2owdkxsRVl4blIvNThCdUo1cVBBNHFxcXRaWXRteEUzUVptVjgKM1VOcWR5czhqL05vMmRDNUNRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREREQ0NBZlNnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMk56TXlNemt6TVRFd0hoY05Nak13TVRBNU1EUTBNVFV3V2hjTk1qVXdNVEE0Ck1EUTBNVFV4V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTJOek15TXprek1URXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRERkQXJobklCZEZ2QUN2NEhXSVJQSwpwM1phQXJla3d1YUlWNEdnM1IzQ0IxMXZ5SFphMkdRcVo3ODV6b2NJS1RXc2VuV1MvZCtIYzFMeGRFS1UweFk1ClpuSDJBS3ZWZm9qc2VXb3d2dlNSd2hDT0t2elhaZ3hLU0NyVGw4TCs2WnZLK3Q0ckxSdlJtYmtSWU5ScGs3Mk0KaysvM240bXRoS0VxamVEU01kY210WjFwOTdGeDhHaFM1cmhPY2hLa3V3WXl3MURaaWsvakhNVjNZdkJZS1hoRQp5N2U1bklWUmFEVENLanFwdUV2RFZOYXZVdkxFNnZqNk1kNks5VGhvVmtBR3RNSVpXTlZndWdiRzQwMHp5OVgrClhLWW51QzJUei95Q2VhVCt4U1BVR3lsQWFwZDRkMW5zMC9uL1ZsUDV0RHgrNmRVMFVsOHNGNG1lNUlmc2RibzcKQWdNQkFBR2pSVEJETUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUIwRwpBMVVkRGdRV0JCVDBhQ2ZkM0NPVXUxdnA2cHNtSlVGTWZFUmY0VEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBCks0TTd4cTFQblFSWFNWMUlYVjhlM1NsRlUwWjJCZkJ5NjdvcWhWNHFobnlXa2d6UWU2S1hWelB5alVFSmYybngKRWVjQjFNTWU5NVhMMVpxUjYwWnVYWUtHb2M2RTBLSklxdEx3d1RiSE44OTNmRytGNHVqaEk2QlFiVE1jVWlBMQpIVG1venA4Nm9SRUlmQUtJVkVIeEsxRzFqTDBocVBlaGY4ZjlhQUpuZU1OUkF3QXZ4dS9uWWEvVVZhSzlROUQvCjh2QjdrYXZ2R1lzUmp4VnpIMDFKUFdPZyt2Nm9rWlZjR0FDeXJ3MXZZR3VVbUczcjZoaDZXamVrNjExelk0aTcKWU9sZTVrRjFnRGtEVERKY2lPQVJrSGFXK05Pd2RKNU1hMWxNZUhMVlcwMlMrdmVleFo3UmU1V3dVU2RTamh3UgpYNkllZm45MmRGWkFsZ253bnYvRGRRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    namespace: MzYgYnl0ZXMgbG9uZw==
    service-ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZTRxWmZuUDhGSWN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd01UQTVNRFF5T0RJeVdoY05Nek13TVRBMk1EUXlPREl5V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWkrQVJMQkFNQ1ByeEZhVXpNeHZmMHREdmNpOFZVdgpWTmhsQWxZWVJaUlNmOExCQXhHVmVGa0R2bW5vdzNXdlVNREc3MGY4RVduYVByVzM4SDV2VGZlQlg2OE9Lc3JYCjN2ODZiSzNUWDh6UldwQVhwNytGVjhCcUNKcTl1NlliSzVrc2lqdjZHZXc3NllMODZra2JLK1RZV04xYlJtQmoKNGNsUGM3Ulo1WFdpbk84elIwanN5dGp5M3M0VEF1VjczZVdoNmZXcDB6eUQ5UWVGL0VHd1NnN01uR21HN3QvUAptbFFzUXE5djJ2UzZjUG5HSDdidEYyTDNyMGVoNzF3QitsWDZXNEdKc3U1ZEIvQ3pscGMveGcySTdJd2lpV3NvCkw3Q3U1dVJvZ3gwQUpUaGVUWFZPbVBwZ2xqTzlKRmM2RUlRQU51U2ZiZ1cwZHlXZHZmTGZLUjhDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkl4UgpTTGEvOGFhdDgrM2NESTB3WVpKU2cvYi9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUURCWnNmNis1WHg4T3F5CkpoRiswR0Z4bzhEUldpOXdMZzRYUTVyL3pSSXh6THFwZkV2Ti9rM20vZ2RMdU40MG5PQ0tTbWlMTmx1NXA3QTEKZllsLzc4SXdFZDZteEU4R0ZwaC80QnRxV3pKd2k1VHVxOG5tMWhOcVNGaitBdDVOcXVRNlJCcUVZTzVkMm16MQo2ck1KT2VqTUxnZndwOWZxMnpsTEUxU05leGx6dlFwNjB0Vm5ZS0Fra0JZZndqdU9scUVzenZKWElraDhXTGptCjRXZkFydTB3cmxEYWt4OFhDWWlkL0wyL25aWVl0dHBuQ29zSXpXOTlkYnN2WjNwaHVrdHJWR09wS3FVV1FPRUoKWWRRVU5MRkFyYjhlcmRLNGQ2KzZrNmxEMXJLYVlpbFlqMUMrZkZlWno5TzdaQmJ4K0ZOS3kzUHNnQUQ4dmthVwppY1JITEI3MQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSUxlVEtYL2NkcVAwd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJek1ERXdPVEEwTWpneU1Wb1hEVE16TURFd05qQTBNamd5TVZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5SnFDV2NKMmhmYU0Kb2prYkJwOVphYng0eHZRRnFkQzI2T20yNFEvaG5GbXNNbTMxNkwzT3hWY3UyNnZFNXRkUGdLVXM1WS91VXUvQwpqbS9tNkh4WmY4SWQ4NlA5dmhyMkJZUC91UzBFcnE5ZGFxK1VvTm5aYVBCNFVIZmtKczBBZjEvaTk4ZkpWUUd0CnZzM0laRTdmN210OUR2T2EvMDV6dGdVdjFndkJBblA4SjRETEViVEJlbE9uNUNXenpGcXlldkQ4MUdTdWE2T3QKNjQxVU9kV1krb0NoeFNCb0tWaTFTbmpsZ3JaTWwwZmZHRnFWQXBDcnN2d1RQaE5qZU02MFZYTVNJOTNhUUpIZwpWNVlnQUE4L3hCR2NIUzlKbkVJV3l5WHpwMVZFM1JLdWlqVHMrdDZYUndiZGZnRC9Zb1h2cHM5V01OSXIwTG1QCkxKY0JuWXBTdFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTc3QUxPWjBreEdmdjZPM1ZVMnJLNmI3VUxua3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUtDeGNHRS9yUmhuYkx1SUlYUSs3WXhDSlNKNXE4enZCWkh4T3NXRGJXMnJjVXd1dXZ2QUtYQlVZVFp4CjZiZnlKcThDT3U3MHRPb0o3Tk1lYUtCZU1BMDhZQll6SU43ZDNWOXovMmZtMmJZSmtPUTlYQTErS3BoZzR3bmkKd3BlR2NLY09EZVlZMHJhYklqQ2VJcDYzS0s4NGxob01lV3FKZEIrc2pSSnJJODNOT2xZeDl5MmZwaHNyaW1IRgpFWE1XS0Nkci8xbDdTQlZ0bkVaYXFvMytNUmV4dDhVR3piZlRxU2ZsRDVXeXFvWlZRZCtXVEN0UmdzakhONG8wCk1oWG1aRnVnMHVVbkFUS2JDMFdYYS9VVDJQSmVMRzNhSUluKy9IOEx6TE8wRzB3bUpYRi9pQjBuYW96TmZuVVQKTDYrcTBrZFNwWHdvZjRDejUyR215NXByOGk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSVMyd3NyVkIrdTBRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl6TURFd09UQTBNamd5TVZvWERUTXpNREV3TmpBME1qZ3lNVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXM0L1pjakpnTlhYSFJ5ZllidU9mNWc2S2lWNUxadnlYUmVyam0vY0NtWHJYeWlERFV0VUVNaUtKTjI4WQpJUSthTVQ2ekdvZlhVZTBGdUd3OEd4OGp5STZuWGZ0S0R3OWtrVi8rSExJRndCQTgrWWhCTGsyU3k3WWh6eHRuCkRIME5PNTFCbUd0VXRrWURLM1hDbzJMbUVSVUY3YUV5eHdXRVB2U09yNFJwcDljY0lsby90YWpNandKYlROaXoKU2ttVUQySzArTW5oUldjZFUrYUsvYTJVYU1yd1V2bWNqN3JiTGlMRldQZDZrUmNpbEhvWVdqNTczQUZuU2dacQpoNzlENm1wSGhsckJ0ampyMjZzaFBJQ2FjYzgxeWllVy9SdnIrT1JRRVBBOFYzVVJSRmovM2xPdFRMV2hlM05xCnk2RTg3VU5zZWp1S1NOaXpnVm9zRzh6VkJRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVBTGs3Q0kxdUlobXozSEY2c0VRM0RYUmpkVXN3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFLYkd1THpqelMzcGYwQW1jQk9ESHVuMkxINER1VHBmZFozODZPSE5pZWhRCkY4eGRhOVdCTmxpYmVJbkcvNWNjeGZVVGhGTEZCckw2R0kxOUlFQ0YyWHFqaVIyazZDTU53LyttNlJoTG1DRHcKMy82SWZMdDBPejQvd3J1Y3VQeTV4NC9McmVlcDVpbUdXeEhQN3VGKzF2elk5TEM4Q1RMZ3JFWURCY1RFRDFBZwprc1VBK2k1VHErZzlCdWtsVjRNclBLVXJPbHJhdG9MVUVhdWJxQkRHeW1HVnhTZzY5ZklMRU4zendpRFdOQm50ClJKN3cvWk54N2R2VnBFcFdxdnFnNkFXUDRKWEF0emtaekRVaHFnT0I3dVpUdldyQkRFYUdmWWU5OVRlNUprWmsKcUVTc3NodUV3RTA1ckwybnJaVllZaWNSL3A5SGpLVmZXNThYbnU4M1FVZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGx6Q0NBbitnQXdJQkFnSUlkU09uemhWK0xpb3dEUVlKS29aSWh2Y05BUUVMQlFBd1dURlhNRlVHQTFVRQpBd3hPYjNCbGJuTm9hV1owTFd0MVltVXRZWEJwYzJWeWRtVnlMVzl3WlhKaGRHOXlYMnh2WTJGc2FHOXpkQzF5ClpXTnZkbVZ5ZVMxelpYSjJhVzVuTFhOcFoyNWxja0F4Tmpjek1qTTVNalkyTUI0WERUSXpNREV3T1RBME5ERXcKTmxvWERUTXpNREV3TmpBME5ERXdOMW93V1RGWE1GVUdBMVVFQXd4T2IzQmxibk5vYVdaMExXdDFZbVV0WVhCcApjMlZ5ZG1WeUxXOXdaWEpoZEc5eVgyeHZZMkZzYUc5emRDMXlaV052ZG1WeWVTMXpaWEoyYVc1bkxYTnBaMjVsCmNrQXhOamN6TWpNNU1qWTJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXJuQTcKWVBQVDdlQU5HMjVSMjF2azBLOWNVSE4rekhDWHdacWVsbml6OEE1MHdmeU83YWtrck82dVhVYVhuRnFCaXF1YQpncGtjcm9BV0Y4WWcvMVdFUG92OWNFb1RWSWVMb1NMMXR4ZDlYejk5d2V1OXFIVjZDdzhPKy9tSkhralFobUVQCm9IQzlxZ2txSlgzcUVSaWFnVGx0NVRETElZVjZMRDlSbXY5czd5TjZpV01nelJNMzlpYkpVR1FjVUlDQjZGb3kKYk0vaGJxNjNXYk4vVTZSdzFEL0pBK3ZCeGlLNmYvR1hhaFFwT3FqR0xhS2xDUEdwUHNFMWhSUnBXWnVPVENGMgp5bXdGcTBCMkRLbEJhQW9VUjFaQUlLQklRa2Q5aWgxZWhmVm95QnNaWmQzNmtWRHV0dXArd3FQdEsyV1cwN3FuCmYwd1c2ZFFNUGZzSVd5cnhrUUlEQVFBQm8yTXdZVEFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVZS82SWlHUmZveHordGM4dUVsK1cvNi9uc0Vvd0h3WURWUjBqQkJndwpGb0FVZS82SWlHUmZveHordGM4dUVsK1cvNi9uc0Vvd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFUHBiWjh4CnE2SG5QYUVtQnA4VVB5WVgya2NaSW1jNXJYVFpYcG1Eb1BlbGYxKzM1d3M5b0EyTHJRUFM4eEhOUXhHMTI5bG0KUXZlTUdOM1ZHOEdxdCtXNFg3emhCd2JnNjk3bkEzanUwcTJDeEtGcWhqdE9rTk04T1l4cDk0cld1dGNjaTQ0SQpmMmVkT1FqMTBUOHRRdUZGQmlaV0tPcThTK25JTG1ZZExlV1RNdUFlRW1jUkczTXk1WWdTS05jcHQzZmRaSXgxClJZZFRSS3BneWdpVW0xQ0c5ZU0vVG9QaktEYlU0ZTlwK0padldZa2dqQ3VWL3BKaS84cGw4YWJHWUp4WW40dWoKVXAxVlJuWTZUY0h1SURNcWpIa3Z4L20zakRMVzJ6YzJ2UFp5UXZ1ZE82THY5WHJVdFpSZGpXaCtSMndob2IySgpxV283Z1NHRjFYSkFJakk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtVENDQW9HZ0F3SUJBZ0lJTlVyY00ybkwvczB3RFFZSktvWklodmNOQVFFTEJRQXdKakVrTUNJR0ExVUUKQXd3YmFXNW5jbVZ6Y3kxdmNHVnlZWFJ2Y2tBeE5qY3pNak01TXpFeE1CNFhEVEl6TURFd09UQTBOREUxTUZvWApEVEkxTURFd09EQTBOREUxTVZvd1BERTZNRGdHQTFVRUF3d3hLaTVoY0hCekxuTnVMV3h2WjJkMmJITXRhbk50CkxuRmxMbVJsZG1Oc2RYTjBaWEl1YjNCbGJuTm9hV1owTG1OdmJUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMb2pNdVowWS96UE5MNGpMMVNVMG1Sa1ZMamVqek85UW13UHVXbTdvcnQ0bzBFMQo2TEZpRHBJM2dibjlUK1haZ2o5b1J0Nms5b284WXFRU2dHZnVoUSs5WW9TZjIzMVg3a01WbEtDamh0R2xRZ3NYCk9aZjdEZ3BlSjNIYkFIN052cndrc1RuMlExOVFpV2hXWG9PZHFHU0ZPOEFlaUJISGwvYU9QRkRJbmg4ZTlkWTQKYlpsbXkvWTVORVo2YkZaaGlDVlZoRlQ3NFEreWd3aFEzbVg1SE9CTHFoUGpuUEMxNmZOcE5aRUJ4VFo0N3NqUgpkdEJYbGRraGtEa0ZyWE5ydkpvSFBtWnJFZGZtcDF4UE03KzB0RnZNUGlPSXBzcUkwNjR1bktMUFFzaHhKTlhJCm9zenpRbk9NRUxLN29UOE5GU1ByQktRN0xxSnNzVjlGOFV6dHZYa0NBd0VBQWFPQnREQ0JzVEFPQmdOVkhROEIKQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdFd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVgpIUTRFRmdRVTVMelBUNDZvKzhjSVFGZ2xlVmI1aDhXTHBFVXdId1lEVlIwakJCZ3dGb0FVOUdnbjNkd2psTHRiCjZlcWJKaVZCVEh4RVgrRXdQQVlEVlIwUkJEVXdNNEl4S2k1aGNIQnpMbk51TFd4dloyZDJiSE10YW5OdExuRmwKTG1SbGRtTnNkWE4wWlhJdWIzQmxibk5vYVdaMExtTnZiVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBUWdCWApEeURrZkcxQXpOR2l2ZVR4NXZkQUtWaktzVU1iOXE2Y1cyTEU1SlV6b05YaFZ6dm16aWFVWk5FQ09uZ2lFNk54Ck53K2ZGN2RJT3plYUV2RG5GQ2ZPZWFzTTdNVWUxejQ5UDAzbktGcGQvR0ptcWhDUnZqMi8yWmJDT0VWSTh2UGsKYzdjWWNmcUthNmNhQ09MUnRMMFk5em5sb3lvU0dQL254d3ExYVFFZEUwRkVXQXlFVG5DdFJsZFBhdXIwOFY4dAozbWp1MjV6KzBrRk1HRGdoa1VxWUk0UFdqR2QzYnVpN0NhQmZmQkR3UytxajZyVUtKK1h5MTdaR0hFRW4wS3QyCmo1blM1ZTZZUXA2cTZaMGVEZ2txaWhnY3k1L2owdkxsRVl4blIvNThCdUo1cVBBNHFxcXRaWXRteEUzUVptVjgKM1VOcWR5czhqL05vMmRDNUNRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREREQ0NBZlNnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMk56TXlNemt6TVRFd0hoY05Nak13TVRBNU1EUTBNVFV3V2hjTk1qVXdNVEE0Ck1EUTBNVFV4V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTJOek15TXprek1URXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRERkQXJobklCZEZ2QUN2NEhXSVJQSwpwM1phQXJla3d1YUlWNEdnM1IzQ0IxMXZ5SFphMkdRcVo3ODV6b2NJS1RXc2VuV1MvZCtIYzFMeGRFS1UweFk1ClpuSDJBS3ZWZm9qc2VXb3d2dlNSd2hDT0t2elhaZ3hLU0NyVGw4TCs2WnZLK3Q0ckxSdlJtYmtSWU5ScGs3Mk0KaysvM240bXRoS0VxamVEU01kY210WjFwOTdGeDhHaFM1cmhPY2hLa3V3WXl3MURaaWsvakhNVjNZdkJZS1hoRQp5N2U1bklWUmFEVENLanFwdUV2RFZOYXZVdkxFNnZqNk1kNks5VGhvVmtBR3RNSVpXTlZndWdiRzQwMHp5OVgrClhLWW51QzJUei95Q2VhVCt4U1BVR3lsQWFwZDRkMW5zMC9uL1ZsUDV0RHgrNmRVMFVsOHNGNG1lNUlmc2RibzcKQWdNQkFBR2pSVEJETUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUIwRwpBMVVkRGdRV0JCVDBhQ2ZkM0NPVXUxdnA2cHNtSlVGTWZFUmY0VEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBCks0TTd4cTFQblFSWFNWMUlYVjhlM1NsRlUwWjJCZkJ5NjdvcWhWNHFobnlXa2d6UWU2S1hWelB5alVFSmYybngKRWVjQjFNTWU5NVhMMVpxUjYwWnVYWUtHb2M2RTBLSklxdEx3d1RiSE44OTNmRytGNHVqaEk2QlFiVE1jVWlBMQpIVG1venA4Nm9SRUlmQUtJVkVIeEsxRzFqTDBocVBlaGY4ZjlhQUpuZU1OUkF3QXZ4dS9uWWEvVVZhSzlROUQvCjh2QjdrYXZ2R1lzUmp4VnpIMDFKUFdPZyt2Nm9rWlZjR0FDeXJ3MXZZR3VVbUczcjZoaDZXamVrNjExelk0aTcKWU9sZTVrRjFnRGtEVERKY2lPQVJrSGFXK05Pd2RKNU1hMWxNZUhMVlcwMlMrdmVleFo3UmU1V3dVU2RTamh3UgpYNkllZm45MmRGWkFsZ253bnYvRGRRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVVENDQWptZ0F3SUJBZ0lJTVlxYkJBd2MyTDB3RFFZSktvWklodmNOQVFFTEJRQXdOakUwTURJR0ExVUUKQXd3cmIzQmxibk5vYVdaMExYTmxjblpwWTJVdGMyVnlkbWx1WnkxemFXZHVaWEpBTVRZM016SXpPVEkyTkRBZQpGdzB5TXpBeE1Ea3dORFF4TUROYUZ3MHlOVEF6TURrd05EUXhNRFJhTURZeE5EQXlCZ05WQkFNTUsyOXdaVzV6CmFHbG1kQzF6WlhKMmFXTmxMWE5sY25acGJtY3RjMmxuYm1WeVFERTJOek15TXpreU5qUXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFRjYzViVmh0L1FYbzkrUVNURGZoK3U5Ynpwc1BVOXcxYgpXL25ub05scDZVaU95SmxCcHN6TGo2V2ozOE9kS29LTE9jbGg2c2dYSXJ2QXI2eVorTHYvTlpFY1VJQi9VZG1VClhkT0M4Z0RCTG5hQWZJY2RKcDJXUTlBeC94V05ZN01CMmpoTkNNa2dJSXN1U043QnlSSXlDcmJXYUJzWUZPQmsKQmNkbzBjbXpmbGlMcnlOMG1ienRXMm1ndWM3SHRvOWlyWEsvRFo5ekJmbldwdkxUOUZtbGdRZi9ReVRrVDZKNQpmeThpYmJjTjVSbStWeTd4dm9XK2hvSXd0M2JISEdSNUJwcGZjSE93dzVzZ1htUUIrNTdSNisydDB3c3BwcXp5CnZSVlo1eGVQSTBsc2paS2Q4a1hmdWc3bnVmQ0lBdk1YclczWVlMMFN3NnVNbEx5SVlEWkpBZ01CQUFHall6QmgKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlFKYzNvYgpIam41N1Y2T1dZT0VxUXN0YXJqK0J6QWZCZ05WSFNNRUdEQVdnQlFKYzNvYkhqbjU3VjZPV1lPRXFRc3RhcmorCkJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFtbkJiTml6VjRjTWNTd3JtUzkyRmp6QW9NdUJxSFpsbGF3QWQKMzdHODhZSTVLUzFTWVVmUWQxa0RIVmZxYTczbmZOendXSEswSGRmbkpzQldJeWpGY3luQ2pxbnhoeklzTUlIdwo0NUhQVXQyc2ZZTTdlNDBMazkrS09YeFlFTTNQS2R5TFdONDRRbUk3aVU5WVVsSjFON0RrbEswd1BVYTJoVCs5CnBMUmQzM09KWWlsUDhrdUQ1ek51eWlJUHRPZVBXNkxkd1c1dFUwdmlReStpbHE5eVc5NTZXTitOb0FZRVdZcCsKTGlPR0hOaXlxY3FGV3dUbWlYSWFFOUlHZFBGbFR2cVNtckZoZk5BRjJkT2NKMHk5S245Y2tKb3kraVRpZ0d6RQpTNGFaWTZlaVl4Q21NZkFTM3pEcXVYbmZPTGhoTERRYWpPVUprWXlJbDA4akwyWndEQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    token: MTAxMyBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: collect-profiles
      kubernetes.io/service-account.uid: cad81a54-e195-4d53-a71c-623f63260799
    creationTimestamp: "2023-01-09T04:45:26Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2023-01-09T04:45:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:46:05Z"
    name: collect-profiles-token-c72qx
    namespace: openshift-operator-lifecycle-manager
    resourceVersion: "17631"
    uid: 1cf82a06-65d8-4b1b-b6ac-535124be791b
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: NzMxMyBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: 85111bed-3ef7-4a42-8c18-99ad5b144373
      openshift.io/token-secret.name: default-token-qwxvz
      openshift.io/token-secret.value: ""
    creationTimestamp: "2023-01-09T04:45:27Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1e168b1c-0c9a-4e13-a912-1a75656a557a"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2023-01-09T04:47:33Z"
    name: default-dockercfg-w4msh
    namespace: openshift-operator-lifecycle-manager
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: default-token-qwxvz
      uid: 1e168b1c-0c9a-4e13-a912-1a75656a557a
    resourceVersion: "21096"
    uid: 330d81ae-7ad0-4f6b-aded-064a651cd6b0
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MzYgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: OTc3IGJ5dGVzIGxvbmc=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: 85111bed-3ef7-4a42-8c18-99ad5b144373
    creationTimestamp: "2023-01-09T04:45:26Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2023-01-09T04:45:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:46:05Z"
    name: default-token-qwxvz
    namespace: openshift-operator-lifecycle-manager
    resourceVersion: "17656"
    uid: 1e168b1c-0c9a-4e13-a912-1a75656a557a
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: NzMzNyBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: 3e29cb98-8a7b-4a82-8367-8907f80b96f6
      openshift.io/token-secret.name: deployer-token-flt5f
      openshift.io/token-secret.value: ""
    creationTimestamp: "2023-01-09T04:45:31Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d06745c8-b153-40f7-ba7c-f84d328641d2"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2023-01-09T04:47:33Z"
    name: deployer-dockercfg-5ptd4
    namespace: openshift-operator-lifecycle-manager
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: deployer-token-flt5f
      uid: d06745c8-b153-40f7-ba7c-f84d328641d2
    resourceVersion: "20749"
    uid: 70f944a5-cf7e-48ee-bd1c-da76185f5a27
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MzYgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: OTgxIGJ5dGVzIGxvbmc=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: 3e29cb98-8a7b-4a82-8367-8907f80b96f6
    creationTimestamp: "2023-01-09T04:45:30Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2023-01-09T04:45:30Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:46:05Z"
    name: deployer-token-flt5f
    namespace: openshift-operator-lifecycle-manager
    resourceVersion: "17610"
    uid: d06745c8-b153-40f7-ba7c-f84d328641d2
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: Nzg3NyBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: olm-operator-serviceaccount
      kubernetes.io/service-account.uid: 0337f2bd-18a1-46a9-919f-710c91d92202
      openshift.io/token-secret.name: olm-operator-serviceaccount-token-bmjks
      openshift.io/token-secret.value: ""
    creationTimestamp: "2023-01-09T04:45:29Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a30738f1-140b-4936-bda4-abfdc4615d4e"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2023-01-09T04:47:33Z"
    name: olm-operator-serviceaccount-dockercfg-6tjd7
    namespace: openshift-operator-lifecycle-manager
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: olm-operator-serviceaccount-token-bmjks
      uid: a30738f1-140b-4936-bda4-abfdc4615d4e
    resourceVersion: "20682"
    uid: 3560418c-512b-4883-9e25-c776377ee23f
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MzYgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: MTA1NyBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: olm-operator-serviceaccount
      kubernetes.io/service-account.uid: 0337f2bd-18a1-46a9-919f-710c91d92202
    creationTimestamp: "2023-01-09T04:45:26Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2023-01-09T04:45:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:46:04Z"
    name: olm-operator-serviceaccount-token-bmjks
    namespace: openshift-operator-lifecycle-manager
    resourceVersion: "17563"
    uid: a30738f1-140b-4936-bda4-abfdc4615d4e
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVTakNDQXpLZ0F3SUJBZ0lJRFVlbjFLUzIzbE13RFFZSktvWklodmNOQVFFTEJRQXdOakUwTURJR0ExVUUKQXd3cmIzQmxibk5vYVdaMExYTmxjblpwWTJVdGMyVnlkbWx1WnkxemFXZHVaWEpBTVRZM016SXpPVEkyTkRBZQpGdzB5TXpBeE1Ea3dORFF4TVRkYUZ3MHlOVEF4TURnd05EUXhNVGhhTUVneFJqQkVCZ05WQkFNVFBXOXNiUzF2CmNHVnlZWFJ2Y2kxdFpYUnlhV056TG05d1pXNXphR2xtZEMxdmNHVnlZWFJ2Y2kxc2FXWmxZM2xqYkdVdGJXRnUKWVdkbGNpNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFNIb1dpcjNQOApBN0g2dFVheUx5NlkrU2hnVzY4S3djOFdPbnFWQUIzUjFNV29oSERkeXZaTjZwUGpJdjBlaUdPaWNRSEQ0WkpQCnNJdGR3d2NXY0crVkd5UFZqY0taWFJPMzZiU3BpWVlhOUw1UVFBdUtMTms1T0NjWVlFcjBoWVVSa3NzcEkxQXoKNUprVy9oeXpEaFFlOXd5ZzMybXlrd0haQVcybTRGQ1RXOHppQlBnU0JyZkdodTdCODlhd21aWHdXRFNCMWMwLwpMQXMrMXhrZjFXTFVsbGNCb2hFTUVrVk1GelNma1IvRjZyTHA3RnJ2RjVRNGVGakVpQVpzMnZsRVkybG5YWlpFCmNUSmp4Ukp0UXJoQVU4eXNIQ0VPSjFlc2JCTFovSmZKQWhyRHFCK2JSeG1hampWemUydFAxTWVxU2QzUkxPUWkKeHo2cGNIYThBdnp0QWdNQkFBR2pnZ0ZJTUlJQlJEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0V3WURWUjBsQkF3dwpDZ1lJS3dZQkJRVUhBd0V3REFZRFZSMFRBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVQeFdBMno2d0xhd2lkRkgyCmJTWjVUaXNUM0tJd0h3WURWUjBqQkJnd0ZvQVVDWE42R3g0NStlMWVqbG1EaEtrTExXcTQvZ2N3Z1pjR0ExVWQKRVFTQmp6Q0JqSUk5YjJ4dExXOXdaWEpoZEc5eUxXMWxkSEpwWTNNdWIzQmxibk5vYVdaMExXOXdaWEpoZEc5eQpMV3hwWm1WamVXTnNaUzF0WVc1aFoyVnlMbk4yWTRKTGIyeHRMVzl3WlhKaGRHOXlMVzFsZEhKcFkzTXViM0JsCmJuTm9hV1owTFc5d1pYSmhkRzl5TFd4cFptVmplV05zWlMxdFlXNWhaMlZ5TG5OMll5NWpiSFZ6ZEdWeUxteHYKWTJGc01EVUdDeXNHQVFRQmtnZ1JaQUlCQkNZVEpHWXhabU5qWmpVekxUQTJOREV0TkRFd055MDROakExTFRGbApPRE0yTTJZd1pHSTNNVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBR2dFd25yakhMamlVOXpTRVBFSWlNVE4xClFpSjhsMDIvRjQ2aGlkbGdYeC9PRHRjaXZNZUlQcE1mb28rZ093VVhtcEN2WjdyZW8yZVFyZkxuM3laWkJYNGYKNE1FZjhidk1jaGJ2OHZjcVNjbDN2STk3VHpPaWFwUnF6RDdoYlg0cXd4akRkWVV2MmNlV1RMS29Wd3o4K09CLwoyZEkycmwwQ29rWEw1aU05dUtZM1FKWS9BMWgyOUluSmk4MEFBZ0JLZWtRRlB6YnpQZXRzK2piQnJIMlppb3RhCnZ0WldINkpQQkJ4RTVXU1N3MzJVN2IzZHhZWDg1K2ZWckpLcVlpUFJwRGZnR1ppZU9NRGZTZEtUUXRUN1B5Z3YKR2d0SXF1U3N4elFTcDJnUytVVFNlZzM0UWk1ZDA1d1U0SWt5bGlFdHplOTlsY1Fjb29QY29JcU1KSU1LRFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVVRDQ0FqbWdBd0lCQWdJSU1ZcWJCQXdjMkwwd0RRWUpLb1pJaHZjTkFRRUxCUUF3TmpFME1ESUdBMVVFCkF3d3JiM0JsYm5Ob2FXWjBMWE5sY25acFkyVXRjMlZ5ZG1sdVp5MXphV2R1WlhKQU1UWTNNekl6T1RJMk5EQWUKRncweU16QXhNRGt3TkRReE1ETmFGdzB5TlRBek1Ea3dORFF4TURSYU1EWXhOREF5QmdOVkJBTU1LMjl3Wlc1egphR2xtZEMxelpYSjJhV05sTFhObGNuWnBibWN0YzJsbmJtVnlRREUyTnpNeU16a3lOalF3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURUY2M1YlZodC9RWG85K1FTVERmaCt1OWJ6cHNQVTl3MWIKVy9ubm9ObHA2VWlPeUpsQnBzekxqNldqMzhPZEtvS0xPY2xoNnNnWElydkFyNnlaK0x2L05aRWNVSUIvVWRtVQpYZE9DOGdEQkxuYUFmSWNkSnAyV1E5QXgveFdOWTdNQjJqaE5DTWtnSUlzdVNON0J5Ukl5Q3JiV2FCc1lGT0JrCkJjZG8wY216ZmxpTHJ5TjBtYnp0VzJtZ3VjN0h0bzlpclhLL0RaOXpCZm5XcHZMVDlGbWxnUWYvUXlUa1Q2SjUKZnk4aWJiY041Um0rVnk3eHZvVytob0l3dDNiSEhHUjVCcHBmY0hPd3c1c2dYbVFCKzU3UjYrMnQwd3NwcHF6eQp2UlZaNXhlUEkwbHNqWktkOGtYZnVnN251ZkNJQXZNWHJXM1lZTDBTdzZ1TWxMeUlZRFpKQWdNQkFBR2pZekJoCk1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRSmMzb2IKSGpuNTdWNk9XWU9FcVFzdGFyaitCekFmQmdOVkhTTUVHREFXZ0JRSmMzb2JIam41N1Y2T1dZT0VxUXN0YXJqKwpCekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBbW5CYk5pelY0Y01jU3dybVM5MkZqekFvTXVCcUhabGxhd0FkCjM3Rzg4WUk1S1MxU1lVZlFkMWtESFZmcWE3M25mTnp3V0hLMEhkZm5Kc0JXSXlqRmN5bkNqcW54aHpJc01JSHcKNDVIUFV0MnNmWU03ZTQwTGs5K0tPWHhZRU0zUEtkeUxXTjQ0UW1JN2lVOVlVbEoxTjdEa2xLMHdQVWEyaFQrOQpwTFJkMzNPSllpbFA4a3VENXpOdXlpSVB0T2VQVzZMZHdXNXRVMHZpUXkraWxxOXlXOTU2V04rTm9BWUVXWXArCkxpT0dITml5cWNxRld3VG1pWElhRTlJR2RQRmxUdnFTbXJGaGZOQUYyZE9jSjB5OUtuOWNrSm95K2lUaWdHekUKUzRhWlk2ZWlZeENtTWZBUzN6RHF1WG5mT0xoaExEUWFqT1VKa1l5SWwwOGpMMlp3REE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    tls.key: MTY3OSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      service.alpha.openshift.io/expiry: "2025-01-08T04:41:18Z"
      service.alpha.openshift.io/originating-service-name: olm-operator-metrics
      service.alpha.openshift.io/originating-service-uid: f1fccf53-0641-4107-8605-1e8363f0db71
      service.beta.openshift.io/expiry: "2025-01-08T04:41:18Z"
    creationTimestamp: "2023-01-09T04:41:19Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:tls.crt: {}
          f:tls.key: {}
        f:metadata:
          f:annotations:
            .: {}
            f:service.alpha.openshift.io/expiry: {}
            f:service.alpha.openshift.io/originating-service-name: {}
            f:service.alpha.openshift.io/originating-service-uid: {}
            f:service.beta.openshift.io/expiry: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f1fccf53-0641-4107-8605-1e8363f0db71"}: {}
        f:type: {}
      manager: service-ca-operator
      operation: Update
      time: "2023-01-09T04:41:19Z"
    name: olm-operator-serving-cert
    namespace: openshift-operator-lifecycle-manager
    ownerReferences:
    - apiVersion: v1
      kind: Service
      name: olm-operator-metrics
      uid: f1fccf53-0641-4107-8605-1e8363f0db71
    resourceVersion: "6150"
    uid: 2412f9a5-4cf8-40b3-9766-bd13152e014f
  type: kubernetes.io/tls
- apiVersion: v1
  data:
    olmCAKey: NjY0IGJ5dGVzIGxvbmc=
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaVENDQWd1Z0F3SUJBZ0lJWGtkSCtvQ3ZIZFV3Q2dZSUtvWkl6ajBFQXdJd1FqRVdNQlFHQTFVRUNoTU4KVW1Wa0lFaGhkQ3dnU1c1akxqRW9NQ1lHQTFVRUF4TWZiMnh0TFhObGJHWnphV2R1WldRdE0yVXpNbVJqTmpVNQpPVE0wTWpRNU1EQWVGdzB5TXpBeE1Ea3dORFF4TWpSYUZ3MHlOVEF4TURnd05EUXhNalJhTUYweEZqQVVCZ05WCkJBb1REVkpsWkNCSVlYUXNJRWx1WXk0eFF6QkJCZ05WQkFNVE9uQmhZMnRoWjJWelpYSjJaWEl0YzJWeWRtbGoKWlM1dmNHVnVjMmhwWm5RdGIzQmxjbUYwYjNJdGJHbG1aV041WTJ4bExXMWhibUZuWlhJd1dUQVRCZ2NxaGtqTwpQUUlCQmdncWhrak9QUU1CQndOQ0FBUUNiTUp1VTJ4ZTNrS3I0dld0TE1NejZIMnR4SzBraFdzOTN0NTZoaGRxCnpKam5zR3ZNdGNXTFN3bzB4OUV4SE1MVWllNThwOGJLV2UyVHNWYk9lbWdabzRIUE1JSE1NQk1HQTFVZEpRUU0KTUFvR0NDc0dBUVVGQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVU9HY3lKcUFiYW5JWgp3ZjM2US92SVUxVUU5c013Z1lVR0ExVWRFUVIrTUh5Q09uQmhZMnRoWjJWelpYSjJaWEl0YzJWeWRtbGpaUzV2CmNHVnVjMmhwWm5RdGIzQmxjbUYwYjNJdGJHbG1aV041WTJ4bExXMWhibUZuWlhLQ1BuQmhZMnRoWjJWelpYSjIKWlhJdGMyVnlkbWxqWlM1dmNHVnVjMmhwWm5RdGIzQmxjbUYwYjNJdGJHbG1aV041WTJ4bExXMWhibUZuWlhJdQpjM1pqTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUEzbHJHeEw5QkdnM1JDK0hzZkkzMUtpY1hveFZCMXk4clBVCkp2Z04zWmp1QWlFQWxUVmVRWngzNFBVWkNCTEY2d2NNZ2xxRnNRMk1qblNzb0FkNVloSEZIVzg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    tls.key: MjI3IGJ5dGVzIGxvbmc=
  kind: Secret
  metadata:
    annotations:
      olmcahash: c08e56c32d765399c6ec9007f115bd58f374b0a0ae314d63944b5a3e707aec3e
    creationTimestamp: "2023-01-09T04:41:24Z"
    labels:
      olm.managed: "true"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:olmCAKey: {}
          f:tls.crt: {}
          f:tls.key: {}
        f:metadata:
          f:annotations:
            .: {}
            f:olmcahash: {}
          f:labels:
            .: {}
            f:olm.managed: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4e61d051-fcb5-4761-872d-48a6b972291b"}: {}
        f:type: {}
      manager: olm
      operation: Update
      time: "2023-01-09T04:41:24Z"
    name: packageserver-service-cert
    namespace: openshift-operator-lifecycle-manager
    ownerReferences:
    - apiVersion: operators.coreos.com/v1alpha1
      blockOwnerDeletion: false
      controller: false
      kind: ClusterServiceVersion
      name: packageserver
      uid: 4e61d051-fcb5-4761-872d-48a6b972291b
    resourceVersion: "6719"
    uid: 9c919210-594f-40a0-8546-f5b7c4310356
  type: kubernetes.io/tls
- apiVersion: v1
  data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUUwekNDQXJ1Z0F3SUJBZ0lDQm5vd0RRWUpLb1pJaHZjTkFRRUxCUUF3R0RFV01CUUdBMVVFQ2hNTlVtVmsKSUVoaGRDd2dTVzVqTGpBZUZ3MHlNekF4TURreE5UTXdNREZhRncweU16QXhNRGt4TmpNd01ERmFNQmd4RmpBVQpCZ05WQkFvVERWSmxaQ0JJWVhRc0lFbHVZeTR3Z2dJaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQ0R3QXdnZ0lLCkFvSUNBUUN2MGxlZGJacEJYYWdoN3p1aVdJdEFoMURHaGVvQ3JSVEs5amt4UXE0L21yVFBSczVCM0N2Tys4L3EKTkpYR3hBQW5qaVVESVFFL1duRCtGL3Z5NjBnRDVVT0hjZStyY2tja0dxVmJJazBTWlFWdVNPQzlPaFlJQWU4Rgp2Q09nekQxeEY3dlcxQzlCMFY4eFJYNnNjMDhuaE0zWmRKN0JXRU5jTFFJd0pkdkYzalpSUHJCeE1pSXhid2RkCjJMbWtHWjZsZEJPQVVMVnhQNy9rOC9VQ0FQK1VZemltakF5MDBiQk5IalNKTVpKZCt2c0l1c2RYMVpKbnRNZksKSmZmU3pLZ2pIR3lxVGJZTFBwSGNlUjFnRWtGRXl2NW9ZdmJ3NHZVNXQxYmdCWTFYV1Fad0R4ajBqZEdsQWNnMwpOSDBYYno2czlieE5LVHNGeEl6THdPcUh1Rmo5aCtJd0tVUFg5dHVhNVFsSjBBdGR4SFEraUU0WElTT0labkIxCmMyN21jY0hUamZqV29sQ2pQVnEyUUdPNjVuZ0gxQSs1NzBuYWJJTHNJTzJkV0NpbnM3aCtqa2M4aU83TWlsOGwKT1BZVTVsbmJ6SXNYa1hFYVQ5R2JLT3E0aWZ5WGZiMnNvRk1RUCtlRlV4dlFSNFZLaGdNVzhUMkJvOUZrRTJydwpDUERUQnBEbHlxd2p3cVZxNHhPTHViY3RpcFNWQjJjS0Q2dkh0L1dNWFlHNDJTRE1TZS9VVWRIVWYxS2duWHpHCkNtVmF4V1RuaW93NGh2WVlrTFh5Q2RCY2tHQXFoaU5tcEZpVTNTaHhQUWdlYjJpZ1d5TVpZY3h6T1Y5Y3pKak4KTVRrbm5qRW5oWUFDZUV2Nk1SbmtOZStZWlRSRGp6UDUyQjN2a0RUMzlQdzc1czg4UVFJREFRQUJveWN3SlRBTwpCZ05WSFE4QkFmOEVCQU1DQjRBd0V3WURWUjBsQkF3d0NnWUlLd1lCQlFVSEF3SXdEUVlKS29aSWh2Y05BUUVMCkJRQURnZ0lCQUcyM1FNWVprTkVzYXRxbklhUko1K1BtWHhsU0ZnQ29GSlYwRXI1WkJ0Wm5Md1RJUVQ2c0NabmIKb2p0ckFBaC80UkRvK041UHRpR25ldStncnRSMTkzN000ZGZ2NGxGbktVakwvOXRlUERnMzlQNCs1Y1BlQWk0QgpwU3NiTlorZ21lRkVEZWp2aHNvK05Pc3lKTVdRcWs2eGlLUytraDFocTBVM0ZwcCtBc0VkZzNMMS83WitqT1RnCk5SU2wvQVBKZ296N3p2R1dmRzNSOWVEaWQxeE9EdVFsMDJYemx3ekFvSXUrSk5JK1NkMHExNk5kdVlnNTRpbDcKTmYvTUN5YytXRk85bkJvbThBMnptaTZaWVM3amZkdnl4T0x2TklrYjhzdVNIN3dEaW8yTm9nNWRpYmcvVFd6dgp1QzRLa2xEQWJBc1dSQTllR2o4MHJHMks1cTlrdTdrcVFVUmM0UzNBa25xMWFETGhDVytCZFA0VXFDNms5cHNECmRBcVBpTUNmeXNXWU9zQjc2SlVQb1MxckI1Zllmd0kyeDVlV1ZUeHdDbXQ5WW1Fbnl1K3ltZC9EU3hTdG82L2sKMlJKemQ2ZCtLV1VMT3pheTNwaDZyQysxdzdVekVOLzZlcklLNGMvb2FMQkNQNDZxZUM1b1BOK3ZnT0ZrYXZsUgpWU285aUNHQk9rZm9YWi9FRnRob0d3UWhVRUpqYTNtWFUyUmpLQ25RUTM1eXZiQ2VPVXlaMEpuZURUSG4wR21PCmxrT3Zsam9VQnpKbVlYOE9kYXB3eXJ2SXpQQS8vbVRVZWRaYVFQcEdYa0NjRVBKSHI5bWFEejVzL3dVc0tuOWIKVEtiWXFXRDNZSlBaWFFaVDlGVFRKS3RvQk9FemdEaThReFRrd0ZpaDlESFpBSXplUmp4TgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    tls.key: MzI0MyBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      include.release.openshift.io/ibm-cloud-managed: "true"
      include.release.openshift.io/self-managed-high-availability: "true"
      release.openshift.io/create-only: "true"
    creationTimestamp: "2023-01-09T04:37:22Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data: {}
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/ibm-cloud-managed: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
            f:release.openshift.io/create-only: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f3a03fe4-e8d1-4fcc-92c7-00d0f120f589"}: {}
        f:type: {}
      manager: cluster-version-operator
      operation: Update
      time: "2023-01-09T04:37:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:tls.crt: {}
          f:tls.key: {}
      manager: collect-profiles
      operation: Update
      time: "2023-01-09T15:30:01Z"
    name: pprof-cert
    namespace: openshift-operator-lifecycle-manager
    ownerReferences:
    - apiVersion: config.openshift.io/v1
      kind: ClusterVersion
      name: version
      uid: f3a03fe4-e8d1-4fcc-92c7-00d0f120f589
    resourceVersion: "264399"
    uid: 4c4bf15b-1e59-4255-b6c8-53bef19605ba
  type: kubernetes.io/tls
kind: SecretList
metadata:
  resourceVersion: "268779"
