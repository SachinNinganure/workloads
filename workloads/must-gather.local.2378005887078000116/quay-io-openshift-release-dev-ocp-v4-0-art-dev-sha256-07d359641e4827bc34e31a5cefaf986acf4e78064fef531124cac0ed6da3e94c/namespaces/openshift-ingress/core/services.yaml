---
apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
      service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "5"
      service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "4"
      service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "2"
      service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: '*'
      traffic-policy.network.alpha.openshift.io/local-with-fallback: ""
    creationTimestamp: "2023-01-09T04:41:51Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: router
      ingresscontroller.operator.openshift.io/owning-ingresscontroller: default
      router: router-default
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: {}
            f:service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: {}
            f:service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: {}
            f:service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: {}
            f:service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: {}
            f:traffic-policy.network.alpha.openshift.io/local-with-fallback: {}
          f:labels:
            .: {}
            f:app: {}
            f:ingresscontroller.operator.openshift.io/owning-ingresscontroller: {}
            f:router: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5e60d080-fa80-4dd4-9a39-f34ad9c62787"}: {}
        f:spec:
          f:allocateLoadBalancerNodePorts: {}
          f:externalTrafficPolicy: {}
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":80,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":443,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: ingress-operator
      operation: Update
      time: "2023-01-09T04:41:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:finalizers:
            .: {}
            v:"service.kubernetes.io/load-balancer-cleanup": {}
        f:status:
          f:loadBalancer:
            f:ingress: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-01-09T04:46:18Z"
    name: router-default
    namespace: openshift-ingress
    ownerReferences:
    - apiVersion: apps/v1
      controller: true
      kind: Deployment
      name: router-default
      uid: 5e60d080-fa80-4dd4-9a39-f34ad9c62787
    resourceVersion: "18339"
    uid: 138050fa-86e5-4fc8-ba22-eed01aff7100
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 172.30.96.141
    clusterIPs:
    - 172.30.96.141
    externalTrafficPolicy: Local
    healthCheckNodePort: 32285
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 30528
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      nodePort: 32511
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      ingresscontroller.operator.openshift.io/deployment-ingresscontroller: default
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: a138050fa86e54fc8ba22eed01aff710-1935410303.us-east-2.elb.amazonaws.com
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: router-metrics-certs-default
      service.alpha.openshift.io/serving-cert-signed-by: openshift-service-serving-signer@1673239264
      service.beta.openshift.io/serving-cert-signed-by: openshift-service-serving-signer@1673239264
    creationTimestamp: "2023-01-09T04:41:51Z"
    labels:
      ingresscontroller.operator.openshift.io/owning-ingresscontroller: default
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:service.alpha.openshift.io/serving-cert-secret-name: {}
          f:labels:
            .: {}
            f:ingresscontroller.operator.openshift.io/owning-ingresscontroller: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5e60d080-fa80-4dd4-9a39-f34ad9c62787"}: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":80,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":443,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":1936,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: ingress-operator
      operation: Update
      time: "2023-01-09T04:41:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:service.alpha.openshift.io/serving-cert-signed-by: {}
            f:service.beta.openshift.io/serving-cert-signed-by: {}
      manager: service-ca-operator
      operation: Update
      time: "2023-01-09T04:41:52Z"
    name: router-internal-default
    namespace: openshift-ingress
    ownerReferences:
    - apiVersion: apps/v1
      controller: true
      kind: Deployment
      name: router-default
      uid: 5e60d080-fa80-4dd4-9a39-f34ad9c62787
    resourceVersion: "8395"
    uid: 147bed58-3e63-47d5-98c5-884a11b044b6
  spec:
    clusterIP: 172.30.147.255
    clusterIPs:
    - 172.30.147.255
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
    - name: metrics
      port: 1936
      protocol: TCP
      targetPort: 1936
    selector:
      ingresscontroller.operator.openshift.io/deployment-ingresscontroller: default
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: ServiceList
metadata:
  resourceVersion: "268283"
