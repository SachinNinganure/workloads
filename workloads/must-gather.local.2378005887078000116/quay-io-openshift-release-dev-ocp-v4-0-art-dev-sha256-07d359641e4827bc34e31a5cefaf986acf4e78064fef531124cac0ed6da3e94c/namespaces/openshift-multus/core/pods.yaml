---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-01-09T05:32:59Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 6fdfb6bc5b
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"864e858f-2006-4ac0-baf4-6564d5a4903f"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/var/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T05:32:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.190.242"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T05:33:23Z"
    name: multus-2bqp5
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: 864e858f-2006-4ac0-baf4-6564d5a4903f
    resourceVersion: "44832"
    uid: 22a5e1a6-fd29-446e-be2e-096b51199348
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-190-242.us-east-2.compute.internal
    containers:
    - args:
      - |
        /entrypoint/cnibincopy.sh; exec /entrypoint.sh --multus-conf-file=auto --multus-autoconfig-dir=/host/var/run/multus/cni/net.d --multus-kubeconfig-file-host=/etc/kubernetes/cni/net.d/multus.d/multus.kubeconfig --readiness-indicator-file=/var/run/multus/cni/net.d/10-ovn-kubernetes.conf --cleanup-config-on-exit=true --namespace-isolation=true --multus-log-level=verbose --cni-version=0.3.1 --additional-bin-dir=/opt/multus/bin --skip-multus-binary-copy=true - "--global-namespaces=default,openshift-multus,openshift-sriov-network-operator"
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.sn-loggvls-jsm.qe.devcluster.openshift.com
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/var/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-d4922
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    imagePullSecrets:
    - name: multus-dockercfg-qjc72
    nodeName: ip-10-0-190-242.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus
    serviceAccountName: multus
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - name: kube-api-access-d4922
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T05:32:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T05:33:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T05:33:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T05:32:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://d00cbe2ef439753854a08023d07fe3667355bb9de11b9a63d0cceeceadfda0c5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      lastState: {}
      name: kube-multus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T05:33:22Z"
    hostIP: 10.0.190.242
    phase: Running
    podIP: 10.0.190.242
    podIPs:
    - ip: 10.0.190.242
    qosClass: Burstable
    startTime: "2023-01-09T05:32:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-01-09T04:38:52Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 6fdfb6bc5b
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"864e858f-2006-4ac0-baf4-6564d5a4903f"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/var/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:38:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.199.219"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:38:57Z"
    name: multus-2hxwm
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: 864e858f-2006-4ac0-baf4-6564d5a4903f
    resourceVersion: "2808"
    uid: 765bc7a9-2715-482c-98cc-0d79db20607a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-199-219.us-east-2.compute.internal
    containers:
    - args:
      - |
        /entrypoint/cnibincopy.sh; exec /entrypoint.sh --multus-conf-file=auto --multus-autoconfig-dir=/host/var/run/multus/cni/net.d --multus-kubeconfig-file-host=/etc/kubernetes/cni/net.d/multus.d/multus.kubeconfig --readiness-indicator-file=/var/run/multus/cni/net.d/10-ovn-kubernetes.conf --cleanup-config-on-exit=true --namespace-isolation=true --multus-log-level=verbose --cni-version=0.3.1 --additional-bin-dir=/opt/multus/bin --skip-multus-binary-copy=true - "--global-namespaces=default,openshift-multus,openshift-sriov-network-operator"
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.sn-loggvls-jsm.qe.devcluster.openshift.com
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/var/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-49fq4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ip-10-0-199-219.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus
    serviceAccountName: multus
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - name: kube-api-access-49fq4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:38:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:38:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:38:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:38:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://d3f8676461f857397e2361a46665498aa4b1d016576244edcd29f733baabb24d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      lastState: {}
      name: kube-multus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:38:56Z"
    hostIP: 10.0.199.219
    phase: Running
    podIP: 10.0.199.219
    podIPs:
    - ip: 10.0.199.219
    qosClass: Burstable
    startTime: "2023-01-09T04:38:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-01-09T04:38:52Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 6fdfb6bc5b
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"864e858f-2006-4ac0-baf4-6564d5a4903f"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/var/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:38:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.160.211"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:39:12Z"
    name: multus-7jwht
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: 864e858f-2006-4ac0-baf4-6564d5a4903f
    resourceVersion: "3173"
    uid: 53b7006d-1268-4d71-b601-f3641f0462f7
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-160-211.us-east-2.compute.internal
    containers:
    - args:
      - |
        /entrypoint/cnibincopy.sh; exec /entrypoint.sh --multus-conf-file=auto --multus-autoconfig-dir=/host/var/run/multus/cni/net.d --multus-kubeconfig-file-host=/etc/kubernetes/cni/net.d/multus.d/multus.kubeconfig --readiness-indicator-file=/var/run/multus/cni/net.d/10-ovn-kubernetes.conf --cleanup-config-on-exit=true --namespace-isolation=true --multus-log-level=verbose --cni-version=0.3.1 --additional-bin-dir=/opt/multus/bin --skip-multus-binary-copy=true - "--global-namespaces=default,openshift-multus,openshift-sriov-network-operator"
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.sn-loggvls-jsm.qe.devcluster.openshift.com
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/var/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n7cjn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ip-10-0-160-211.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus
    serviceAccountName: multus
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - name: kube-api-access-n7cjn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:39:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:39:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:39:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:38:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://b292f15db30791650cc0a41f56cc50a0bca527fc0f664cca764a6f57773e765a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      lastState: {}
      name: kube-multus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:39:11Z"
    hostIP: 10.0.160.211
    phase: Running
    podIP: 10.0.160.211
    podIPs:
    - ip: 10.0.160.211
    qosClass: Burstable
    startTime: "2023-01-09T04:39:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-01-09T05:32:59Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 6fcbfcb5b8
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4b69d67a-dcba-4067-9fdc-510ed5960825"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T05:32:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.190.242"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T05:33:40Z"
    name: multus-additional-cni-plugins-79g5j
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 4b69d67a-dcba-4067-9fdc-510ed5960825
    resourceVersion: "45085"
    uid: 839d3833-e44d-4b6f-a868-3e8b41f3d52d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-190-242.us-east-2.compute.internal
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9dz8v
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    imagePullSecrets:
    - name: multus-dockercfg-qjc72
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cad5a85f21da1d2e653f41f82db607ab6827da0468283f63694c509e39374f0d
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9dz8v
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d03a73b14daa7fe32294f62fd5ef20edf193204d6a39df05dd4342e721e7746d
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9dz8v
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /bondcni/rhel7/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9c407846948c8ff2cd441089c6a57822cfe1a07a537dff1f9d7ebf2db2d1cdee
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9dz8v
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:238c03849ea26995bfde9657c7628ae0e31fe35f4be068d7326b65acb1f55d01
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9dz8v
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9dz8v
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "log_level": "debug"
        }
        EOF

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.sn-loggvls-jsm.qe.devcluster.openshift.com
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9dz8v
        readOnly: true
    nodeName: ip-10-0-190-242.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus
    serviceAccountName: multus
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-9dz8v
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T05:33:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T05:33:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T05:33:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T05:32:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://45e0eff9e63a2fac96403c0b9f66aea087badb65b6c6d71ac4a34f09c31312fc
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T05:33:39Z"
    hostIP: 10.0.190.242
    initContainerStatuses:
    - containerID: cri-o://25a51a9146b41ae69928156308f4e93868edd6790ca5ef22dbbea80ef975cc10
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cad5a85f21da1d2e653f41f82db607ab6827da0468283f63694c509e39374f0d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cad5a85f21da1d2e653f41f82db607ab6827da0468283f63694c509e39374f0d
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://25a51a9146b41ae69928156308f4e93868edd6790ca5ef22dbbea80ef975cc10
          exitCode: 0
          finishedAt: "2023-01-09T05:33:22Z"
          reason: Completed
          startedAt: "2023-01-09T05:33:22Z"
    - containerID: cri-o://b90b030061f8b037609ba3bcee14f597f708b49f44a3ba814232312fd0f1d744
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d03a73b14daa7fe32294f62fd5ef20edf193204d6a39df05dd4342e721e7746d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d03a73b14daa7fe32294f62fd5ef20edf193204d6a39df05dd4342e721e7746d
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://b90b030061f8b037609ba3bcee14f597f708b49f44a3ba814232312fd0f1d744
          exitCode: 0
          finishedAt: "2023-01-09T05:33:29Z"
          reason: Completed
          startedAt: "2023-01-09T05:33:29Z"
    - containerID: cri-o://de006ca1cd0bb20ded08191ac019599730e44baaf673218e688a88ab99e7267f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9c407846948c8ff2cd441089c6a57822cfe1a07a537dff1f9d7ebf2db2d1cdee
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9c407846948c8ff2cd441089c6a57822cfe1a07a537dff1f9d7ebf2db2d1cdee
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://de006ca1cd0bb20ded08191ac019599730e44baaf673218e688a88ab99e7267f
          exitCode: 0
          finishedAt: "2023-01-09T05:33:31Z"
          reason: Completed
          startedAt: "2023-01-09T05:33:31Z"
    - containerID: cri-o://f049e41b9618d7e7992258e0c634eaf5a7e6bf37e08309ffc0b10beb14a875fb
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:238c03849ea26995bfde9657c7628ae0e31fe35f4be068d7326b65acb1f55d01
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:238c03849ea26995bfde9657c7628ae0e31fe35f4be068d7326b65acb1f55d01
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://f049e41b9618d7e7992258e0c634eaf5a7e6bf37e08309ffc0b10beb14a875fb
          exitCode: 0
          finishedAt: "2023-01-09T05:33:33Z"
          reason: Completed
          startedAt: "2023-01-09T05:33:33Z"
    - containerID: cri-o://e1593f9d970747e92f3b7c1ec8f72270d2d9d3220ceb7ddca96a65af458e37d3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://e1593f9d970747e92f3b7c1ec8f72270d2d9d3220ceb7ddca96a65af458e37d3
          exitCode: 0
          finishedAt: "2023-01-09T05:33:38Z"
          reason: Completed
          startedAt: "2023-01-09T05:33:38Z"
    - containerID: cri-o://ff79708fbf05a2727c007875a313a883715264726d75f975e45b0fb6efd10079
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://ff79708fbf05a2727c007875a313a883715264726d75f975e45b0fb6efd10079
          exitCode: 0
          finishedAt: "2023-01-09T05:33:38Z"
          reason: Completed
          startedAt: "2023-01-09T05:33:38Z"
    phase: Running
    podIP: 10.0.190.242
    podIPs:
    - ip: 10.0.190.242
    qosClass: Burstable
    startTime: "2023-01-09T05:32:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-01-09T04:38:52Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 6fcbfcb5b8
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4b69d67a-dcba-4067-9fdc-510ed5960825"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:38:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.145.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:39:19Z"
    name: multus-additional-cni-plugins-879xg
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 4b69d67a-dcba-4067-9fdc-510ed5960825
    resourceVersion: "3263"
    uid: 311a1fef-dc12-4bd0-b675-5a1f9301bd49
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-145-4.us-east-2.compute.internal
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x2xjt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cad5a85f21da1d2e653f41f82db607ab6827da0468283f63694c509e39374f0d
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x2xjt
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d03a73b14daa7fe32294f62fd5ef20edf193204d6a39df05dd4342e721e7746d
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x2xjt
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /bondcni/rhel7/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9c407846948c8ff2cd441089c6a57822cfe1a07a537dff1f9d7ebf2db2d1cdee
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x2xjt
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:238c03849ea26995bfde9657c7628ae0e31fe35f4be068d7326b65acb1f55d01
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x2xjt
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x2xjt
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "log_level": "debug"
        }
        EOF

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.sn-loggvls-jsm.qe.devcluster.openshift.com
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x2xjt
        readOnly: true
    nodeName: ip-10-0-145-4.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus
    serviceAccountName: multus
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-x2xjt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:39:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:39:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:39:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:38:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://2b586d305856652dcfbbfd4c6e08f4890c5f0ab036f89b65a12b238f12ec11fb
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:39:18Z"
    hostIP: 10.0.145.4
    initContainerStatuses:
    - containerID: cri-o://1fb9327fa233b21413ff62246cb528c2733c91d9b866b70ba56d198092e1c17e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cad5a85f21da1d2e653f41f82db607ab6827da0468283f63694c509e39374f0d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cad5a85f21da1d2e653f41f82db607ab6827da0468283f63694c509e39374f0d
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://1fb9327fa233b21413ff62246cb528c2733c91d9b866b70ba56d198092e1c17e
          exitCode: 0
          finishedAt: "2023-01-09T04:38:58Z"
          reason: Completed
          startedAt: "2023-01-09T04:38:58Z"
    - containerID: cri-o://f5d25dbfabded67213c7eb9c7477d36249ce515441c6ae85bece5d1676cbd691
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d03a73b14daa7fe32294f62fd5ef20edf193204d6a39df05dd4342e721e7746d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d03a73b14daa7fe32294f62fd5ef20edf193204d6a39df05dd4342e721e7746d
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://f5d25dbfabded67213c7eb9c7477d36249ce515441c6ae85bece5d1676cbd691
          exitCode: 0
          finishedAt: "2023-01-09T04:39:04Z"
          reason: Completed
          startedAt: "2023-01-09T04:39:04Z"
    - containerID: cri-o://14eaac446c57bf8641e1a7c58da5694b2301b955c490f5b619e92c444f4aee70
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9c407846948c8ff2cd441089c6a57822cfe1a07a537dff1f9d7ebf2db2d1cdee
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9c407846948c8ff2cd441089c6a57822cfe1a07a537dff1f9d7ebf2db2d1cdee
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://14eaac446c57bf8641e1a7c58da5694b2301b955c490f5b619e92c444f4aee70
          exitCode: 0
          finishedAt: "2023-01-09T04:39:06Z"
          reason: Completed
          startedAt: "2023-01-09T04:39:06Z"
    - containerID: cri-o://210dbbb5debd6e4c5f2c0cb029eeba4ecb98b576e6cc0fcb0d8c134617a0780b
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:238c03849ea26995bfde9657c7628ae0e31fe35f4be068d7326b65acb1f55d01
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:238c03849ea26995bfde9657c7628ae0e31fe35f4be068d7326b65acb1f55d01
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://210dbbb5debd6e4c5f2c0cb029eeba4ecb98b576e6cc0fcb0d8c134617a0780b
          exitCode: 0
          finishedAt: "2023-01-09T04:39:08Z"
          reason: Completed
          startedAt: "2023-01-09T04:39:08Z"
    - containerID: cri-o://29963168d967f02ce2f9922df0dd1e66ecfaa009690135c9d9c673b5d8e6ff8d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://29963168d967f02ce2f9922df0dd1e66ecfaa009690135c9d9c673b5d8e6ff8d
          exitCode: 0
          finishedAt: "2023-01-09T04:39:17Z"
          reason: Completed
          startedAt: "2023-01-09T04:39:17Z"
    - containerID: cri-o://1ec0532bcac6241821f46fabf8dd02b917e3cfdfdc2ec0eb10d4256bb5b35b4e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://1ec0532bcac6241821f46fabf8dd02b917e3cfdfdc2ec0eb10d4256bb5b35b4e
          exitCode: 0
          finishedAt: "2023-01-09T04:39:17Z"
          reason: Completed
          startedAt: "2023-01-09T04:39:17Z"
    phase: Running
    podIP: 10.0.145.4
    podIPs:
    - ip: 10.0.145.4
    qosClass: Burstable
    startTime: "2023-01-09T04:38:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-01-09T04:38:52Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 6fcbfcb5b8
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4b69d67a-dcba-4067-9fdc-510ed5960825"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:38:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.160.211"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:39:33Z"
    name: multus-additional-cni-plugins-crnh7
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 4b69d67a-dcba-4067-9fdc-510ed5960825
    resourceVersion: "3424"
    uid: d2f798d4-c071-4359-9ccf-108f326b19ac
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-160-211.us-east-2.compute.internal
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9f42d
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cad5a85f21da1d2e653f41f82db607ab6827da0468283f63694c509e39374f0d
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9f42d
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d03a73b14daa7fe32294f62fd5ef20edf193204d6a39df05dd4342e721e7746d
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9f42d
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /bondcni/rhel7/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9c407846948c8ff2cd441089c6a57822cfe1a07a537dff1f9d7ebf2db2d1cdee
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9f42d
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:238c03849ea26995bfde9657c7628ae0e31fe35f4be068d7326b65acb1f55d01
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9f42d
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9f42d
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "log_level": "debug"
        }
        EOF

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.sn-loggvls-jsm.qe.devcluster.openshift.com
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9f42d
        readOnly: true
    nodeName: ip-10-0-160-211.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus
    serviceAccountName: multus
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-9f42d
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:39:32Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:39:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:39:33Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:38:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://7c956cc45bcd769182ca03922748d3f7a8e2ae33f4dce54de9035f07aece69bf
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:39:32Z"
    hostIP: 10.0.160.211
    initContainerStatuses:
    - containerID: cri-o://a00640508081c4cf8e4dc1c2695bfb54ad2c7813e416e26ef5dd46d68214c3ca
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cad5a85f21da1d2e653f41f82db607ab6827da0468283f63694c509e39374f0d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cad5a85f21da1d2e653f41f82db607ab6827da0468283f63694c509e39374f0d
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://a00640508081c4cf8e4dc1c2695bfb54ad2c7813e416e26ef5dd46d68214c3ca
          exitCode: 0
          finishedAt: "2023-01-09T04:39:12Z"
          reason: Completed
          startedAt: "2023-01-09T04:39:11Z"
    - containerID: cri-o://4bc9b3329bccb5c8a40056d268ec09c552687accd1ae750a372a9e7e20ee470f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d03a73b14daa7fe32294f62fd5ef20edf193204d6a39df05dd4342e721e7746d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d03a73b14daa7fe32294f62fd5ef20edf193204d6a39df05dd4342e721e7746d
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://4bc9b3329bccb5c8a40056d268ec09c552687accd1ae750a372a9e7e20ee470f
          exitCode: 0
          finishedAt: "2023-01-09T04:39:22Z"
          reason: Completed
          startedAt: "2023-01-09T04:39:21Z"
    - containerID: cri-o://f6679777638ab7006b721c5c3404a0fe9b9af7c86f91274cda0efb7834494561
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9c407846948c8ff2cd441089c6a57822cfe1a07a537dff1f9d7ebf2db2d1cdee
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9c407846948c8ff2cd441089c6a57822cfe1a07a537dff1f9d7ebf2db2d1cdee
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://f6679777638ab7006b721c5c3404a0fe9b9af7c86f91274cda0efb7834494561
          exitCode: 0
          finishedAt: "2023-01-09T04:39:24Z"
          reason: Completed
          startedAt: "2023-01-09T04:39:24Z"
    - containerID: cri-o://0625cde2a8ff658902f08d2bea291a35082ff16902a0ec39e77e969f96a46428
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:238c03849ea26995bfde9657c7628ae0e31fe35f4be068d7326b65acb1f55d01
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:238c03849ea26995bfde9657c7628ae0e31fe35f4be068d7326b65acb1f55d01
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://0625cde2a8ff658902f08d2bea291a35082ff16902a0ec39e77e969f96a46428
          exitCode: 0
          finishedAt: "2023-01-09T04:39:27Z"
          reason: Completed
          startedAt: "2023-01-09T04:39:27Z"
    - containerID: cri-o://2feb73ab2d7ed713a57030381f38a7ff150bbeb7c1fe3ffd7a4a1c453791d8ae
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://2feb73ab2d7ed713a57030381f38a7ff150bbeb7c1fe3ffd7a4a1c453791d8ae
          exitCode: 0
          finishedAt: "2023-01-09T04:39:31Z"
          reason: Completed
          startedAt: "2023-01-09T04:39:31Z"
    - containerID: cri-o://9b87f524e0b95353c5a60c6a06beac580062449f23fae2a90e826ef85ddc4ccc
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://9b87f524e0b95353c5a60c6a06beac580062449f23fae2a90e826ef85ddc4ccc
          exitCode: 0
          finishedAt: "2023-01-09T04:39:31Z"
          reason: Completed
          startedAt: "2023-01-09T04:39:31Z"
    phase: Running
    podIP: 10.0.160.211
    podIPs:
    - ip: 10.0.160.211
    qosClass: Burstable
    startTime: "2023-01-09T04:39:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-01-09T04:38:52Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 6fcbfcb5b8
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4b69d67a-dcba-4067-9fdc-510ed5960825"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:38:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.199.219"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:39:18Z"
    name: multus-additional-cni-plugins-jggc4
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 4b69d67a-dcba-4067-9fdc-510ed5960825
    resourceVersion: "3248"
    uid: ebabe0fc-8b0c-4173-8e9a-950fd444bc15
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-199-219.us-east-2.compute.internal
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xjgvn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cad5a85f21da1d2e653f41f82db607ab6827da0468283f63694c509e39374f0d
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xjgvn
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d03a73b14daa7fe32294f62fd5ef20edf193204d6a39df05dd4342e721e7746d
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xjgvn
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /bondcni/rhel7/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9c407846948c8ff2cd441089c6a57822cfe1a07a537dff1f9d7ebf2db2d1cdee
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xjgvn
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:238c03849ea26995bfde9657c7628ae0e31fe35f4be068d7326b65acb1f55d01
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xjgvn
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xjgvn
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "log_level": "debug"
        }
        EOF

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.sn-loggvls-jsm.qe.devcluster.openshift.com
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xjgvn
        readOnly: true
    nodeName: ip-10-0-199-219.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus
    serviceAccountName: multus
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-xjgvn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:39:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:39:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:39:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:38:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://180add61e0d8c5a4bdd3f5a6a7a8d9226b9cc58aafe0f6682eecc4119a8cf59f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:39:17Z"
    hostIP: 10.0.199.219
    initContainerStatuses:
    - containerID: cri-o://580c2710573ac66e6c2774632370eb92c9f1b3c40cd53805a4000d21031d7c2a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cad5a85f21da1d2e653f41f82db607ab6827da0468283f63694c509e39374f0d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cad5a85f21da1d2e653f41f82db607ab6827da0468283f63694c509e39374f0d
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://580c2710573ac66e6c2774632370eb92c9f1b3c40cd53805a4000d21031d7c2a
          exitCode: 0
          finishedAt: "2023-01-09T04:38:56Z"
          reason: Completed
          startedAt: "2023-01-09T04:38:56Z"
    - containerID: cri-o://249cc32a0b0aa0ed543368e2b4af7d8f6c761b7e9058536ddd9b59182d8c4b2c
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d03a73b14daa7fe32294f62fd5ef20edf193204d6a39df05dd4342e721e7746d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d03a73b14daa7fe32294f62fd5ef20edf193204d6a39df05dd4342e721e7746d
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://249cc32a0b0aa0ed543368e2b4af7d8f6c761b7e9058536ddd9b59182d8c4b2c
          exitCode: 0
          finishedAt: "2023-01-09T04:39:02Z"
          reason: Completed
          startedAt: "2023-01-09T04:39:02Z"
    - containerID: cri-o://83c26598a2fa055f78cf92217f5cc27b0e6d059018865cede1fd1055ab0ee773
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9c407846948c8ff2cd441089c6a57822cfe1a07a537dff1f9d7ebf2db2d1cdee
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9c407846948c8ff2cd441089c6a57822cfe1a07a537dff1f9d7ebf2db2d1cdee
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://83c26598a2fa055f78cf92217f5cc27b0e6d059018865cede1fd1055ab0ee773
          exitCode: 0
          finishedAt: "2023-01-09T04:39:04Z"
          reason: Completed
          startedAt: "2023-01-09T04:39:04Z"
    - containerID: cri-o://e1c00b94c3b8838b972d0476143c52d2aba9c9bebd0d0a0689d888d8e7ebc674
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:238c03849ea26995bfde9657c7628ae0e31fe35f4be068d7326b65acb1f55d01
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:238c03849ea26995bfde9657c7628ae0e31fe35f4be068d7326b65acb1f55d01
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://e1c00b94c3b8838b972d0476143c52d2aba9c9bebd0d0a0689d888d8e7ebc674
          exitCode: 0
          finishedAt: "2023-01-09T04:39:07Z"
          reason: Completed
          startedAt: "2023-01-09T04:39:06Z"
    - containerID: cri-o://2da20848b54ebecae5bb5595a28108a69f79a2d68f2379d60f7535eaccfc0bf0
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://2da20848b54ebecae5bb5595a28108a69f79a2d68f2379d60f7535eaccfc0bf0
          exitCode: 0
          finishedAt: "2023-01-09T04:39:16Z"
          reason: Completed
          startedAt: "2023-01-09T04:39:16Z"
    - containerID: cri-o://31c57806e5f8e73774309e8cbdd0410996c7194741d0243b70aba059a55e4762
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://31c57806e5f8e73774309e8cbdd0410996c7194741d0243b70aba059a55e4762
          exitCode: 0
          finishedAt: "2023-01-09T04:39:16Z"
          reason: Completed
          startedAt: "2023-01-09T04:39:16Z"
    phase: Running
    podIP: 10.0.199.219
    podIPs:
    - ip: 10.0.199.219
    qosClass: Burstable
    startTime: "2023-01-09T04:38:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-01-09T04:44:57Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 6fcbfcb5b8
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4b69d67a-dcba-4067-9fdc-510ed5960825"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:44:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              f:lastTransitionTime: {}
              f:status: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.130.201"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:45:38Z"
    name: multus-additional-cni-plugins-mtj5s
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 4b69d67a-dcba-4067-9fdc-510ed5960825
    resourceVersion: "17096"
    uid: ed5b9ef2-afc0-4113-b30c-3b5c2c42009b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-130-201.us-east-2.compute.internal
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ng2lb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cad5a85f21da1d2e653f41f82db607ab6827da0468283f63694c509e39374f0d
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ng2lb
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d03a73b14daa7fe32294f62fd5ef20edf193204d6a39df05dd4342e721e7746d
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ng2lb
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /bondcni/rhel7/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9c407846948c8ff2cd441089c6a57822cfe1a07a537dff1f9d7ebf2db2d1cdee
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ng2lb
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:238c03849ea26995bfde9657c7628ae0e31fe35f4be068d7326b65acb1f55d01
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ng2lb
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ng2lb
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "log_level": "debug"
        }
        EOF

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.sn-loggvls-jsm.qe.devcluster.openshift.com
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ng2lb
        readOnly: true
    nodeName: ip-10-0-130-201.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus
    serviceAccountName: multus
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-ng2lb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:45:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:45:38Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:45:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:44:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://fd1b961f5b9c713df6a8a87592569dda50ca47d75eaf1cd4bcd57d6ffb8b7533
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:45:37Z"
    hostIP: 10.0.130.201
    initContainerStatuses:
    - containerID: cri-o://2277f2403f74d862449f8ca4d8daeb6346697f6abe30922a483d2bec72718109
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cad5a85f21da1d2e653f41f82db607ab6827da0468283f63694c509e39374f0d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cad5a85f21da1d2e653f41f82db607ab6827da0468283f63694c509e39374f0d
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://2277f2403f74d862449f8ca4d8daeb6346697f6abe30922a483d2bec72718109
          exitCode: 0
          finishedAt: "2023-01-09T04:45:20Z"
          reason: Completed
          startedAt: "2023-01-09T04:45:20Z"
    - containerID: cri-o://ec4146c3e962dffd20df5729a4881e5b58445f87c9fcc2e395b771a94a7851b6
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d03a73b14daa7fe32294f62fd5ef20edf193204d6a39df05dd4342e721e7746d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d03a73b14daa7fe32294f62fd5ef20edf193204d6a39df05dd4342e721e7746d
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://ec4146c3e962dffd20df5729a4881e5b58445f87c9fcc2e395b771a94a7851b6
          exitCode: 0
          finishedAt: "2023-01-09T04:45:26Z"
          reason: Completed
          startedAt: "2023-01-09T04:45:26Z"
    - containerID: cri-o://26d2d0bdbe11058c63b8911fb94bbe1fb1b5079a11d01d78464fffdecb55256c
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9c407846948c8ff2cd441089c6a57822cfe1a07a537dff1f9d7ebf2db2d1cdee
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9c407846948c8ff2cd441089c6a57822cfe1a07a537dff1f9d7ebf2db2d1cdee
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://26d2d0bdbe11058c63b8911fb94bbe1fb1b5079a11d01d78464fffdecb55256c
          exitCode: 0
          finishedAt: "2023-01-09T04:45:29Z"
          reason: Completed
          startedAt: "2023-01-09T04:45:29Z"
    - containerID: cri-o://0e4cd9544f12fbb86af1ab7bff8f66f7995e279f890787b56fde374053701a2d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:238c03849ea26995bfde9657c7628ae0e31fe35f4be068d7326b65acb1f55d01
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:238c03849ea26995bfde9657c7628ae0e31fe35f4be068d7326b65acb1f55d01
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://0e4cd9544f12fbb86af1ab7bff8f66f7995e279f890787b56fde374053701a2d
          exitCode: 0
          finishedAt: "2023-01-09T04:45:31Z"
          reason: Completed
          startedAt: "2023-01-09T04:45:31Z"
    - containerID: cri-o://9f1c7ffeb30a8a4af7d698b6518a605ebdf4a576275397726e9b6c258e4e1fba
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://9f1c7ffeb30a8a4af7d698b6518a605ebdf4a576275397726e9b6c258e4e1fba
          exitCode: 0
          finishedAt: "2023-01-09T04:45:36Z"
          reason: Completed
          startedAt: "2023-01-09T04:45:36Z"
    - containerID: cri-o://a898ed4c1259c42ac44dc020d1301fae8fca7db8bd3d256d3d0a2c1b2744542e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://a898ed4c1259c42ac44dc020d1301fae8fca7db8bd3d256d3d0a2c1b2744542e
          exitCode: 0
          finishedAt: "2023-01-09T04:45:36Z"
          reason: Completed
          startedAt: "2023-01-09T04:45:36Z"
    phase: Running
    podIP: 10.0.130.201
    podIPs:
    - ip: 10.0.130.201
    qosClass: Burstable
    startTime: "2023-01-09T04:44:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-01-09T04:44:58Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 6fcbfcb5b8
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4b69d67a-dcba-4067-9fdc-510ed5960825"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:44:58Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              f:lastTransitionTime: {}
              f:status: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.144.137"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:45:42Z"
    name: multus-additional-cni-plugins-r6wvx
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 4b69d67a-dcba-4067-9fdc-510ed5960825
    resourceVersion: "17182"
    uid: b02da3c0-44e4-4ecc-a6ce-a25bb5945b82
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-144-137.us-east-2.compute.internal
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hwdqg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cad5a85f21da1d2e653f41f82db607ab6827da0468283f63694c509e39374f0d
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hwdqg
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d03a73b14daa7fe32294f62fd5ef20edf193204d6a39df05dd4342e721e7746d
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hwdqg
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /bondcni/rhel7/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9c407846948c8ff2cd441089c6a57822cfe1a07a537dff1f9d7ebf2db2d1cdee
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hwdqg
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:238c03849ea26995bfde9657c7628ae0e31fe35f4be068d7326b65acb1f55d01
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hwdqg
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hwdqg
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "log_level": "debug"
        }
        EOF

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.sn-loggvls-jsm.qe.devcluster.openshift.com
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hwdqg
        readOnly: true
    nodeName: ip-10-0-144-137.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus
    serviceAccountName: multus
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-hwdqg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:45:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:45:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:45:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:45:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://2d533873d5926240212871af34ca8c518adbbc675c18dc4d545d04f5db4d6b97
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:45:41Z"
    hostIP: 10.0.144.137
    initContainerStatuses:
    - containerID: cri-o://5de4ca56027f1dd0ff848540b0e89c0474041a0656c48448d4b49fa15ebe286e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cad5a85f21da1d2e653f41f82db607ab6827da0468283f63694c509e39374f0d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cad5a85f21da1d2e653f41f82db607ab6827da0468283f63694c509e39374f0d
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://5de4ca56027f1dd0ff848540b0e89c0474041a0656c48448d4b49fa15ebe286e
          exitCode: 0
          finishedAt: "2023-01-09T04:45:25Z"
          reason: Completed
          startedAt: "2023-01-09T04:45:25Z"
    - containerID: cri-o://170e29110166b512d3017a897ec5876b1b657256935c61e8d7f8473010ac3697
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d03a73b14daa7fe32294f62fd5ef20edf193204d6a39df05dd4342e721e7746d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d03a73b14daa7fe32294f62fd5ef20edf193204d6a39df05dd4342e721e7746d
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://170e29110166b512d3017a897ec5876b1b657256935c61e8d7f8473010ac3697
          exitCode: 0
          finishedAt: "2023-01-09T04:45:31Z"
          reason: Completed
          startedAt: "2023-01-09T04:45:31Z"
    - containerID: cri-o://009fa1a839317aa3f9f4c939722bf8e88bd6c6adde67dedd20dc91703991fb14
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9c407846948c8ff2cd441089c6a57822cfe1a07a537dff1f9d7ebf2db2d1cdee
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9c407846948c8ff2cd441089c6a57822cfe1a07a537dff1f9d7ebf2db2d1cdee
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://009fa1a839317aa3f9f4c939722bf8e88bd6c6adde67dedd20dc91703991fb14
          exitCode: 0
          finishedAt: "2023-01-09T04:45:33Z"
          reason: Completed
          startedAt: "2023-01-09T04:45:33Z"
    - containerID: cri-o://99965e17d749dc2d9d9fea2af20509e9bbf702d152e8adee8de1760fce049abf
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:238c03849ea26995bfde9657c7628ae0e31fe35f4be068d7326b65acb1f55d01
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:238c03849ea26995bfde9657c7628ae0e31fe35f4be068d7326b65acb1f55d01
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://99965e17d749dc2d9d9fea2af20509e9bbf702d152e8adee8de1760fce049abf
          exitCode: 0
          finishedAt: "2023-01-09T04:45:35Z"
          reason: Completed
          startedAt: "2023-01-09T04:45:35Z"
    - containerID: cri-o://119bf48824f5e99acaf8b38febecce3c5d55a0f49982d3b9f9b240a552fd5b48
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://119bf48824f5e99acaf8b38febecce3c5d55a0f49982d3b9f9b240a552fd5b48
          exitCode: 0
          finishedAt: "2023-01-09T04:45:39Z"
          reason: Completed
          startedAt: "2023-01-09T04:45:39Z"
    - containerID: cri-o://e040e87f4fbdc09e651e781a24071214db659b1c7ca2cde07c6b3a610bf6b437
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: cri-o://e040e87f4fbdc09e651e781a24071214db659b1c7ca2cde07c6b3a610bf6b437
          exitCode: 0
          finishedAt: "2023-01-09T04:45:40Z"
          reason: Completed
          startedAt: "2023-01-09T04:45:40Z"
    phase: Running
    podIP: 10.0.144.137
    podIPs:
    - ip: 10.0.144.137
    qosClass: Burstable
    startTime: "2023-01-09T04:45:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.19/23"],"mac_address":"0a:58:0a:81:00:13","gateway_ips":["10.129.0.1"],"ip_address":"10.129.0.19/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.19"
            ],
            "mac": "0a:58:0a:81:00:13",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.19"
            ],
            "mac": "0a:58:0a:81:00:13",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:42:12Z"
    generateName: multus-admission-controller-846599f76f-
    labels:
      app: multus-admission-controller
      component: network
      namespace: openshift-multus
      openshift.io/component: network
      pod-template-hash: 846599f76f
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:42:12Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:namespace: {}
            f:openshift.io/component: {}
            f:pod-template-hash: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"67ae7ba3-7231-4a49-8eda-8e46839d0fc4"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/webhook"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"multus-admission-controller"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9091,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/webhook"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"webhook-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:42:12Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:42:13Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.19"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:42:15Z"
    name: multus-admission-controller-846599f76f-gjh42
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: multus-admission-controller-846599f76f
      uid: 67ae7ba3-7231-4a49-8eda-8e46839d0fc4
    resourceVersion: "9433"
    uid: d82e214e-cccd-42e7-9ff0-7cc819e55ddb
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |-
        set -euo pipefail
        exec /usr/bin/webhook \
          -bind-address=0.0.0.0 \
          -port=6443 \
          -tls-private-key-file=/etc/webhook/tls.key \
          -tls-cert-file=/etc/webhook/tls.crt \
          -metrics-listen-address=127.0.0.1:9091 \
          -alsologtostderr=true \
          -ignore-namespaces=openshift-etcd,openshift-console,openshift-ingress-canary,openshift-apiserver,openshift-apiserver-operator,openshift-authentication,openshift-authentication-operator,openshift-cloud-controller-manager,openshift-cloud-controller-manager-operator,openshift-cloud-credential-operator,openshift-cloud-network-config-controller,openshift-cluster-csi-drivers,openshift-cluster-machine-approver,openshift-cluster-node-tuning-operator,openshift-cluster-samples-operator,openshift-cluster-storage-operator,openshift-cluster-version,openshift-config-operator,openshift-controller-manager,openshift-controller-manager-operator,openshift-dns,openshift-dns-operator,openshift-etcd-operator,openshift-image-registry,openshift-ingress-operator,openshift-insights,openshift-kube-apiserver,openshift-kube-apiserver-operator,openshift-kube-controller-manager,openshift-kube-controller-manager-operator,openshift-kube-scheduler,openshift-kube-scheduler-operator,openshift-kube-storage-version-migrator,openshift-kube-storage-version-migrator-operator,openshift-machine-api,openshift-machine-config-operator,openshift-marketplace,openshift-monitoring,openshift-multus,openshift-network-diagnostics,openshift-network-operator,openshift-oauth-apiserver,openshift-operator-lifecycle-manager,openshift-ovn-kubernetes,openshift-route-controller-manager,openshift-service-ca-operator,openshift-user-workload-monitoring
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f87f071c3aa8b3932f33cd2dec201abbf7a116e70eeb0df53f93cccc0c3f4041
      imagePullPolicy: IfNotPresent
      name: multus-admission-controller
      ports:
      - containerPort: 9091
        name: metrics-port
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cgfds
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/webhook/tls.key
      - --tls-cert-file=/etc/webhook/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cgfds
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-199-219.us-east-2.compute.internal
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: multus-ac
    serviceAccountName: multus-ac
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: webhook-certs
      secret:
        defaultMode: 420
        secretName: multus-admission-controller-secret
    - name: kube-api-access-cgfds
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:42:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:42:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:42:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:42:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://875cf550c45db734e611de1ff7c149e33f39b46d16d178e977f6d9cc66649f8d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:42:15Z"
    - containerID: cri-o://6f8e09101139c719d552e57949243438584daaa7b889d63d61fe92d8b94a9128
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f87f071c3aa8b3932f33cd2dec201abbf7a116e70eeb0df53f93cccc0c3f4041
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f87f071c3aa8b3932f33cd2dec201abbf7a116e70eeb0df53f93cccc0c3f4041
      lastState: {}
      name: multus-admission-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:42:15Z"
    hostIP: 10.0.199.219
    phase: Running
    podIP: 10.129.0.19
    podIPs:
    - ip: 10.129.0.19
    qosClass: Burstable
    startTime: "2023-01-09T04:42:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.16/23"],"mac_address":"0a:58:0a:80:00:10","gateway_ips":["10.128.0.1"],"ip_address":"10.128.0.16/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.16"
            ],
            "mac": "0a:58:0a:80:00:10",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.16"
            ],
            "mac": "0a:58:0a:80:00:10",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:41:49Z"
    generateName: multus-admission-controller-846599f76f-
    labels:
      app: multus-admission-controller
      component: network
      namespace: openshift-multus
      openshift.io/component: network
      pod-template-hash: 846599f76f
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:41:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:namespace: {}
            f:openshift.io/component: {}
            f:pod-template-hash: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"67ae7ba3-7231-4a49-8eda-8e46839d0fc4"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/webhook"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"multus-admission-controller"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9091,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/webhook"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"webhook-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:41:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:41:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.16"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:42:12Z"
    name: multus-admission-controller-846599f76f-gxn52
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: multus-admission-controller-846599f76f
      uid: 67ae7ba3-7231-4a49-8eda-8e46839d0fc4
    resourceVersion: "9159"
    uid: 83e9f723-8e6a-4623-b012-2dc0cdb405b3
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |-
        set -euo pipefail
        exec /usr/bin/webhook \
          -bind-address=0.0.0.0 \
          -port=6443 \
          -tls-private-key-file=/etc/webhook/tls.key \
          -tls-cert-file=/etc/webhook/tls.crt \
          -metrics-listen-address=127.0.0.1:9091 \
          -alsologtostderr=true \
          -ignore-namespaces=openshift-etcd,openshift-console,openshift-ingress-canary,openshift-apiserver,openshift-apiserver-operator,openshift-authentication,openshift-authentication-operator,openshift-cloud-controller-manager,openshift-cloud-controller-manager-operator,openshift-cloud-credential-operator,openshift-cloud-network-config-controller,openshift-cluster-csi-drivers,openshift-cluster-machine-approver,openshift-cluster-node-tuning-operator,openshift-cluster-samples-operator,openshift-cluster-storage-operator,openshift-cluster-version,openshift-config-operator,openshift-controller-manager,openshift-controller-manager-operator,openshift-dns,openshift-dns-operator,openshift-etcd-operator,openshift-image-registry,openshift-ingress-operator,openshift-insights,openshift-kube-apiserver,openshift-kube-apiserver-operator,openshift-kube-controller-manager,openshift-kube-controller-manager-operator,openshift-kube-scheduler,openshift-kube-scheduler-operator,openshift-kube-storage-version-migrator,openshift-kube-storage-version-migrator-operator,openshift-machine-api,openshift-machine-config-operator,openshift-marketplace,openshift-monitoring,openshift-multus,openshift-network-diagnostics,openshift-network-operator,openshift-oauth-apiserver,openshift-operator-lifecycle-manager,openshift-ovn-kubernetes,openshift-route-controller-manager,openshift-service-ca-operator,openshift-user-workload-monitoring
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f87f071c3aa8b3932f33cd2dec201abbf7a116e70eeb0df53f93cccc0c3f4041
      imagePullPolicy: IfNotPresent
      name: multus-admission-controller
      ports:
      - containerPort: 9091
        name: metrics-port
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-srjgx
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/webhook/tls.key
      - --tls-cert-file=/etc/webhook/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-srjgx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-145-4.us-east-2.compute.internal
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: multus-ac
    serviceAccountName: multus-ac
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: webhook-certs
      secret:
        defaultMode: 420
        secretName: multus-admission-controller-secret
    - name: kube-api-access-srjgx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:41:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:42:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:42:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:41:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://10244501f6ab6fac291c7d9056c2a80b87d6dabb29620ac46645ca62ea001de4
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:42:12Z"
    - containerID: cri-o://589125b1b182bc86fc2f71e9f1367483b91f60a9a38127095b8dcfd5d1fd764a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f87f071c3aa8b3932f33cd2dec201abbf7a116e70eeb0df53f93cccc0c3f4041
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f87f071c3aa8b3932f33cd2dec201abbf7a116e70eeb0df53f93cccc0c3f4041
      lastState: {}
      name: multus-admission-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:42:08Z"
    hostIP: 10.0.145.4
    phase: Running
    podIP: 10.128.0.16
    podIPs:
    - ip: 10.128.0.16
    qosClass: Burstable
    startTime: "2023-01-09T04:41:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-01-09T04:44:57Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 6fdfb6bc5b
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"864e858f-2006-4ac0-baf4-6564d5a4903f"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/var/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:44:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              f:lastTransitionTime: {}
              f:status: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.130.201"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:45:21Z"
    name: multus-kwbqc
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: 864e858f-2006-4ac0-baf4-6564d5a4903f
    resourceVersion: "14212"
    uid: 7e4d2449-b2a9-45cd-aeb4-a83364c59fd5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-130-201.us-east-2.compute.internal
    containers:
    - args:
      - |
        /entrypoint/cnibincopy.sh; exec /entrypoint.sh --multus-conf-file=auto --multus-autoconfig-dir=/host/var/run/multus/cni/net.d --multus-kubeconfig-file-host=/etc/kubernetes/cni/net.d/multus.d/multus.kubeconfig --readiness-indicator-file=/var/run/multus/cni/net.d/10-ovn-kubernetes.conf --cleanup-config-on-exit=true --namespace-isolation=true --multus-log-level=verbose --cni-version=0.3.1 --additional-bin-dir=/opt/multus/bin --skip-multus-binary-copy=true - "--global-namespaces=default,openshift-multus,openshift-sriov-network-operator"
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.sn-loggvls-jsm.qe.devcluster.openshift.com
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/var/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tftjl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ip-10-0-130-201.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus
    serviceAccountName: multus
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - name: kube-api-access-tftjl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:44:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:45:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:45:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:44:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://39d711f89ddffdbf1b19ab0da35a4aac266191343f2759b81a275765d815a9f8
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      lastState: {}
      name: kube-multus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:45:20Z"
    hostIP: 10.0.130.201
    phase: Running
    podIP: 10.0.130.201
    podIPs:
    - ip: 10.0.130.201
    qosClass: Burstable
    startTime: "2023-01-09T04:44:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-01-09T04:44:58Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 6fdfb6bc5b
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"864e858f-2006-4ac0-baf4-6564d5a4903f"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/var/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:44:58Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              f:lastTransitionTime: {}
              f:status: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.144.137"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:45:26Z"
    name: multus-ndfzx
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: 864e858f-2006-4ac0-baf4-6564d5a4903f
    resourceVersion: "14590"
    uid: 86e01836-0801-450d-9329-a8dd1e20c325
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-144-137.us-east-2.compute.internal
    containers:
    - args:
      - |
        /entrypoint/cnibincopy.sh; exec /entrypoint.sh --multus-conf-file=auto --multus-autoconfig-dir=/host/var/run/multus/cni/net.d --multus-kubeconfig-file-host=/etc/kubernetes/cni/net.d/multus.d/multus.kubeconfig --readiness-indicator-file=/var/run/multus/cni/net.d/10-ovn-kubernetes.conf --cleanup-config-on-exit=true --namespace-isolation=true --multus-log-level=verbose --cni-version=0.3.1 --additional-bin-dir=/opt/multus/bin --skip-multus-binary-copy=true - "--global-namespaces=default,openshift-multus,openshift-sriov-network-operator"
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.sn-loggvls-jsm.qe.devcluster.openshift.com
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/var/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qt526
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ip-10-0-144-137.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus
    serviceAccountName: multus
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - name: kube-api-access-qt526
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:45:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:45:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:45:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:45:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://40519b6f18c4f639d25f43150edae90760af9de8a896845488469d063ae502b3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      lastState: {}
      name: kube-multus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:45:25Z"
    hostIP: 10.0.144.137
    phase: Running
    podIP: 10.0.144.137
    podIPs:
    - ip: 10.0.144.137
    qosClass: Burstable
    startTime: "2023-01-09T04:45:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-01-09T04:38:52Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 6fdfb6bc5b
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"864e858f-2006-4ac0-baf4-6564d5a4903f"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/var/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:38:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.145.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:38:58Z"
    name: multus-wtpqq
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: 864e858f-2006-4ac0-baf4-6564d5a4903f
    resourceVersion: "2840"
    uid: 090c7bbc-9cfb-4b82-aa43-28f8337fb992
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-145-4.us-east-2.compute.internal
    containers:
    - args:
      - |
        /entrypoint/cnibincopy.sh; exec /entrypoint.sh --multus-conf-file=auto --multus-autoconfig-dir=/host/var/run/multus/cni/net.d --multus-kubeconfig-file-host=/etc/kubernetes/cni/net.d/multus.d/multus.kubeconfig --readiness-indicator-file=/var/run/multus/cni/net.d/10-ovn-kubernetes.conf --cleanup-config-on-exit=true --namespace-isolation=true --multus-log-level=verbose --cni-version=0.3.1 --additional-bin-dir=/opt/multus/bin --skip-multus-binary-copy=true - "--global-namespaces=default,openshift-multus,openshift-sriov-network-operator"
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL7_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel7/bin/
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.sn-loggvls-jsm.qe.devcluster.openshift.com
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/var/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xg982
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ip-10-0-145-4.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus
    serviceAccountName: multus
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - name: kube-api-access-xg982
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:38:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:38:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:38:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:38:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://8314d3cd4b834d4e7f5390c72cfb7b1f8d8fcbd93b6a93d2aae44a917830a490
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
      lastState: {}
      name: kube-multus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:38:58Z"
    hostIP: 10.0.145.4
    phase: Running
    podIP: 10.0.145.4
    podIPs:
    - ip: 10.0.145.4
    qosClass: Burstable
    startTime: "2023-01-09T04:38:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.4/23"],"mac_address":"0a:58:0a:80:00:04","gateway_ips":["10.128.0.1"],"ip_address":"10.128.0.4/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.4"
            ],
            "mac": "0a:58:0a:80:00:04",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.4"
            ],
            "mac": "0a:58:0a:80:00:04",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:38:53Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 5d48445db
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"96c13310-8925-47a6-a576-60b3a961eec5"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:38:53Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:40:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:43:04Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:43:07Z"
    name: network-metrics-daemon-4jjjm
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 96c13310-8925-47a6-a576-60b3a961eec5
    resourceVersion: "10565"
    uid: aba2e47b-431d-443e-a6b6-14a072ef95f7
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-145-4.us-east-2.compute.internal
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:41709e49c29b2764beb118cc25216916be6f8db716ed51886b8191ea695d94e0
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rh94n
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rh94n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-145-4.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-rh94n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:38:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:43:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:43:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:38:53Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://bb295fd90d13ca5bc003ee6d061eac3f209fa89e01fc9b5fda361f54225186df
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:43:07Z"
    - containerID: cri-o://45a17765bda0874335ebb4b7fffcb017f8b97b476c043496ee672dc56f92a1c7
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:41709e49c29b2764beb118cc25216916be6f8db716ed51886b8191ea695d94e0
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:41709e49c29b2764beb118cc25216916be6f8db716ed51886b8191ea695d94e0
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:43:06Z"
    hostIP: 10.0.145.4
    phase: Running
    podIP: 10.128.0.4
    podIPs:
    - ip: 10.128.0.4
    qosClass: Burstable
    startTime: "2023-01-09T04:38:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.2.4/23"],"mac_address":"0a:58:0a:81:02:04","gateway_ips":["10.129.2.1"],"ip_address":"10.129.2.4/23","gateway_ip":"10.129.2.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.2.4"
            ],
            "mac": "0a:58:0a:81:02:04",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.2.4"
            ],
            "mac": "0a:58:0a:81:02:04",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:44:58Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 5d48445db
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:44:58Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"96c13310-8925-47a6-a576-60b3a961eec5"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:44:58Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:46:08Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              f:lastTransitionTime: {}
              f:status: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.2.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:46:12Z"
    name: network-metrics-daemon-bwvwd
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 96c13310-8925-47a6-a576-60b3a961eec5
    resourceVersion: "17982"
    uid: 114831d8-db4c-422d-a721-a8c57bc057da
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-144-137.us-east-2.compute.internal
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:41709e49c29b2764beb118cc25216916be6f8db716ed51886b8191ea695d94e0
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t8zrj
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t8zrj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-144-137.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-t8zrj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:45:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:46:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:46:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:45:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f1372a65adf0975487c853fe45a96395b750a2de135ff82faf53c42511851d0b
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:46:11Z"
    - containerID: cri-o://f689ba409440693119b347accf0b7fab817989615bf86338a666ea34bd13356a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:41709e49c29b2764beb118cc25216916be6f8db716ed51886b8191ea695d94e0
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:41709e49c29b2764beb118cc25216916be6f8db716ed51886b8191ea695d94e0
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:46:10Z"
    hostIP: 10.0.144.137
    phase: Running
    podIP: 10.129.2.4
    podIPs:
    - ip: 10.129.2.4
    qosClass: Burstable
    startTime: "2023-01-09T04:45:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.3/23"],"mac_address":"0a:58:0a:81:00:03","gateway_ips":["10.129.0.1"],"ip_address":"10.129.0.3/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.3"
            ],
            "mac": "0a:58:0a:81:00:03",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.3"
            ],
            "mac": "0a:58:0a:81:00:03",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:38:53Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 5d48445db
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"96c13310-8925-47a6-a576-60b3a961eec5"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:38:53Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:40:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:43:04Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:43:07Z"
    name: network-metrics-daemon-m9282
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 96c13310-8925-47a6-a576-60b3a961eec5
    resourceVersion: "10547"
    uid: 532bdf7c-8cea-435b-8a7a-8e49e7fe2661
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-199-219.us-east-2.compute.internal
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:41709e49c29b2764beb118cc25216916be6f8db716ed51886b8191ea695d94e0
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pqjkw
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pqjkw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-199-219.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-pqjkw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:38:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:43:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:43:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:38:53Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://0375d8b5bca3ceaabbb724b230f6df7df98b843235fab46baf008d269d6715c9
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:43:06Z"
    - containerID: cri-o://470810492c46295658a1c171cce63a3bd95b393a8b6509ceef0e894c36fa11d4
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:41709e49c29b2764beb118cc25216916be6f8db716ed51886b8191ea695d94e0
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:41709e49c29b2764beb118cc25216916be6f8db716ed51886b8191ea695d94e0
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:43:06Z"
    hostIP: 10.0.199.219
    phase: Running
    podIP: 10.129.0.3
    podIPs:
    - ip: 10.129.0.3
    qosClass: Burstable
    startTime: "2023-01-09T04:38:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.3/23"],"mac_address":"0a:58:0a:82:00:03","gateway_ips":["10.130.0.1"],"ip_address":"10.130.0.3/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.3"
            ],
            "mac": "0a:58:0a:82:00:03",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.3"
            ],
            "mac": "0a:58:0a:82:00:03",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:38:53Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 5d48445db
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"96c13310-8925-47a6-a576-60b3a961eec5"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:38:53Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:40:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:43:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:43:20Z"
    name: network-metrics-daemon-t5mk4
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 96c13310-8925-47a6-a576-60b3a961eec5
    resourceVersion: "10855"
    uid: 29641382-4d28-41f4-a61e-e0afb90f6a8f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-160-211.us-east-2.compute.internal
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:41709e49c29b2764beb118cc25216916be6f8db716ed51886b8191ea695d94e0
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jgwgt
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jgwgt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-160-211.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-jgwgt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:39:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:43:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:43:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:38:53Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://d0f86f772802e30f43a6d86cbcb5292ee20eecdbd7c0218d374e7ec7567663aa
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:43:19Z"
    - containerID: cri-o://002d1c3c2a4b180ca88105565a0e66fbabff1bff168a698c961822120e7095f2
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:41709e49c29b2764beb118cc25216916be6f8db716ed51886b8191ea695d94e0
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:41709e49c29b2764beb118cc25216916be6f8db716ed51886b8191ea695d94e0
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:43:19Z"
    hostIP: 10.0.160.211
    phase: Running
    podIP: 10.130.0.3
    podIPs:
    - ip: 10.130.0.3
    qosClass: Burstable
    startTime: "2023-01-09T04:39:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.131.2.4/23"],"mac_address":"0a:58:0a:83:02:04","gateway_ips":["10.131.2.1"],"ip_address":"10.131.2.4/23","gateway_ip":"10.131.2.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.131.2.4"
            ],
            "mac": "0a:58:0a:83:02:04",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.131.2.4"
            ],
            "mac": "0a:58:0a:83:02:04",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T05:32:59Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 5d48445db
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T05:32:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"96c13310-8925-47a6-a576-60b3a961eec5"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T05:32:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T05:34:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.131.2.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T05:34:07Z"
    name: network-metrics-daemon-w2s9h
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 96c13310-8925-47a6-a576-60b3a961eec5
    resourceVersion: "45340"
    uid: eb9278f8-a334-48df-a045-6f40569449e0
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-190-242.us-east-2.compute.internal
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:41709e49c29b2764beb118cc25216916be6f8db716ed51886b8191ea695d94e0
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n9rbk
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n9rbk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: metrics-daemon-sa-dockercfg-9jq2v
    nodeName: ip-10-0-190-242.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-n9rbk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T05:32:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T05:34:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T05:34:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T05:32:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://c377ae4077fbbe44eef8c834e0bc70f0e38526aaa2eb564ee4dc181787888756
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T05:34:07Z"
    - containerID: cri-o://b89ba73e6e6d3c8c51fea460ddff89d1a4d52269ee673b702a742695bb2a2a82
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:41709e49c29b2764beb118cc25216916be6f8db716ed51886b8191ea695d94e0
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:41709e49c29b2764beb118cc25216916be6f8db716ed51886b8191ea695d94e0
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T05:34:05Z"
    hostIP: 10.0.190.242
    phase: Running
    podIP: 10.131.2.4
    podIPs:
    - ip: 10.131.2.4
    qosClass: Burstable
    startTime: "2023-01-09T05:32:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.2.4/23"],"mac_address":"0a:58:0a:80:02:04","gateway_ips":["10.128.2.1"],"ip_address":"10.128.2.4/23","gateway_ip":"10.128.2.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.2.4"
            ],
            "mac": "0a:58:0a:80:02:04",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.2.4"
            ],
            "mac": "0a:58:0a:80:02:04",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-01-09T04:44:58Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 5d48445db
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-145-4
      operation: Update
      time: "2023-01-09T04:44:58Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"96c13310-8925-47a6-a576-60b3a961eec5"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:44:58Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-01-09T04:45:30Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              f:status: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.2.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-01-09T04:45:33Z"
    name: network-metrics-daemon-z6rq9
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 96c13310-8925-47a6-a576-60b3a961eec5
    resourceVersion: "16698"
    uid: f9d70fe0-8cb3-463b-bb96-d5fc237e43d4
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-130-201.us-east-2.compute.internal
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:41709e49c29b2764beb118cc25216916be6f8db716ed51886b8191ea695d94e0
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jsls6
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jsls6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-130-201.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-jsls6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:44:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:45:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:45:33Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-09T04:44:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://42f5375ad931b61366438012e3b5ff32e28e2103747305e451e74efdcdb3377d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:45:32Z"
    - containerID: cri-o://1f447978fe5355ccab34f6351c5e719f1db70f90c443a0ca08d6f0ad066b2e7d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:41709e49c29b2764beb118cc25216916be6f8db716ed51886b8191ea695d94e0
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:41709e49c29b2764beb118cc25216916be6f8db716ed51886b8191ea695d94e0
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-01-09T04:45:32Z"
    hostIP: 10.0.130.201
    phase: Running
    podIP: 10.128.2.4
    podIPs:
    - ip: 10.128.2.4
    qosClass: Burstable
    startTime: "2023-01-09T04:44:58Z"
kind: PodList
metadata:
  resourceVersion: "268580"
