---
apiVersion: v1
items:
- apiVersion: v1
  data:
    .dockercfg: Njg5MCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: 9aeac4f4-4da1-4078-87f9-7282f6bd78b4
      openshift.io/token-secret.name: builder-token-c2s5h
      openshift.io/token-secret.value: ""
    creationTimestamp: "2023-01-09T04:45:31Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c86fb37e-497f-4eef-bfb8-5fb790c4b4b3"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2023-01-09T04:47:33Z"
    name: builder-dockercfg-9hc94
    namespace: openshift-dns
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: builder-token-c2s5h
      uid: c86fb37e-497f-4eef-bfb8-5fb790c4b4b3
    resourceVersion: "21092"
    uid: dd692980-ff34-4eb8-a5ac-8a15ea66be7c
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MTMgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: OTE2IGJ5dGVzIGxvbmc=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: 9aeac4f4-4da1-4078-87f9-7282f6bd78b4
    creationTimestamp: "2023-01-09T04:45:31Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2023-01-09T04:45:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:46:05Z"
    name: builder-token-c2s5h
    namespace: openshift-dns
    resourceVersion: "17695"
    uid: c86fb37e-497f-4eef-bfb8-5fb790c4b4b3
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: Njg5MCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: 4a730e43-e979-49d7-95f0-7b69bf2f76c2
      openshift.io/token-secret.name: default-token-pvhvt
      openshift.io/token-secret.value: ""
    creationTimestamp: "2023-01-09T04:45:27Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"3ca91b92-fd3b-4fd2-8dba-0ec89348ca13"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2023-01-09T04:47:33Z"
    name: default-dockercfg-hjgc8
    namespace: openshift-dns
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: default-token-pvhvt
      uid: 3ca91b92-fd3b-4fd2-8dba-0ec89348ca13
    resourceVersion: "20775"
    uid: 266bdc04-a372-4f2f-806c-994c16185d7d
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MTMgYnl0ZXMgbG9uZw==
    service-ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZTRxWmZuUDhGSWN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd01UQTVNRFF5T0RJeVdoY05Nek13TVRBMk1EUXlPREl5V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWkrQVJMQkFNQ1ByeEZhVXpNeHZmMHREdmNpOFZVdgpWTmhsQWxZWVJaUlNmOExCQXhHVmVGa0R2bW5vdzNXdlVNREc3MGY4RVduYVByVzM4SDV2VGZlQlg2OE9Lc3JYCjN2ODZiSzNUWDh6UldwQVhwNytGVjhCcUNKcTl1NlliSzVrc2lqdjZHZXc3NllMODZra2JLK1RZV04xYlJtQmoKNGNsUGM3Ulo1WFdpbk84elIwanN5dGp5M3M0VEF1VjczZVdoNmZXcDB6eUQ5UWVGL0VHd1NnN01uR21HN3QvUAptbFFzUXE5djJ2UzZjUG5HSDdidEYyTDNyMGVoNzF3QitsWDZXNEdKc3U1ZEIvQ3pscGMveGcySTdJd2lpV3NvCkw3Q3U1dVJvZ3gwQUpUaGVUWFZPbVBwZ2xqTzlKRmM2RUlRQU51U2ZiZ1cwZHlXZHZmTGZLUjhDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkl4UgpTTGEvOGFhdDgrM2NESTB3WVpKU2cvYi9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUURCWnNmNis1WHg4T3F5CkpoRiswR0Z4bzhEUldpOXdMZzRYUTVyL3pSSXh6THFwZkV2Ti9rM20vZ2RMdU40MG5PQ0tTbWlMTmx1NXA3QTEKZllsLzc4SXdFZDZteEU4R0ZwaC80QnRxV3pKd2k1VHVxOG5tMWhOcVNGaitBdDVOcXVRNlJCcUVZTzVkMm16MQo2ck1KT2VqTUxnZndwOWZxMnpsTEUxU05leGx6dlFwNjB0Vm5ZS0Fra0JZZndqdU9scUVzenZKWElraDhXTGptCjRXZkFydTB3cmxEYWt4OFhDWWlkL0wyL25aWVl0dHBuQ29zSXpXOTlkYnN2WjNwaHVrdHJWR09wS3FVV1FPRUoKWWRRVU5MRkFyYjhlcmRLNGQ2KzZrNmxEMXJLYVlpbFlqMUMrZkZlWno5TzdaQmJ4K0ZOS3kzUHNnQUQ4dmthVwppY1JITEI3MQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSUxlVEtYL2NkcVAwd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJek1ERXdPVEEwTWpneU1Wb1hEVE16TURFd05qQTBNamd5TVZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5SnFDV2NKMmhmYU0Kb2prYkJwOVphYng0eHZRRnFkQzI2T20yNFEvaG5GbXNNbTMxNkwzT3hWY3UyNnZFNXRkUGdLVXM1WS91VXUvQwpqbS9tNkh4WmY4SWQ4NlA5dmhyMkJZUC91UzBFcnE5ZGFxK1VvTm5aYVBCNFVIZmtKczBBZjEvaTk4ZkpWUUd0CnZzM0laRTdmN210OUR2T2EvMDV6dGdVdjFndkJBblA4SjRETEViVEJlbE9uNUNXenpGcXlldkQ4MUdTdWE2T3QKNjQxVU9kV1krb0NoeFNCb0tWaTFTbmpsZ3JaTWwwZmZHRnFWQXBDcnN2d1RQaE5qZU02MFZYTVNJOTNhUUpIZwpWNVlnQUE4L3hCR2NIUzlKbkVJV3l5WHpwMVZFM1JLdWlqVHMrdDZYUndiZGZnRC9Zb1h2cHM5V01OSXIwTG1QCkxKY0JuWXBTdFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTc3QUxPWjBreEdmdjZPM1ZVMnJLNmI3VUxua3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUtDeGNHRS9yUmhuYkx1SUlYUSs3WXhDSlNKNXE4enZCWkh4T3NXRGJXMnJjVXd1dXZ2QUtYQlVZVFp4CjZiZnlKcThDT3U3MHRPb0o3Tk1lYUtCZU1BMDhZQll6SU43ZDNWOXovMmZtMmJZSmtPUTlYQTErS3BoZzR3bmkKd3BlR2NLY09EZVlZMHJhYklqQ2VJcDYzS0s4NGxob01lV3FKZEIrc2pSSnJJODNOT2xZeDl5MmZwaHNyaW1IRgpFWE1XS0Nkci8xbDdTQlZ0bkVaYXFvMytNUmV4dDhVR3piZlRxU2ZsRDVXeXFvWlZRZCtXVEN0UmdzakhONG8wCk1oWG1aRnVnMHVVbkFUS2JDMFdYYS9VVDJQSmVMRzNhSUluKy9IOEx6TE8wRzB3bUpYRi9pQjBuYW96TmZuVVQKTDYrcTBrZFNwWHdvZjRDejUyR215NXByOGk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSVMyd3NyVkIrdTBRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl6TURFd09UQTBNamd5TVZvWERUTXpNREV3TmpBME1qZ3lNVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXM0L1pjakpnTlhYSFJ5ZllidU9mNWc2S2lWNUxadnlYUmVyam0vY0NtWHJYeWlERFV0VUVNaUtKTjI4WQpJUSthTVQ2ekdvZlhVZTBGdUd3OEd4OGp5STZuWGZ0S0R3OWtrVi8rSExJRndCQTgrWWhCTGsyU3k3WWh6eHRuCkRIME5PNTFCbUd0VXRrWURLM1hDbzJMbUVSVUY3YUV5eHdXRVB2U09yNFJwcDljY0lsby90YWpNandKYlROaXoKU2ttVUQySzArTW5oUldjZFUrYUsvYTJVYU1yd1V2bWNqN3JiTGlMRldQZDZrUmNpbEhvWVdqNTczQUZuU2dacQpoNzlENm1wSGhsckJ0ampyMjZzaFBJQ2FjYzgxeWllVy9SdnIrT1JRRVBBOFYzVVJSRmovM2xPdFRMV2hlM05xCnk2RTg3VU5zZWp1S1NOaXpnVm9zRzh6VkJRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVBTGs3Q0kxdUlobXozSEY2c0VRM0RYUmpkVXN3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFLYkd1THpqelMzcGYwQW1jQk9ESHVuMkxINER1VHBmZFozODZPSE5pZWhRCkY4eGRhOVdCTmxpYmVJbkcvNWNjeGZVVGhGTEZCckw2R0kxOUlFQ0YyWHFqaVIyazZDTU53LyttNlJoTG1DRHcKMy82SWZMdDBPejQvd3J1Y3VQeTV4NC9McmVlcDVpbUdXeEhQN3VGKzF2elk5TEM4Q1RMZ3JFWURCY1RFRDFBZwprc1VBK2k1VHErZzlCdWtsVjRNclBLVXJPbHJhdG9MVUVhdWJxQkRHeW1HVnhTZzY5ZklMRU4zendpRFdOQm50ClJKN3cvWk54N2R2VnBFcFdxdnFnNkFXUDRKWEF0emtaekRVaHFnT0I3dVpUdldyQkRFYUdmWWU5OVRlNUprWmsKcUVTc3NodUV3RTA1ckwybnJaVllZaWNSL3A5SGpLVmZXNThYbnU4M1FVZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGx6Q0NBbitnQXdJQkFnSUlkU09uemhWK0xpb3dEUVlKS29aSWh2Y05BUUVMQlFBd1dURlhNRlVHQTFVRQpBd3hPYjNCbGJuTm9hV1owTFd0MVltVXRZWEJwYzJWeWRtVnlMVzl3WlhKaGRHOXlYMnh2WTJGc2FHOXpkQzF5ClpXTnZkbVZ5ZVMxelpYSjJhVzVuTFhOcFoyNWxja0F4Tmpjek1qTTVNalkyTUI0WERUSXpNREV3T1RBME5ERXcKTmxvWERUTXpNREV3TmpBME5ERXdOMW93V1RGWE1GVUdBMVVFQXd4T2IzQmxibk5vYVdaMExXdDFZbVV0WVhCcApjMlZ5ZG1WeUxXOXdaWEpoZEc5eVgyeHZZMkZzYUc5emRDMXlaV052ZG1WeWVTMXpaWEoyYVc1bkxYTnBaMjVsCmNrQXhOamN6TWpNNU1qWTJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXJuQTcKWVBQVDdlQU5HMjVSMjF2azBLOWNVSE4rekhDWHdacWVsbml6OEE1MHdmeU83YWtrck82dVhVYVhuRnFCaXF1YQpncGtjcm9BV0Y4WWcvMVdFUG92OWNFb1RWSWVMb1NMMXR4ZDlYejk5d2V1OXFIVjZDdzhPKy9tSkhralFobUVQCm9IQzlxZ2txSlgzcUVSaWFnVGx0NVRETElZVjZMRDlSbXY5czd5TjZpV01nelJNMzlpYkpVR1FjVUlDQjZGb3kKYk0vaGJxNjNXYk4vVTZSdzFEL0pBK3ZCeGlLNmYvR1hhaFFwT3FqR0xhS2xDUEdwUHNFMWhSUnBXWnVPVENGMgp5bXdGcTBCMkRLbEJhQW9VUjFaQUlLQklRa2Q5aWgxZWhmVm95QnNaWmQzNmtWRHV0dXArd3FQdEsyV1cwN3FuCmYwd1c2ZFFNUGZzSVd5cnhrUUlEQVFBQm8yTXdZVEFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVZS82SWlHUmZveHordGM4dUVsK1cvNi9uc0Vvd0h3WURWUjBqQkJndwpGb0FVZS82SWlHUmZveHordGM4dUVsK1cvNi9uc0Vvd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFUHBiWjh4CnE2SG5QYUVtQnA4VVB5WVgya2NaSW1jNXJYVFpYcG1Eb1BlbGYxKzM1d3M5b0EyTHJRUFM4eEhOUXhHMTI5bG0KUXZlTUdOM1ZHOEdxdCtXNFg3emhCd2JnNjk3bkEzanUwcTJDeEtGcWhqdE9rTk04T1l4cDk0cld1dGNjaTQ0SQpmMmVkT1FqMTBUOHRRdUZGQmlaV0tPcThTK25JTG1ZZExlV1RNdUFlRW1jUkczTXk1WWdTS05jcHQzZmRaSXgxClJZZFRSS3BneWdpVW0xQ0c5ZU0vVG9QaktEYlU0ZTlwK0padldZa2dqQ3VWL3BKaS84cGw4YWJHWUp4WW40dWoKVXAxVlJuWTZUY0h1SURNcWpIa3Z4L20zakRMVzJ6YzJ2UFp5UXZ1ZE82THY5WHJVdFpSZGpXaCtSMndob2IySgpxV283Z1NHRjFYSkFJakk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtVENDQW9HZ0F3SUJBZ0lJTlVyY00ybkwvczB3RFFZSktvWklodmNOQVFFTEJRQXdKakVrTUNJR0ExVUUKQXd3YmFXNW5jbVZ6Y3kxdmNHVnlZWFJ2Y2tBeE5qY3pNak01TXpFeE1CNFhEVEl6TURFd09UQTBOREUxTUZvWApEVEkxTURFd09EQTBOREUxTVZvd1BERTZNRGdHQTFVRUF3d3hLaTVoY0hCekxuTnVMV3h2WjJkMmJITXRhbk50CkxuRmxMbVJsZG1Oc2RYTjBaWEl1YjNCbGJuTm9hV1owTG1OdmJUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMb2pNdVowWS96UE5MNGpMMVNVMG1Sa1ZMamVqek85UW13UHVXbTdvcnQ0bzBFMQo2TEZpRHBJM2dibjlUK1haZ2o5b1J0Nms5b284WXFRU2dHZnVoUSs5WW9TZjIzMVg3a01WbEtDamh0R2xRZ3NYCk9aZjdEZ3BlSjNIYkFIN052cndrc1RuMlExOVFpV2hXWG9PZHFHU0ZPOEFlaUJISGwvYU9QRkRJbmg4ZTlkWTQKYlpsbXkvWTVORVo2YkZaaGlDVlZoRlQ3NFEreWd3aFEzbVg1SE9CTHFoUGpuUEMxNmZOcE5aRUJ4VFo0N3NqUgpkdEJYbGRraGtEa0ZyWE5ydkpvSFBtWnJFZGZtcDF4UE03KzB0RnZNUGlPSXBzcUkwNjR1bktMUFFzaHhKTlhJCm9zenpRbk9NRUxLN29UOE5GU1ByQktRN0xxSnNzVjlGOFV6dHZYa0NBd0VBQWFPQnREQ0JzVEFPQmdOVkhROEIKQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdFd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVgpIUTRFRmdRVTVMelBUNDZvKzhjSVFGZ2xlVmI1aDhXTHBFVXdId1lEVlIwakJCZ3dGb0FVOUdnbjNkd2psTHRiCjZlcWJKaVZCVEh4RVgrRXdQQVlEVlIwUkJEVXdNNEl4S2k1aGNIQnpMbk51TFd4dloyZDJiSE10YW5OdExuRmwKTG1SbGRtTnNkWE4wWlhJdWIzQmxibk5vYVdaMExtTnZiVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBUWdCWApEeURrZkcxQXpOR2l2ZVR4NXZkQUtWaktzVU1iOXE2Y1cyTEU1SlV6b05YaFZ6dm16aWFVWk5FQ09uZ2lFNk54Ck53K2ZGN2RJT3plYUV2RG5GQ2ZPZWFzTTdNVWUxejQ5UDAzbktGcGQvR0ptcWhDUnZqMi8yWmJDT0VWSTh2UGsKYzdjWWNmcUthNmNhQ09MUnRMMFk5em5sb3lvU0dQL254d3ExYVFFZEUwRkVXQXlFVG5DdFJsZFBhdXIwOFY4dAozbWp1MjV6KzBrRk1HRGdoa1VxWUk0UFdqR2QzYnVpN0NhQmZmQkR3UytxajZyVUtKK1h5MTdaR0hFRW4wS3QyCmo1blM1ZTZZUXA2cTZaMGVEZ2txaWhnY3k1L2owdkxsRVl4blIvNThCdUo1cVBBNHFxcXRaWXRteEUzUVptVjgKM1VOcWR5czhqL05vMmRDNUNRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREREQ0NBZlNnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMk56TXlNemt6TVRFd0hoY05Nak13TVRBNU1EUTBNVFV3V2hjTk1qVXdNVEE0Ck1EUTBNVFV4V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTJOek15TXprek1URXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRERkQXJobklCZEZ2QUN2NEhXSVJQSwpwM1phQXJla3d1YUlWNEdnM1IzQ0IxMXZ5SFphMkdRcVo3ODV6b2NJS1RXc2VuV1MvZCtIYzFMeGRFS1UweFk1ClpuSDJBS3ZWZm9qc2VXb3d2dlNSd2hDT0t2elhaZ3hLU0NyVGw4TCs2WnZLK3Q0ckxSdlJtYmtSWU5ScGs3Mk0KaysvM240bXRoS0VxamVEU01kY210WjFwOTdGeDhHaFM1cmhPY2hLa3V3WXl3MURaaWsvakhNVjNZdkJZS1hoRQp5N2U1bklWUmFEVENLanFwdUV2RFZOYXZVdkxFNnZqNk1kNks5VGhvVmtBR3RNSVpXTlZndWdiRzQwMHp5OVgrClhLWW51QzJUei95Q2VhVCt4U1BVR3lsQWFwZDRkMW5zMC9uL1ZsUDV0RHgrNmRVMFVsOHNGNG1lNUlmc2RibzcKQWdNQkFBR2pSVEJETUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUIwRwpBMVVkRGdRV0JCVDBhQ2ZkM0NPVXUxdnA2cHNtSlVGTWZFUmY0VEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBCks0TTd4cTFQblFSWFNWMUlYVjhlM1NsRlUwWjJCZkJ5NjdvcWhWNHFobnlXa2d6UWU2S1hWelB5alVFSmYybngKRWVjQjFNTWU5NVhMMVpxUjYwWnVYWUtHb2M2RTBLSklxdEx3d1RiSE44OTNmRytGNHVqaEk2QlFiVE1jVWlBMQpIVG1venA4Nm9SRUlmQUtJVkVIeEsxRzFqTDBocVBlaGY4ZjlhQUpuZU1OUkF3QXZ4dS9uWWEvVVZhSzlROUQvCjh2QjdrYXZ2R1lzUmp4VnpIMDFKUFdPZyt2Nm9rWlZjR0FDeXJ3MXZZR3VVbUczcjZoaDZXamVrNjExelk0aTcKWU9sZTVrRjFnRGtEVERKY2lPQVJrSGFXK05Pd2RKNU1hMWxNZUhMVlcwMlMrdmVleFo3UmU1V3dVU2RTamh3UgpYNkllZm45MmRGWkFsZ253bnYvRGRRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVVENDQWptZ0F3SUJBZ0lJTVlxYkJBd2MyTDB3RFFZSktvWklodmNOQVFFTEJRQXdOakUwTURJR0ExVUUKQXd3cmIzQmxibk5vYVdaMExYTmxjblpwWTJVdGMyVnlkbWx1WnkxemFXZHVaWEpBTVRZM016SXpPVEkyTkRBZQpGdzB5TXpBeE1Ea3dORFF4TUROYUZ3MHlOVEF6TURrd05EUXhNRFJhTURZeE5EQXlCZ05WQkFNTUsyOXdaVzV6CmFHbG1kQzF6WlhKMmFXTmxMWE5sY25acGJtY3RjMmxuYm1WeVFERTJOek15TXpreU5qUXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFRjYzViVmh0L1FYbzkrUVNURGZoK3U5Ynpwc1BVOXcxYgpXL25ub05scDZVaU95SmxCcHN6TGo2V2ozOE9kS29LTE9jbGg2c2dYSXJ2QXI2eVorTHYvTlpFY1VJQi9VZG1VClhkT0M4Z0RCTG5hQWZJY2RKcDJXUTlBeC94V05ZN01CMmpoTkNNa2dJSXN1U043QnlSSXlDcmJXYUJzWUZPQmsKQmNkbzBjbXpmbGlMcnlOMG1ienRXMm1ndWM3SHRvOWlyWEsvRFo5ekJmbldwdkxUOUZtbGdRZi9ReVRrVDZKNQpmeThpYmJjTjVSbStWeTd4dm9XK2hvSXd0M2JISEdSNUJwcGZjSE93dzVzZ1htUUIrNTdSNisydDB3c3BwcXp5CnZSVlo1eGVQSTBsc2paS2Q4a1hmdWc3bnVmQ0lBdk1YclczWVlMMFN3NnVNbEx5SVlEWkpBZ01CQUFHall6QmgKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlFKYzNvYgpIam41N1Y2T1dZT0VxUXN0YXJqK0J6QWZCZ05WSFNNRUdEQVdnQlFKYzNvYkhqbjU3VjZPV1lPRXFRc3RhcmorCkJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFtbkJiTml6VjRjTWNTd3JtUzkyRmp6QW9NdUJxSFpsbGF3QWQKMzdHODhZSTVLUzFTWVVmUWQxa0RIVmZxYTczbmZOendXSEswSGRmbkpzQldJeWpGY3luQ2pxbnhoeklzTUlIdwo0NUhQVXQyc2ZZTTdlNDBMazkrS09YeFlFTTNQS2R5TFdONDRRbUk3aVU5WVVsSjFON0RrbEswd1BVYTJoVCs5CnBMUmQzM09KWWlsUDhrdUQ1ek51eWlJUHRPZVBXNkxkd1c1dFUwdmlReStpbHE5eVc5NTZXTitOb0FZRVdZcCsKTGlPR0hOaXlxY3FGV3dUbWlYSWFFOUlHZFBGbFR2cVNtckZoZk5BRjJkT2NKMHk5S245Y2tKb3kraVRpZ0d6RQpTNGFaWTZlaVl4Q21NZkFTM3pEcXVYbmZPTGhoTERRYWpPVUprWXlJbDA4akwyWndEQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    token: OTE2IGJ5dGVzIGxvbmc=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: 4a730e43-e979-49d7-95f0-7b69bf2f76c2
    creationTimestamp: "2023-01-09T04:45:26Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2023-01-09T04:45:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:46:05Z"
    name: default-token-pvhvt
    namespace: openshift-dns
    resourceVersion: "17635"
    uid: 3ca91b92-fd3b-4fd2-8dba-0ec89348ca13
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: NjkxNCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: 97a54c83-0014-469f-92d1-1dced7be0896
      openshift.io/token-secret.name: deployer-token-m8kr8
      openshift.io/token-secret.value: ""
    creationTimestamp: "2023-01-09T04:45:31Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7899b789-862b-4d36-882a-928a102546e3"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2023-01-09T04:47:33Z"
    name: deployer-dockercfg-nn9mf
    namespace: openshift-dns
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: deployer-token-m8kr8
      uid: 7899b789-862b-4d36-882a-928a102546e3
    resourceVersion: "20871"
    uid: 4c5ec6c4-ca6d-4f36-86b5-f11f71ad6900
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MTMgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: OTIwIGJ5dGVzIGxvbmc=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: 97a54c83-0014-469f-92d1-1dced7be0896
    creationTimestamp: "2023-01-09T04:45:31Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2023-01-09T04:45:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:46:04Z"
    name: deployer-token-m8kr8
    namespace: openshift-dns
    resourceVersion: "17558"
    uid: 7899b789-862b-4d36-882a-928a102546e3
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ1ekNDQXMrZ0F3SUJBZ0lJYWJhUy9QSEdhY013RFFZSktvWklodmNOQVFFTEJRQXdOakUwTURJR0ExVUUKQXd3cmIzQmxibk5vYVdaMExYTmxjblpwWTJVdGMyVnlkbWx1WnkxemFXZHVaWEpBTVRZM016SXpPVEkyTkRBZQpGdzB5TXpBeE1Ea3dORFF4TXpaYUZ3MHlOVEF4TURnd05EUXhNemRhTUNneEpqQWtCZ05WQkFNVEhXUnVjeTFrClpXWmhkV3gwTG05d1pXNXphR2xtZEMxa2JuTXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBNWRkSGR2UkxOcXJ6MnFQWXFZeEpMNDBrV1NYU0t2ZHRTQzZ1ZTAvRHMrRUFPTFpNR0xvbQpONDRBVmlOek95dTA2TGZmRjdIcEpiYUlLb3pCR0JJRTY3OWFIVnNCQ2RJVWRJNENNY2pCdktBK0hDbWd1Q2ZUCkRRdlQ0U20wZkExMEQrYmhSUm5TR0RmS3NFcVRFNjBKZnlQMHpVSG1sQnhoNFNxMVFDYTVZVFJDVmE1Q2lVOG8Ka3dOZzEzMHA4ZTBwSXo1THRFQVdWZ3cwTEZ0UmdxUGFESFg1QjlUdjc3OUg0NW9tcDVoS0dZaC9JelIxOUxJbwpUL2NKTkVwVVFtazN2WFBYMUkxUWFNQmJnZFltYVppNjBiMnFHNmJuT2N0UFFidmZFNGw2STY2ZVdKREZtelM4CkR4a2dJNzByQmV4N1pZUTF0dEwwbFFkclNXbXgrRHhjdVFJREFRQUJvNElCQlRDQ0FRRXdEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01CTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwTwpCQllFRkpjZm1BTGN5Qi9Ed0xNdHFKWC9BenBzQlBMUk1COEdBMVVkSXdRWU1CYUFGQWx6ZWhzZU9mbnRYbzVaCmc0U3BDeTFxdVA0SE1GVUdBMVVkRVFST01FeUNIV1J1Y3kxa1pXWmhkV3gwTG05d1pXNXphR2xtZEMxa2JuTXUKYzNaamdpdGtibk10WkdWbVlYVnNkQzV2Y0dWdWMyaHBablF0Wkc1ekxuTjJZeTVqYkhWemRHVnlMbXh2WTJGcwpNRFVHQ3lzR0FRUUJrZ2dSWkFJQkJDWVRKREkyTXpVMU56STRMVE5rT1RJdE5HSXlPQzA1TldNekxUWTFOMk5oCk9HRXpaRE01WmpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWY1dG5uOXlYTmpDWENCd0dUR2wwL0svcGhVdzMKV1F4UHU1WWNzYmV5NVRTMFB2S2gyV3hJTlZrSWxrclM4V3VUak9GMURVTzVUVDFQdmpNMUU4K0t2UFVDeGJzTgppVzBWRTJIazFCeTlEcnNXYi9BRUNRaThiVHZMTkVYdzdlaTkzemViWjVnNzVYa0JKdGM3LzBOWGd2MnQxM1d1CnRLUmNyajdkaXFZaDJEdlNGdmJNMUQ1cGIxODJJeTJjb1J6bW93VkFZZ20vWjltbXBUVjVOekw5emJZeUJEcFIKNUQwa2t4Wm4weWRialN5aDlnVFNKanMzK013M3ZNNzBFZHZldVhaTTlMWTJMWjZxVDh4ajNQMzN3dm1YcjdrVQpTVlJvUWxzc3pENFc5VGlDY0lGdGQ5VzQxWHJDa2FKaGlVdVJUdFBVWkZCWUg1Q2hOMXdDNGtLRWhnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFVUQ0NBam1nQXdJQkFnSUlNWXFiQkF3YzJMMHdEUVlKS29aSWh2Y05BUUVMQlFBd05qRTBNRElHQTFVRQpBd3dyYjNCbGJuTm9hV1owTFhObGNuWnBZMlV0YzJWeWRtbHVaeTF6YVdkdVpYSkFNVFkzTXpJek9USTJOREFlCkZ3MHlNekF4TURrd05EUXhNRE5hRncweU5UQXpNRGt3TkRReE1EUmFNRFl4TkRBeUJnTlZCQU1NSzI5d1pXNXoKYUdsbWRDMXpaWEoyYVdObExYTmxjblpwYm1jdGMybG5ibVZ5UURFMk56TXlNemt5TmpRd2dnRWlNQTBHQ1NxRwpTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEVGNjNWJWaHQvUVhvOStRU1REZmgrdTlienBzUFU5dzFiClcvbm5vTmxwNlVpT3lKbEJwc3pMajZXajM4T2RLb0tMT2NsaDZzZ1hJcnZBcjZ5WitMdi9OWkVjVUlCL1VkbVUKWGRPQzhnREJMbmFBZkljZEpwMldROUF4L3hXTlk3TUIyamhOQ01rZ0lJc3VTTjdCeVJJeUNyYldhQnNZRk9CawpCY2RvMGNtemZsaUxyeU4wbWJ6dFcybWd1YzdIdG85aXJYSy9EWjl6QmZuV3B2TFQ5Rm1sZ1FmL1F5VGtUNko1CmZ5OGliYmNONVJtK1Z5N3h2b1craG9Jd3QzYkhIR1I1QnBwZmNIT3d3NXNnWG1RQis1N1I2KzJ0MHdzcHBxenkKdlJWWjV4ZVBJMGxzalpLZDhrWGZ1ZzdudWZDSUF2TVhyVzNZWUwwU3c2dU1sTHlJWURaSkFnTUJBQUdqWXpCaApNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUUpjM29iCkhqbjU3VjZPV1lPRXFRc3RhcmorQnpBZkJnTlZIU01FR0RBV2dCUUpjM29iSGpuNTdWNk9XWU9FcVFzdGFyaisKQnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQW1uQmJOaXpWNGNNY1N3cm1TOTJGanpBb011QnFIWmxsYXdBZAozN0c4OFlJNUtTMVNZVWZRZDFrREhWZnFhNzNuZk56d1dISzBIZGZuSnNCV0l5akZjeW5DanFueGh6SXNNSUh3CjQ1SFBVdDJzZllNN2U0MExrOStLT1h4WUVNM1BLZHlMV040NFFtSTdpVTlZVWxKMU43RGtsSzB3UFVhMmhUKzkKcExSZDMzT0pZaWxQOGt1RDV6TnV5aUlQdE9lUFc2TGR3VzV0VTB2aVF5K2lscTl5Vzk1NldOK05vQVlFV1lwKwpMaU9HSE5peXFjcUZXd1RtaVhJYUU5SUdkUEZsVHZxU21yRmhmTkFGMmRPY0oweTlLbjlja0pveStpVGlnR3pFClM0YVpZNmVpWXhDbU1mQVMzekRxdVhuZk9MaGhMRFFhak9VSmtZeUlsMDhqTDJad0RBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    tls.key: MTY3NSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      service.alpha.openshift.io/expiry: "2025-01-08T04:41:37Z"
      service.beta.openshift.io/expiry: "2025-01-08T04:41:37Z"
      service.beta.openshift.io/originating-service-name: dns-default
      service.beta.openshift.io/originating-service-uid: 26355728-3d92-4b28-95c3-657ca8a3d39f
    creationTimestamp: "2023-01-09T04:41:37Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:tls.crt: {}
          f:tls.key: {}
        f:metadata:
          f:annotations:
            .: {}
            f:service.alpha.openshift.io/expiry: {}
            f:service.beta.openshift.io/expiry: {}
            f:service.beta.openshift.io/originating-service-name: {}
            f:service.beta.openshift.io/originating-service-uid: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"26355728-3d92-4b28-95c3-657ca8a3d39f"}: {}
        f:type: {}
      manager: service-ca-operator
      operation: Update
      time: "2023-01-09T04:41:37Z"
    name: dns-default-metrics-tls
    namespace: openshift-dns
    ownerReferences:
    - apiVersion: v1
      kind: Service
      name: dns-default
      uid: 26355728-3d92-4b28-95c3-657ca8a3d39f
    resourceVersion: "7447"
    uid: a838da70-95a9-45ab-8642-6eff154a7253
  type: kubernetes.io/tls
- apiVersion: v1
  data:
    .dockercfg: Njc3MCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: dns
      kubernetes.io/service-account.uid: 98fcde4a-ad8a-476d-b07b-1c9e7cf90b78
      openshift.io/token-secret.name: dns-token-svc2z
      openshift.io/token-secret.value: ""
    creationTimestamp: "2023-01-09T04:45:29Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d06387cc-bb1b-4413-809f-c385dd8e8233"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2023-01-09T04:47:33Z"
    name: dns-dockercfg-vvlbk
    namespace: openshift-dns
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: dns-token-svc2z
      uid: d06387cc-bb1b-4413-809f-c385dd8e8233
    resourceVersion: "21027"
    uid: 46e205a3-72b1-4544-822e-0d94b69b98e7
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MTMgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: OTAwIGJ5dGVzIGxvbmc=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: dns
      kubernetes.io/service-account.uid: 98fcde4a-ad8a-476d-b07b-1c9e7cf90b78
    creationTimestamp: "2023-01-09T04:45:26Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2023-01-09T04:45:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:46:05Z"
    name: dns-token-svc2z
    namespace: openshift-dns
    resourceVersion: "17603"
    uid: d06387cc-bb1b-4413-809f-c385dd8e8233
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: NzA1OCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: node-resolver
      kubernetes.io/service-account.uid: f7b5ba55-8536-4613-89bf-273b508fac97
      openshift.io/token-secret.name: node-resolver-token-nv6lh
      openshift.io/token-secret.value: ""
    creationTimestamp: "2023-01-09T04:45:29Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c7e2e3af-ebe9-4da9-8edf-0d5f95e0a0a8"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2023-01-09T04:47:33Z"
    name: node-resolver-dockercfg-9wgnl
    namespace: openshift-dns
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: node-resolver-token-nv6lh
      uid: c7e2e3af-ebe9-4da9-8edf-0d5f95e0a0a8
    resourceVersion: "20845"
    uid: 3cde63a2-da46-4f9a-8900-3aaf88344e76
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MTMgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: OTQwIGJ5dGVzIGxvbmc=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: node-resolver
      kubernetes.io/service-account.uid: f7b5ba55-8536-4613-89bf-273b508fac97
    creationTimestamp: "2023-01-09T04:45:26Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2023-01-09T04:45:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-01-09T04:46:05Z"
    name: node-resolver-token-nv6lh
    namespace: openshift-dns
    resourceVersion: "17728"
    uid: c7e2e3af-ebe9-4da9-8edf-0d5f95e0a0a8
  type: kubernetes.io/service-account-token
kind: SecretList
metadata:
  resourceVersion: "268423"
